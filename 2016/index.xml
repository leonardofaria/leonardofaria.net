<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2016s on Leonardo Faria</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/</link><description>Recent content in 2016s on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 29 Dec 2016 16:36:55 -0200</lastBuildDate><atom:link href="https://leonardofaria.github.io/leonardofaria.net/2016/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloudready or how to get a Chrome OS in a non-Chromebook laptop</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/12/29/cloudready-or-how-to-get-a-chrome-os-in-a-non-chromebook-laptop/</link><pubDate>Thu, 29 Dec 2016 16:36:55 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/12/29/cloudready-or-how-to-get-a-chrome-os-in-a-non-chromebook-laptop/</guid><description>&lt;p>Few months ago I saw in The Verge a &lt;a href="http://www.theverge.com/2016/3/7/11173836/neverware-cloudready-how-to-convert-pc-into-chromebook-free">post&lt;/a> about &lt;a href="https://www.neverware.com/">CloudReady&lt;/a>. CloudReady is a remake of Chromium OS ready to go in old PCs or Macs. The company behind the product sells its solutions/support to organizations interested in keeping using their hardware. It&amp;rsquo;s really interesting.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/NAakr95sLOI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>I am writing this post because my wife has an old Samsung laptop and I finally found a time to give a chance to CloudReady. Her laptop was initially running Windows 7 and it was updated to Windows 10. The idea was using CloudReady in another partition and using Grub to handle the boot process like any Linux distribution.&lt;/p>
&lt;p>Unfortunately, this process was more difficult that I thought. In fact CloudReady supports &lt;a href="https://guide.neverware.com/install-cloudready/#select-dual-boot-or-standalone">dual-boot installation&lt;/a> but there are few details to pay attention:&lt;/p>
&lt;ul>
&lt;li>If you are using an old computer, you probably need to convert Windows BIOS (MBR) to UEFI. I am not going to describe this once Microsoft Technet has a &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/14286.converting-windows-bios-installation-to-uefi.aspx">detailed article&lt;/a> about it.&lt;/li>
&lt;li>I initially partitioned the HDD in 1 partition for Windows and I left unlocated space for CloudReady. Windows 10 was installed in its partition without problems.&lt;/li>
&lt;li>The last step was booting CloudReady from a Flash Drive and proceding the installation according to its &lt;a href="https://guide.neverware.com/critical-requirements/">documentation&lt;/a> The dual-boot worked like a charm. &lt;/ul>&lt;/li>
&lt;/ul>
&lt;p>My first impression is that CloudReady is faster and smooth than Windows. In addition, there are no infinite updates, malwares and all the crappy things that we are used to seeing in Windows. It is definitely a good way to bring to life again an old computer. One bad thing that happened it that CloudReady stopped working and I needed to redo all the installation process.&lt;/p></description></item><item><title>Another Meetup presentation</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/12/02/another-meetup-presentation/</link><pubDate>Fri, 02 Dec 2016 16:41:57 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/12/02/another-meetup-presentation/</guid><description>&lt;p>In yesterday &lt;a href="https://www.meetup.com/Code-Coffee-Vancouver/events/235583183/">Code &amp;amp; Coffee&lt;/a> Meetup I talked about how Web APIs can improve User Experience. I watched &lt;a href="http://zenorocha.com">Zeno Rocha&lt;/a> talking about it few months ago then I decided to study/share the subject.&lt;/p>
&lt;p>Here are &lt;a href="https://leonardofaria.github.io/web-apis-to-improve-ux-slides/">my slides&lt;/a> and the &lt;a href="https://github.com/leonardofaria/web-apis-to-improve-ux">example repository&lt;/a> that I created for the event.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-1024x768.jpg" alt="" width="1024" height="768" class="aligncenter size-large wp-image-1802" srcset="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-1024x768.jpg 1024w, https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-300x225.jpg 300w, https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-768x576.jpg 768w" sizes="(max-width: 1024px) 100vw, 1024px" />&lt;/p></description></item><item><title>Serving raw files directly from Github</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/08/06/serving-raw-files-directly-from-github/</link><pubDate>Sat, 06 Aug 2016 20:49:30 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/08/06/serving-raw-files-directly-from-github/</guid><description>&lt;p>We usually create HTML files in our Github repositories, but how to show this data in the browser? &lt;a href="http://rawgit.com">RawGit&lt;/a> is a solution to serve files with the correct content types.&lt;/p>
&lt;p>Example: The WordPress &lt;code>readme.html&lt;/code> file can be shown in the following URL:&lt;/p>
&lt;pre>&lt;code>https://rawgit.com/WordPress/WordPress/master/readme.html
&lt;/code>&lt;/pre>&lt;p>You only need to follow the formula:&lt;/p>
&lt;pre>&lt;code>https://rawgit.com/USER/REPOSITORY/BRANCH/file.html
&lt;/code>&lt;/pre>&lt;p>The advantage of using RawGit over Github Pages is that RawGit works with all branches, while Github Pages requires a gh-pages branch. Last not the least, the &lt;a href="https://github.com/rgrove/rawgit">source code&lt;/a> of this solution is also available in Github.&lt;/p></description></item><item><title>Todo list using a Sinatra REST API</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/07/26/todo-list-using-sinatra-rest-api/</link><pubDate>Tue, 26 Jul 2016 19:01:16 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/07/26/todo-list-using-sinatra-rest-api/</guid><description>&lt;p>I am attending to a &lt;a href="http://langara.ca/programs-and-courses/programs/web-and-mobile-app/index.html">post-degree program&lt;/a> and one of its courses is Server-Side Scripting. The professor gave us a project which students should create a project and my colleague and I created a &lt;a href="http://sinatra-todo-api.herokuapp.com">Sinatra REST API&lt;/a> for a &lt;a href="http://leonardofaria.github.io/todo">todo list application&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/07/todo.gif" alt="">&lt;/p>
&lt;p>The back end is a decent example of how to use Sinatra and Active Record to create simple APIs. In the &lt;a href="https://github.com/leonardofaria/todo-api#todo-api">repository&amp;rsquo;s readme&lt;/a>, I show how to install it and use it. In this post, I detail what I coded:&lt;/p>
&lt;h2 id="managing-dependencies-and-configuring-the-database">Managing dependencies and configuring the database&lt;/h2>
&lt;p>First, I need to specify the dependencies for this project. Here are the gems:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">ruby &lt;span style="color:#d14">&amp;#39;2.2.2&amp;#39;&lt;/span>
source &lt;span style="color:#d14">&amp;#39;https://rubygems.org&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;sinatra&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;sinatra-cross_origin&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;json&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;activerecord&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;pg&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;sinatra-activerecord&amp;#39;&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;rake&amp;#39;&lt;/span>
group &lt;span style="color:#990073">:development&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
gem &lt;span style="color:#d14">&amp;#39;shotgun&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this project, I use &lt;a href="https://github.com/rtomayko/shotgun">shotgun&lt;/a> to update my Sinatra app without restarting the server every time that I change my &lt;code>app.rb&lt;/code>. The gem &lt;a href="https://github.com/britg/sinatra-cross_origin">sinatra-cross_origin&lt;/a> is needed to allow me perform requests externally. In addition, I use activerecord as ORM and &lt;a href="https://github.com/janko-m/sinatra-activerecord">sinatra-activerecord&lt;/a> to extends Sinatra with extension methods and Rake tasks.&lt;/p>
&lt;p>The file &lt;code>environment.rb&lt;/code> specifies the database credentials:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">configure &lt;span style="color:#990073">:production&lt;/span>, &lt;span style="color:#990073">:development&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
set &lt;span style="color:#990073">:show_exceptions&lt;/span>, &lt;span style="color:#000;font-weight:bold">true&lt;/span>
db &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">URI&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>parse(&lt;span style="color:#008080">ENV&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;DATABASE_URL&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">||&lt;/span> &lt;span style="color:#d14">&amp;#39;postgres://127.0.0.1/todo&amp;#39;&lt;/span>)
&lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Base&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>establish_connection(
&lt;span style="color:#990073">adapter&lt;/span>: db&lt;span style="color:#000;font-weight:bold">.&lt;/span>scheme &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#d14">&amp;#39;postgres&amp;#39;&lt;/span> ? &lt;span style="color:#d14">&amp;#39;postgresql&amp;#39;&lt;/span> : db&lt;span style="color:#000;font-weight:bold">.&lt;/span>scheme,
&lt;span style="color:#990073">host&lt;/span>: db&lt;span style="color:#000;font-weight:bold">.&lt;/span>host,
&lt;span style="color:#990073">username&lt;/span>: db&lt;span style="color:#000;font-weight:bold">.&lt;/span>user,
&lt;span style="color:#990073">password&lt;/span>: db&lt;span style="color:#000;font-weight:bold">.&lt;/span>password,
&lt;span style="color:#990073">database&lt;/span>: db&lt;span style="color:#000;font-weight:bold">.&lt;/span>path&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#099">1&lt;/span>&lt;span style="color:#000;font-weight:bold">..-&lt;/span>&lt;span style="color:#099">1&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>,
&lt;span style="color:#990073">encoding&lt;/span>: &lt;span style="color:#d14">&amp;#39;utf8&amp;#39;&lt;/span>
)
&lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Base&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>class_eval &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#458;font-weight:bold">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#900;font-weight:bold">reset_autoincrement&lt;/span>(options&lt;span style="color:#000;font-weight:bold">=&lt;/span>{})
options&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#990073">:to&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">||=&lt;/span> &lt;span style="color:#099">1&lt;/span>
&lt;span style="color:#000;font-weight:bold">case&lt;/span> &lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>connection&lt;span style="color:#000;font-weight:bold">.&lt;/span>adapter_name
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#d14">&amp;#39;MySQL&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>connection&lt;span style="color:#000;font-weight:bold">.&lt;/span>execute &lt;span style="color:#d14">&amp;#34;ALTER TABLE &lt;/span>&lt;span style="color:#d14">#{&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>table_name&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> AUTO_INCREMENT=&lt;/span>&lt;span style="color:#d14">#{&lt;/span>options&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#990073">:to&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#d14">&amp;#39;PostgreSQL&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>connection&lt;span style="color:#000;font-weight:bold">.&lt;/span>execute &lt;span style="color:#d14">&amp;#34;ALTER SEQUENCE &lt;/span>&lt;span style="color:#d14">#{&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>table_name&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">_id_seq RESTART WITH &lt;/span>&lt;span style="color:#d14">#{&lt;/span>options&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#990073">:to&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">;&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#d14">&amp;#39;SQLite&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>connection&lt;span style="color:#000;font-weight:bold">.&lt;/span>execute &lt;span style="color:#d14">&amp;#34;UPDATE sqlite_sequence SET seq=&lt;/span>&lt;span style="color:#d14">#{&lt;/span>options&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#990073">:to&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> WHERE name=&amp;#39;&lt;/span>&lt;span style="color:#d14">#{&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>table_name&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#39;;&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I created a &lt;code>reset_autoincrement&lt;/code> method that will be used in my seeds file. I will talk about it soon. I also created a cors.rb file that enables Cross Domain Resource Sharing (CORS).&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">configure &lt;span style="color:#000;font-weight:bold">do&lt;/span>
set &lt;span style="color:#990073">:allow_origin&lt;/span>, &lt;span style="color:#990073">:any&lt;/span>
set &lt;span style="color:#990073">:allow_methods&lt;/span>, &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#990073">:get&lt;/span>, &lt;span style="color:#990073">:post&lt;/span>, &lt;span style="color:#990073">:options&lt;/span>, &lt;span style="color:#990073">:delete&lt;/span>, &lt;span style="color:#990073">:put&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
enable &lt;span style="color:#990073">:cross_origin&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
options &lt;span style="color:#d14">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
response&lt;span style="color:#000;font-weight:bold">.&lt;/span>headers&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#34;Allow&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;HEAD,GET,PUT,POST,OPTIONS,DELETE&amp;#34;&lt;/span>
response&lt;span style="color:#000;font-weight:bold">.&lt;/span>headers&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#34;Access-Control-Allow-Headers&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;X-Requested-With, X-HTTP-Method-Override, Content-Type, Cache-Control, Accept&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Last not the least, I need to create a &lt;code>Rakefile&lt;/code> that will be used on my rake tasks:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;sinatra/activerecord/rake&amp;#39;&lt;/span>
namespace &lt;span style="color:#990073">:db&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
task &lt;span style="color:#990073">:load_config&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#34;./app&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="defining-models">Defining models&lt;/h2>
&lt;center>
&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/07/diagram.png" alt="Diagram" width="250" height="149" class="aligncenter size-full wp-image-1770" />
&lt;/center>
&lt;p>As you can see in ERD above, my todo list has two entities: &lt;code>List&lt;/code> and &lt;code>Task&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Task&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Base&lt;/span>
belongs_to &lt;span style="color:#990073">:list&lt;/span>
validates &lt;span style="color:#990073">:name&lt;/span>, &lt;span style="color:#990073">presence&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
validates &lt;span style="color:#990073">:list_id&lt;/span>, &lt;span style="color:#990073">presence&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">List&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Base&lt;/span>
has_many &lt;span style="color:#990073">:tasks&lt;/span>, &lt;span style="color:#990073">dependent&lt;/span>: &lt;span style="color:#990073">:destroy&lt;/span>
validates &lt;span style="color:#990073">:name&lt;/span>, &lt;span style="color:#990073">presence&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
validates &lt;span style="color:#990073">:color&lt;/span>, &lt;span style="color:#990073">presence&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>, &lt;span style="color:#0086b3">format&lt;/span>: &lt;span style="color:#009926">/\A#?(?:[A-F0-9]{3}){1,2}\z/i&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I used the &lt;a href="http://guides.rubyonrails.org/active_record_validations.html">&lt;code>validates&lt;/code>&lt;/a> method to ensure some valid data. The attribute color, for example, must be a hexadecimal color. The next step is creating the migrations:&lt;/p>
&lt;pre>&lt;code>$ rake db:create_migration NAME=lists
&lt;/code>&lt;/pre>&lt;p>This command creates a file inside &lt;code>db/migrate&lt;/code>. This is my migration file:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Lists&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Migration&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">up&lt;/span>
create_table &lt;span style="color:#990073">:lists&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>t&lt;span style="color:#000;font-weight:bold">|&lt;/span>
t&lt;span style="color:#000;font-weight:bold">.&lt;/span>string &lt;span style="color:#990073">:name&lt;/span>
t&lt;span style="color:#000;font-weight:bold">.&lt;/span>string &lt;span style="color:#990073">:color&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">down&lt;/span>
drop_table &lt;span style="color:#990073">:lists&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The same applies to Task:&lt;/p>
&lt;p>&lt;code>$ rake db:create_migration NAME=tasks&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Tasks&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Migration&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">up&lt;/span>
create_table &lt;span style="color:#990073">:tasks&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>t&lt;span style="color:#000;font-weight:bold">|&lt;/span>
t&lt;span style="color:#000;font-weight:bold">.&lt;/span>string &lt;span style="color:#990073">:name&lt;/span>
t&lt;span style="color:#000;font-weight:bold">.&lt;/span>references &lt;span style="color:#990073">:list&lt;/span>, &lt;span style="color:#990073">foreign_key&lt;/span>: &lt;span style="color:#000;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">down&lt;/span>
drop_table &lt;span style="color:#990073">:tasks&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After defining the table schema, it&amp;rsquo;s time to create the tables on the database:&lt;/p>
&lt;p>&lt;code>$ rake db:migrate&lt;/code>&lt;/p>
&lt;h2 id="creating-the-api-routes">Creating the API routes&lt;/h2>
&lt;p>Here is the initial version of my &lt;code>app.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;sinatra&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;sinatra/cross_origin&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;sinatra/activerecord&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;./config/environments&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;./config/cors&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;./models/list&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;./models/task&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;json&amp;#39;&lt;/span>
before &lt;span style="color:#000;font-weight:bold">do&lt;/span>
content_type &lt;span style="color:#990073">:json&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
get &lt;span style="color:#d14">&amp;#39;/lists&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>all&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json(&lt;span style="color:#000;font-weight:bold">include&lt;/span>: &lt;span style="color:#990073">:tasks&lt;/span>)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
get &lt;span style="color:#d14">&amp;#39;/lists/:id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">id&lt;/span>: params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json(&lt;span style="color:#000;font-weight:bold">include&lt;/span>: &lt;span style="color:#990073">:tasks&lt;/span>)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
post &lt;span style="color:#d14">&amp;#39;/lists&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
list &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>new(params)
&lt;span style="color:#000;font-weight:bold">if&lt;/span> list&lt;span style="color:#000;font-weight:bold">.&lt;/span>save
list&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json(&lt;span style="color:#000;font-weight:bold">include&lt;/span>: &lt;span style="color:#990073">:tasks&lt;/span>)
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
halt &lt;span style="color:#099">422&lt;/span>, list&lt;span style="color:#000;font-weight:bold">.&lt;/span>errors&lt;span style="color:#000;font-weight:bold">.&lt;/span>full_messages&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
put &lt;span style="color:#d14">&amp;#39;/lists/:id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
list &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">id&lt;/span>: params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first
&lt;span style="color:#000;font-weight:bold">if&lt;/span> list
list&lt;span style="color:#000;font-weight:bold">.&lt;/span>name &lt;span style="color:#000;font-weight:bold">=&lt;/span> params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> params&lt;span style="color:#000;font-weight:bold">.&lt;/span>has_key?(&lt;span style="color:#d14">&amp;#39;name&amp;#39;&lt;/span>)
list&lt;span style="color:#000;font-weight:bold">.&lt;/span>color &lt;span style="color:#000;font-weight:bold">=&lt;/span> params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;color&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> params&lt;span style="color:#000;font-weight:bold">.&lt;/span>has_key?(&lt;span style="color:#d14">&amp;#39;color&amp;#39;&lt;/span>)
&lt;span style="color:#000;font-weight:bold">if&lt;/span> list&lt;span style="color:#000;font-weight:bold">.&lt;/span>save
list&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
halt &lt;span style="color:#099">422&lt;/span>, list&lt;span style="color:#000;font-weight:bold">.&lt;/span>errors&lt;span style="color:#000;font-weight:bold">.&lt;/span>full_messages&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
delete &lt;span style="color:#d14">&amp;#39;/lists/:id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
list &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">id&lt;/span>: params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#000;font-weight:bold">if&lt;/span> list&lt;span style="color:#000;font-weight:bold">.&lt;/span>destroy_all
{&lt;span style="color:#990073">success&lt;/span>: &lt;span style="color:#d14">&amp;#34;ok&amp;#34;&lt;/span>}&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
halt &lt;span style="color:#099">500&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The routes for Task entity are very similar:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">get &lt;span style="color:#d14">&amp;#39;/tasks&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>all&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
get &lt;span style="color:#d14">&amp;#39;/tasks/:id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">id&lt;/span>: params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
post &lt;span style="color:#d14">&amp;#39;/tasks&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
task &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>new(params)
&lt;span style="color:#000;font-weight:bold">if&lt;/span> task&lt;span style="color:#000;font-weight:bold">.&lt;/span>save
task&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
halt &lt;span style="color:#099">422&lt;/span>, task&lt;span style="color:#000;font-weight:bold">.&lt;/span>errors&lt;span style="color:#000;font-weight:bold">.&lt;/span>full_messages&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
put &lt;span style="color:#d14">&amp;#39;/tasks/:id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
task &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">id&lt;/span>: params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first
&lt;span style="color:#000;font-weight:bold">if&lt;/span> task
task&lt;span style="color:#000;font-weight:bold">.&lt;/span>name &lt;span style="color:#000;font-weight:bold">=&lt;/span> params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;name&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> params&lt;span style="color:#000;font-weight:bold">.&lt;/span>has_key?(&lt;span style="color:#d14">&amp;#39;name&amp;#39;&lt;/span>)
&lt;span style="color:#000;font-weight:bold">if&lt;/span> task&lt;span style="color:#000;font-weight:bold">.&lt;/span>save
task&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
halt &lt;span style="color:#099">422&lt;/span>, task&lt;span style="color:#000;font-weight:bold">.&lt;/span>errors&lt;span style="color:#000;font-weight:bold">.&lt;/span>full_messages&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
delete &lt;span style="color:#d14">&amp;#39;/tasks/:id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
task &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">id&lt;/span>: params&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#000;font-weight:bold">if&lt;/span> task&lt;span style="color:#000;font-weight:bold">.&lt;/span>destroy_all
{&lt;span style="color:#990073">success&lt;/span>: &lt;span style="color:#d14">&amp;#34;ok&amp;#34;&lt;/span>}&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_json
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
halt &lt;span style="color:#099">500&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I added two extra routes to this application. One will render a &lt;code>index.html&lt;/code> file, which I describe the project. The another one will populate the database with my initial data:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">get &lt;span style="color:#d14">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
content_type &lt;span style="color:#990073">:html&lt;/span>
send_file &lt;span style="color:#d14">&amp;#39;./public/index.html&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
get &lt;span style="color:#d14">&amp;#39;/refresh&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
&lt;span style="color:#998;font-style:italic"># Clean the database and create the initial data&lt;/span>
&lt;span style="color:#0086b3">load&lt;/span> &lt;span style="color:#d14">&amp;#39;./db/seeds.rb&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Time to create the &lt;code>config.ru&lt;/code> file, responsable for start the application:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#39;./app&amp;#39;&lt;/span>
run &lt;span style="color:#008080">Sinatra&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Application&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Everything is done, let&amp;rsquo;s go:&lt;/p>
&lt;p>&lt;code>$ shotgun&lt;/code>&lt;/p>
&lt;p>Hopefully, shotgun should return something like:&lt;/p>
&lt;pre>&lt;code>== Shotgun/WEBrick on http://127.0.0.1:9393/
[2016-08-03 19:51:50] INFO WEBrick 1.3.1
[2016-08-03 19:51:50] INFO ruby 2.2.2 (2015-04-13) [x86_64-darwin14]
[2016-08-03 19:51:50] INFO WEBrick::HTTPServer#start: pid=13348 port=9393
&lt;/code>&lt;/pre>&lt;p>After that, you will be able to do requests as I did:&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2016/07/httpie.png" class="aligncenter" />&lt;/p>
&lt;h2 id="seeding-initial-data">Seeding initial data&lt;/h2>
&lt;p>The file &lt;code>db/seeds.rb&lt;/code> populates the database with initial data:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>delete_all
&lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>delete_all
&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>reset_autoincrement
&lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>reset_autoincrement
&lt;span style="color:#0086b3">puts&lt;/span> &lt;span style="color:#d14">&amp;#39;Creating sample lists&amp;#39;&lt;/span>
colors &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;54b2a1&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;95d5cf&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;809bbe&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;98d2f3&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;80bf86&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;a3d49f&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;Todo&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Movies&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Supermarket&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">].&lt;/span>each_with_index &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>list, index&lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>find_or_create_by(&lt;span style="color:#0086b3">name&lt;/span>: list, &lt;span style="color:#990073">color&lt;/span>: colors&lt;span style="color:#000;font-weight:bold">[&lt;/span>index&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#0086b3">puts&lt;/span> &lt;span style="color:#d14">&amp;#39;Creating sample tasks&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;Nathan\&amp;#39;s Assignment&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Go to Meetup&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">].&lt;/span>each &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>task&lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>find_or_create_by(&lt;span style="color:#0086b3">name&lt;/span>: task, &lt;span style="color:#990073">list&lt;/span>: &lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">name&lt;/span>: &lt;span style="color:#d14">&amp;#39;Todo&amp;#39;&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;The Godfather&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Star Wars&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">].&lt;/span>each &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>task&lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>find_or_create_by(&lt;span style="color:#0086b3">name&lt;/span>: task, &lt;span style="color:#990073">list&lt;/span>: &lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">name&lt;/span>: &lt;span style="color:#d14">&amp;#39;Movies&amp;#39;&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#d14">&amp;#39;Milk&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Bread&amp;#39;&lt;/span>, &lt;span style="color:#d14">&amp;#39;Butter&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">].&lt;/span>each &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>task&lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;span style="color:#008080">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>find_or_create_by(&lt;span style="color:#0086b3">name&lt;/span>: task, &lt;span style="color:#990073">list&lt;/span>: &lt;span style="color:#008080">List&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>where(&lt;span style="color:#0086b3">name&lt;/span>: &lt;span style="color:#d14">&amp;#39;Supermarket&amp;#39;&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>first)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deployment--heroku">Deployment – Heroku&lt;/h2>
&lt;p>In order to deploy the app on Heroku, create a &lt;code>Procfile&lt;/code>:&lt;/p>
&lt;p>&lt;code>web: bundle exec ruby app.rb -p $PORT&lt;/code>&lt;/p>
&lt;p>Another option is clicking on the “Deploy to Heroku” button on the repository page. Heroku will look for the &lt;code>app.json&lt;/code> file and setup all that you need. If you area curious about this file:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">{
&lt;span style="color:#d14">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;todo-api&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;A simple Sinatra REST API&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;keywords&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> [&lt;span style="color:#d14">&amp;#34;sinatra&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;api&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;activerecord&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;reminders&amp;#34;&lt;/span>],
&lt;span style="color:#d14">&amp;#34;repository&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;https://github.com/leonardofaria/todo-api&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;addons&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> [
&lt;span style="color:#d14">&amp;#34;heroku-postgresql:hobby-dev&amp;#34;&lt;/span>
],
&lt;span style="color:#d14">&amp;#34;env&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> {
&lt;span style="color:#d14">&amp;#34;RACK_ENV&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;production&amp;#34;&lt;/span>
},
&lt;span style="color:#d14">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> {
&lt;span style="color:#d14">&amp;#34;postdeploy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;bundle exec rake db:migrate &amp;amp;&amp;amp; bundle exec rake db:seed&amp;#34;&lt;/span>
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is not the focus of this post, then read the Heroku documentation [&lt;a href="https://devcenter.heroku.com/articles/heroku-button">1&lt;/a>, &lt;a href="https://devcenter.heroku.com/articles/app-json-schema">2&lt;/a>] if you are interested on this. Pretty interesting.&lt;/p>
&lt;h2 id="final-thoughts">Final thoughts&lt;/h2>
&lt;p>I am not sure if I described everything but I hope that you got the main idea. You can take a look in the &lt;a href="https://github.com/leonardofaria/todo-api">source code&lt;/a> on Github, fork it or star it.&lt;/p>
&lt;p>A &lt;a href="http://leonardofaria.github.io/todo">web app&lt;/a> (gif above) was also created to show how to use the API. The web app is also &lt;a href="http://github.com/leonardofaria/todo">available in Github&lt;/a>.&lt;/p>
&lt;h2 id="other-references">Other references&lt;/h2>
&lt;p>Part of my work was inspired in the following articles:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.xplatform.rocks/2014/04/28/create-a-lightweight-rest-service-using-sinatra/">Create a lightweight REST service using Sinatra&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.cloud66.com/deploying-rest-apis-to-docker-using-ruby-and-sinatra/">Deploying REST APIs to Docker Using Ruby and Sinatra&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sitepoint.com/uno-use-sinatra-implement-rest-api/">Uno! Use Sinatra to Implement a REST API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/hatboysam/sinatra-activerecord-heroku">sinatra-activerecord-heroku&lt;/a>&lt;/ul>&lt;/li>
&lt;/ul></description></item><item><title>My first Meetup presentation</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/06/24/my-first-meetup-presentation/</link><pubDate>Fri, 24 Jun 2016 11:41:13 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/06/24/my-first-meetup-presentation/</guid><description>&lt;p>Last week I presented in &lt;a href="http://www.meetup.com/Code-Coffee-Vancouver/events/231709823/">Code &amp;amp; Coffee&lt;/a> about WordPress and Gulp. In my 10 minutes talk, I explained briefly what is Gulp and how its tasks can save our time.&lt;/p>
&lt;p>Here are &lt;a href="http://leonardofaria.github.io/wordpress-gulp-meetup/">my slides&lt;/a> and the &lt;a href="http://github.com/leonardofaria/meetup-gulp">example repository&lt;/a> that I created for the event.&lt;/p>
&lt;p>&lt;em>Update: video&lt;/em>&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/5bg9gBWwInQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Excluding folders from indexing in Sublime</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/05/07/excluding-folders-from-indexing-in-sublime/</link><pubDate>Sat, 07 May 2016 01:07:12 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/05/07/excluding-folders-from-indexing-in-sublime/</guid><description>&lt;p>Sometimes we work in projects with tons of Javascript dependencies. Folders like &lt;code>node_modules&lt;/code> and &lt;code>bower_components&lt;/code> are a pain in the neck because every time that we need to find something in the project the content of these folders will be used in the search.&lt;/p>
&lt;p>Sublime offers 2 settings to hide these files from the index. First of all, open the User Preferences (Preferences -&amp;gt; Settings – User):&lt;/p>
&lt;ul>
&lt;li>&lt;code>binary_file_patterns&lt;/code>: This option excludes files from the index but keep them in the sidebar.&lt;/li>
&lt;li>&lt;code>folder_exclude_patterns&lt;/code>: This option excludes files from the index and sidebar. This is why, for example, you don&amp;rsquo;t see the &lt;code>.git&lt;/code> folder in a project.&lt;/li>
&lt;/ul>
&lt;p>My final setting is:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#d14">&amp;#34;binary_file_patterns&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
[
&lt;span style="color:#d14">&amp;#34;*.jpg&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.jpeg&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.png&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.gif&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.ttf&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.tga&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.dds&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.ico&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.eot&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.pdf&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.swf&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.jar&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;*.zip&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;node_modules/**&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;bower_components/**&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;tmp/**&amp;#34;&lt;/span>
]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I also decided to add it the tmp folder, which is used by all kind of frameworks.&lt;/p></description></item><item><title>Resolving slow loading of local virtualhosts on Chrome</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/03/13/resolving-slow-loading-of-local-virtualhosts-on-chrome/</link><pubDate>Sun, 13 Mar 2016 14:38:56 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/03/13/resolving-slow-loading-of-local-virtualhosts-on-chrome/</guid><description>&lt;p>I&amp;rsquo;ve in my development mac different virtualhosts, using .local or .wp TLDs. Opening these address in Chrome are slow – about 3 seconds ‘resolving address&amp;rsquo;. This situation doesn&amp;rsquo;t happen in Safari or Firefox. Here is my typical &lt;code>/etc/hosts&lt;/code> configuration:&lt;/p>
&lt;pre>&lt;code>127.0.0.1 localhost
::1 localhost
255.255.255.255 broadcasthost
fe80::1%lo0 localhost
127.0.0.1 website1.local
127.0.0.1 website2.wp
&lt;/code>&lt;/pre>&lt;p>Looking for &lt;a href="http://stackoverflow.com/questions/10064581/how-can-i-eliminate-slow-resolving-loading-of-localhost-virtualhost-a-2-3-secon">answers&lt;/a>, I changed my setup for:&lt;/p>
&lt;pre>&lt;code>127.0.0.1 localhost website1.local website2.wp
::1 localhost website1.local website2.wp
255.255.255.255 broadcasthost
fe80::1%lo0 localhost
&lt;/code>&lt;/pre>&lt;p>It works like a charm.&lt;/p></description></item><item><title>Replace git author using shell script</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/02/02/replace-git-author-using-shell-script/</link><pubDate>Tue, 02 Feb 2016 02:22:56 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/02/02/replace-git-author-using-shell-script/</guid><description>&lt;p>This is an old trick that saved me several times. Sometimes people forget to setup their name and email information. The following script is useful to fix mistakes:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/sh
&lt;/span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>
git filter-branch -f --env-filter &lt;span style="color:#d14">&amp;#39;
&lt;/span>&lt;span style="color:#d14">
&lt;/span>&lt;span style="color:#d14">an=&amp;#34;$GIT_AUTHOR_NAME&amp;#34;
&lt;/span>&lt;span style="color:#d14">am=&amp;#34;$GIT_AUTHOR_EMAIL&amp;#34;
&lt;/span>&lt;span style="color:#d14">cn=&amp;#34;$GIT_COMMITTER_NAME&amp;#34;
&lt;/span>&lt;span style="color:#d14">cm=&amp;#34;$GIT_COMMITTER_EMAIL&amp;#34;
&lt;/span>&lt;span style="color:#d14">
&lt;/span>&lt;span style="color:#d14">if [ &amp;#34;$GIT_COMMITTER_EMAIL&amp;#34; = &amp;#34;old@email.com&amp;#34; ]
&lt;/span>&lt;span style="color:#d14">then
&lt;/span>&lt;span style="color:#d14"> cn=&amp;#34;New author name&amp;#34;
&lt;/span>&lt;span style="color:#d14"> cm=&amp;#34;new@email.com&amp;#34;
&lt;/span>&lt;span style="color:#d14">fi
&lt;/span>&lt;span style="color:#d14">
&lt;/span>&lt;span style="color:#d14">export GIT_AUTHOR_NAME=&amp;#34;$an&amp;#34;
&lt;/span>&lt;span style="color:#d14">export GIT_AUTHOR_EMAIL=&amp;#34;$am&amp;#34;
&lt;/span>&lt;span style="color:#d14">export GIT_COMMITTER_NAME=&amp;#34;$cn&amp;#34;
&lt;/span>&lt;span style="color:#d14">export GIT_COMMITTER_EMAIL=&amp;#34;$cm&amp;#34;
&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;Run after&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;git push origin +master:master&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Shell script para gravar áudio da Web</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/01/29/shell-script-para-gravar-audio-da-web/</link><pubDate>Fri, 29 Jan 2016 20:06:38 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/01/29/shell-script-para-gravar-audio-da-web/</guid><description>&lt;p>&lt;em>&lt;a href="https://leonardofaria.net/2016/01/26/shell-script-for-audio-recording/">This post is also available in English.&lt;/a>&lt;/em>&lt;/p>
&lt;p>Um dos meus programas de rádio favoritos é o Central 98, da &lt;a href="http://98live.com.br/">98FM&lt;/a> (de Belo Horizonte). Ele começa às 10h da manhã e devido a diferença de 6h de fuso horário eu não consigo ouví-lo ao vivo. Então, criei um shell script para gravar o programa e assim posso ouvi-lo no meu tempo livre.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
&lt;/span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>
&lt;span style="color:#998;font-style:italic"># paths&lt;/span>
&lt;span style="color:#008080">TIMELIMIT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;timelimit&amp;#34;&lt;/span>
&lt;span style="color:#008080">LIVESTREAMER&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;livestreamer&amp;#34;&lt;/span>
&lt;span style="color:#008080">FFMPEG&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;ffmpeg&amp;#34;&lt;/span>
&lt;span style="color:#998;font-style:italic"># parameters&lt;/span>
&lt;span style="color:#008080">IN&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$1&lt;/span>
&lt;span style="color:#008080">OUT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$2&lt;/span>
&lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$3&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;3600&amp;#34;&lt;/span>; &lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#008080">$#&lt;/span> -lt &lt;span style="color:#099">1&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> -n &lt;span style="color:#d14">&amp;#34;Usage: &lt;/span>&lt;span style="color:#008080">$0&lt;/span>&lt;span style="color:#d14"> url output [time]&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> &lt;span style="color:#099">0&lt;/span>
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$TIMELIMIT&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;timelimit not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$LIVESTREAMER&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;livestreamer not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$FFMPEG&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;ffmpeg not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;START STREAMING&amp;#34;&lt;/span>
&lt;span style="color:#008080">$TIMELIMIT&lt;/span> -t &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#008080">$LIVESTREAMER&lt;/span> &lt;span style="color:#008080">$IN&lt;/span> best -o &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;CONVERTING FILE TO MP3&amp;#34;&lt;/span>
ffmpeg -y -i &lt;span style="color:#008080">$OUT&lt;/span>.ts -c:a libmp3lame -b:a 64k -joint_stereo &lt;span style="color:#099">0&lt;/span> &lt;span style="color:#008080">$OUT&lt;/span>
rm &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;DONE&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>O &lt;a href="https://github.com/leonardofaria/audio-recorder">script&lt;/a> usa timelimit, ffmpeg and livestreamer. Você pode criar uma cron task para executar o script de acordo com a necessidade. Por examplo:&lt;/p>
&lt;pre>&lt;code>00 10 * * 1-5 /Users/leonardo/Sites/audio-recorder/98.sh &amp;quot;hlsvariant://http://stream.izap.com.br/live/98fm.stream/playlist.m3u8&amp;quot; &amp;quot;/Users/leonardo/Downloads/central98.mp3&amp;quot; 3600
&lt;/code>&lt;/pre>&lt;p>A linha anterior irá gravar o streaming da url por 1 hora (3600 segundos, de segunda à sexta às 10h da manhã. Se você não conhece a sintaxe do cron, use um &lt;a href="http://crontab-generator.org/">Crontab Generator&lt;/a>.&lt;/p>
&lt;p>&lt;em>Esse post também foi &lt;a href="https://coderwall.com/p/qmlkzg/shell-script-for-audio-recording">publicado no coderwall&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>Shell script for audio recording</title><link>https://leonardofaria.github.io/leonardofaria.net/2016/01/26/shell-script-for-audio-recording/</link><pubDate>Tue, 26 Jan 2016 18:13:43 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2016/01/26/shell-script-for-audio-recording/</guid><description>&lt;p>&lt;em>&lt;a href="https://leonardofaria.net/2016/01/29/shell-script-para-gravar-audio-da-web/">Esse artigo está disponível em português.&lt;/a>&lt;/em>&lt;/p>
&lt;p>One of my favourite radio shows happens every day at 10 AM (Brasilia Timezone). I was unable to listen to it because the time zones. Then, I created the following small shell script to record the show and then I can listen to it in my free time.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
&lt;/span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>
&lt;span style="color:#998;font-style:italic"># paths&lt;/span>
&lt;span style="color:#008080">TIMELIMIT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;timelimit&amp;#34;&lt;/span>
&lt;span style="color:#008080">LIVESTREAMER&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;livestreamer&amp;#34;&lt;/span>
&lt;span style="color:#008080">FFMPEG&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;ffmpeg&amp;#34;&lt;/span>
&lt;span style="color:#998;font-style:italic"># parameters&lt;/span>
&lt;span style="color:#008080">IN&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$1&lt;/span>
&lt;span style="color:#008080">OUT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$2&lt;/span>
&lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$3&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;3600&amp;#34;&lt;/span>; &lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#008080">$#&lt;/span> -lt &lt;span style="color:#099">1&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> -n &lt;span style="color:#d14">&amp;#34;Usage: &lt;/span>&lt;span style="color:#008080">$0&lt;/span>&lt;span style="color:#d14"> url output [time]&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> &lt;span style="color:#099">0&lt;/span>
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$TIMELIMIT&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;timelimit not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$LIVESTREAMER&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;livestreamer not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$FFMPEG&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;ffmpeg not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;START STREAMING&amp;#34;&lt;/span>
&lt;span style="color:#008080">$TIMELIMIT&lt;/span> -t &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#008080">$LIVESTREAMER&lt;/span> &lt;span style="color:#008080">$IN&lt;/span> best -o &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;CONVERTING FILE TO MP3&amp;#34;&lt;/span>
ffmpeg -y -i &lt;span style="color:#008080">$OUT&lt;/span>.ts -c:a libmp3lame -b:a 64k -joint_stereo &lt;span style="color:#099">0&lt;/span> &lt;span style="color:#008080">$OUT&lt;/span>
rm &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;DONE&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;a href="https://github.com/leonardofaria/audio-recorder">script&lt;/a> uses timelimit, ffmpeg and livestreamer. You can create a cron task to run the script according to necessity. For example:&lt;/p>
&lt;pre>&lt;code>00 10 * * 1-5 /Users/leonardo/Sites/audio-recorder/98.sh &amp;quot;hlsvariant://http://stream.izap.com.br/live/98fm.stream/playlist.m3u8&amp;quot; &amp;quot;/Users/leonardo/Downloads/central98.mp3&amp;quot; 3600
&lt;/code>&lt;/pre>&lt;p>The previous line will record the m3u8 streaming file by 1 hour (3600 seconds) Monday to Friday at 10 AM. If you are not familiar with crontab syntax, use a &lt;a href="http://crontab-generator.org/">Crontab Generator&lt;/a>.&lt;/p>
&lt;p>&lt;em>This post is also &lt;a href="https://coderwall.com/p/qmlkzg/shell-script-for-audio-recording">published in coderwall&lt;/a>.&lt;/em>&lt;/p></description></item></channel></rss>