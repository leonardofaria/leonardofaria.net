<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2020s on Leonardo Faria</title><link>https://leonardofaria.net/2020/</link><description>Recent content in 2020s on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://leonardofaria.net/2020/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating your own ESLint config package</title><link>https://leonardofaria.net/2020/06/16/creating-your-own-eslint-config-package/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://leonardofaria.net/2020/06/16/creating-your-own-eslint-config-package/</guid><description>&lt;p>ESLint is a powerful tool to enforce consistent coding conventions and ensure quality in your JavaScript codebase. Coding conventions are sometimes difficult to decide and having a tool to automate enforcement is great to avoid unnecessary discussions. Ensuring quality is also a welcoming feature: linters are excellent tools for catching bugs, such as those related to variable scope.&lt;/p>
&lt;p>ESLint is designed to be completely configurable, giving you the option of enabling/disabling each rule, or mixing the rules to match your needs. With this in mind, the JavaScript community and companies who use JavaScript can extend the original ESLint config. There are &lt;a href="https://www.npmjs.com/search?q=eslint-config">several examples&lt;/a> in the npm registry: &lt;a href="https://www.npmjs.com/package/eslint-config-airbnb">eslint-config-airbnb&lt;/a> is one of the most famous.&lt;/p>
&lt;p>In your daily basis, you will probably combine more than one config, since there is no one-config-fits-all. This post will show how to create your repository of configurations, giving you the option to centralize all your rule definitions.&lt;/p>
&lt;p>The first step is creating a new folder and creating an npm project. &lt;a href="https://eslint.org/docs/developer-guide/shareable-configs">By convention&lt;/a>, the module name begins with &lt;code>eslint-config-&lt;/code>, such as &lt;code>eslint-config-test&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir eslint-config-test
&lt;span style="color:#0086b3">cd&lt;/span> eslint-config-test
npm init
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will have a package.json file that will look like the following snippet:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#000080">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;eslint-config-test&amp;#34;&lt;/span>,
&lt;span style="color:#000080">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#000080">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;&amp;#34;&lt;/span>,
&lt;span style="color:#000080">&amp;#34;main&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;index.js&amp;#34;&lt;/span>,
&lt;span style="color:#000080">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;span style="color:#000080">&amp;#34;test&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;&lt;/span>
},
&lt;span style="color:#000080">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;&amp;#34;&lt;/span>,
&lt;span style="color:#000080">&amp;#34;license&amp;#34;&lt;/span>: &lt;span style="color:#d14">&amp;#34;ISC&amp;#34;&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, time to add your ESLint dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">npm install -D eslint eslint-config-airbnb eslint-config-prettier eslint-plugin-import eslint-plugin-jsx eslint-plugin-prettier eslint-plugin-react eslint-plugin-react-hooks prettier
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The packages will change according to your needs. In this case, I work with React codebases and I use &lt;a href="https://prettier.io/">Prettier&lt;/a> to format my code. The &lt;a href="https://eslint.org/docs/developer-guide/shareable-configs#publishing-a-shareable-config">documentation&lt;/a> mentions that if your shareable config depends on a plugin, you should also specify it as a &lt;code>peerDependency&lt;/code>.&lt;/p>
&lt;p>Next, I will create a &lt;code>.eslintrc.js&lt;/code> with my configuration - this is similar to what you already do in your apps:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">module.exports &lt;span style="color:#000;font-weight:bold">=&lt;/span> {
&lt;span style="color:#000;font-weight:bold">extends&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> [
&lt;span style="color:#d14">&amp;#39;airbnb&amp;#39;&lt;/span>,
&lt;span style="color:#d14">&amp;#39;eslint:recommended&amp;#39;&lt;/span>,
&lt;span style="color:#d14">&amp;#39;plugin:import/errors&amp;#39;&lt;/span>,
&lt;span style="color:#d14">&amp;#39;plugin:react/recommended&amp;#39;&lt;/span>,
&lt;span style="color:#d14">&amp;#39;plugin:jsx-a11y/recommended&amp;#39;&lt;/span>,
&lt;span style="color:#d14">&amp;#39;plugin:prettier/recommended&amp;#39;&lt;/span>,
&lt;span style="color:#d14">&amp;#39;prettier/react&amp;#39;&lt;/span>,
],
plugins&lt;span style="color:#000;font-weight:bold">:&lt;/span> [
&lt;span style="color:#d14">&amp;#39;react-hooks&amp;#39;&lt;/span>,
],
rules&lt;span style="color:#000;font-weight:bold">:&lt;/span> {
},
};
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>rules&lt;/code> object stores any rule that you want to override. In the snippet above &lt;code>rules&lt;/code> is empty but feel free to check &lt;a href="https://github.com/leonardofaria/eslint-config-leozera/blob/master/.eslintrc.js#L14:L58">my overrides&lt;/a>. In the airbnb/javascript repository you can &lt;a href="https://github.com/airbnb/javascript/issues/1089">find a list of overridden rules&lt;/a> by the community.&lt;/p>
&lt;p>Time to create a &lt;code>.prettierrc&lt;/code> with your custom rules - this is a tricky part since Prettier and ESLint can conflict in a few rules:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#000080">&amp;#34;tabWidth&amp;#34;&lt;/span>: &lt;span style="color:#099">2&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is important to mention that the &lt;code>.prettierrc&lt;/code> file should live in the root of the project that is using your package. Right now, I am manually copying it. Next step is exporting your config in the &lt;code>index.js&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#000;font-weight:bold">const&lt;/span> eslintrc &lt;span style="color:#000;font-weight:bold">=&lt;/span> require(&lt;span style="color:#d14">&amp;#39;./.eslintrc.js&amp;#39;&lt;/span>);
module.exports &lt;span style="color:#000;font-weight:bold">=&lt;/span> eslintrc;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is technically possible to create all configuration in the &lt;code>index.js&lt;/code> file however you wouldn&amp;rsquo;t get the config object linted (insert your &lt;a href="https://www.imdb.com/title/tt1375666/">Inception&lt;/a> joke here).&lt;/p>
&lt;p>&lt;em>VoilÃ !&lt;/em> That&amp;rsquo;s all you need to start your own package of configurations. You can test locally your config package by running, in a JavaScript project:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">npm install /Users/leonardo/path/to/eslint-config-test
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Keep in mind that the dependencies of your configuration package may also be installed.&lt;/p>
&lt;p>If everything looks fine, you can publish to the npm registry:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">npm publish
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="full-example">Full example&lt;/h2>
&lt;p>I have a functional GitHub project showing the setup of this post: &lt;a href="https://github.com/leonardofaria/eslint-config-leozera">eslint-config-leozera&lt;/a>. You can also see it below:&lt;/p>
&lt;div class="full-width">
&lt;iframe
src="https://codesandbox.io/embed/github/leonardofaria/eslint-config-leozera/tree/master/?fontsize=14&amp;theme=dark"
style="width:100%; height:600px; border:0;overflow:hidden;"
title="leonardofaria/eslint-config-leozera"
allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
sandbox="allow-autoplay allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
>&lt;/iframe>
&lt;/div>
&lt;h2 id="more-about-it">More about it&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://eslint.org/docs/user-guide/configuring">Configuring ESLint&lt;/a>: official ESLint docs. You know, &lt;em>read the docs&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@bretcameron/how-to-publish-your-first-npm-package-b224296fc57b">How to publish your first NPM package&lt;/a>: quoting the post subtitle&amp;rdquo;, everything you need to know to create a NPM package&amp;rdquo;&lt;/li>
&lt;li>&lt;a href="https://github.com/wesbos/eslint-config-wesbos">eslint-config-wesbos&lt;/a>: a project by &lt;a href="https://www.wesbos.com/">Wes Bos&lt;/a> that help me doing this work&lt;/li>
&lt;/ul></description></item><item><title>Using HAR files to analyze performance over time</title><link>https://leonardofaria.net/2020/06/07/using-har-files-to-analyze-performance-over-time/</link><pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate><guid>https://leonardofaria.net/2020/06/07/using-har-files-to-analyze-performance-over-time/</guid><description>&lt;p>When I consider the performance of a website, the first things that come to mind are; looking at the requests of a page, understanding what resources are being loaded, and how long these resources take to be available to users.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/06/chrome-network.jpg" alt="Chrome Network tab">&lt;/p>
&lt;p>The network tab will give you a table containing all assets loaded on the page, as well as relevant information about their origin (domain, HTTP status code, size), who initiated the request, and the order in which they were loaded in a waterfall representation. You can add more information to this table by right-clicking one of the table headers and choosing other columns.&lt;/p>
&lt;p>The size, time and waterfall columns will be crucial to understanding the performance of a page. The size value will present the gzipped size of the resource (when applicable), while the time column shows the total duration from the start of the request to the receipt of the final byte in the response. Last, but not least, the waterfall column demonstrates when the asset is loaded along with the other requests.&lt;/p>
&lt;p>Performance improvements are noticeable by changes in your code/environment. So how do we keep track of what is being analyzed by the Network tab? By exporting the page in HAR format.&lt;/p>
&lt;h2 id="what-is-a-har-file">What is a HAR file?&lt;/h2>
&lt;p>A HAR (short for HTTP Archive) file is a JSON file containing all information about a browser&amp;rsquo;s interactions with a page. It will contain the HTML document and its respective JS and CSS files. Along with this content, a HAR file will also contain all headers&amp;rsquo; information and the browser metadata (i.e. the time of each request).&lt;/p>
&lt;p>It is important to mention here that cookies and form data will also be logged in the file, so be careful to not include sensitive information (personal details, passwords, credit card numbers) while auditing pages. Also, it is preferable to audit pages in private windows, which avoids browsers&amp;rsquo; extensions. It is invaluable to avoid a browser&amp;rsquo;s extensions since they may modify the loading times of a page.&lt;/p>
&lt;h2 id="generating-har-files">Generating HAR files&lt;/h2>
&lt;h3 id="google-chrome">Google Chrome&lt;/h3>
&lt;ul>
&lt;li>Close all incognito windows in Google Chrome.&lt;/li>
&lt;li>Open a new incognito window in Google Chrome.&lt;/li>
&lt;li>Go to View &amp;gt; Developer &amp;gt; Developers Tools.&lt;/li>
&lt;li>In the Developer Tools panel, choose the Network tab.&lt;/li>
&lt;li>Check the Preserve Log and Disable cache checkboxes to record all interactions.&lt;/li>
&lt;li>Refresh the page.&lt;/li>
&lt;li>Click the Export HAR (down arrow icon) to export the HAR file.&lt;/li>
&lt;li>Save the HAR file.&lt;/li>
&lt;/ul>
&lt;h3 id="firefox">Firefox&lt;/h3>
&lt;ul>
&lt;li>Close all private windows in Firefox.&lt;/li>
&lt;li>Open a new private window in Firefox.&lt;/li>
&lt;li>Go to Tools &amp;gt; Developer &amp;gt; Network or ctrl-shift-E.&lt;/li>
&lt;li>Refresh the page.&lt;/li>
&lt;li>In the Cog icon (upper right side of the page), choose Save All As Har.&lt;/li>
&lt;li>Save the HAR file.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/06/firefox-network.jpg" alt="Firefox Network tab">&lt;/p>
&lt;h3 id="safari">Safari&lt;/h3>
&lt;ul>
&lt;li>Ensure that Show Develop menu in menu bar checkbox is checked under Safari &amp;gt; Preferences &amp;gt; Advanced.&lt;/li>
&lt;li>Choose File &amp;gt; Open New Private Window.&lt;/li>
&lt;li>Visit the web page where the issue occurs.&lt;/li>
&lt;li>Choose Develop &amp;gt; Show Web Inspector. The Web Inspector window appears.&lt;/li>
&lt;li>Refresh the page.&lt;/li>
&lt;li>Click Export on the upper right side of the pane.&lt;/li>
&lt;li>Save the HAR file.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/06/safari-network.jpg" alt="Safari Network tab">&lt;/p>
&lt;h2 id="reading-har-files">Reading HAR files&lt;/h2>
&lt;p>Once you have a HAR file, you can try a few HAR viewers online. My personal favourite is the &lt;a href="http://www.softwareishard.com/har/viewer/">one created by Jan Odavarko&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/06/har-viewer.jpg" alt="HAR Viewer">&lt;/p>
&lt;p>What I like about this viewer in particular is the fact you can have multiple files open at the same time, which makes it easier to compare them.&lt;/p>
&lt;h2 id="using-har-files-to-analyze-the-performance-of-a-page">Using HAR files to analyze the performance of a page&lt;/h2>
&lt;p>HAR files can be useful to collect information about the assets of a page. Since you have detailed information about their content, you can compare what has improved (or in some cases, not improved) after a new feature is launched or a redesign is completed, for example. During my workflow, I like to keep track of the final size/time values of a few pages of the product that I am working on.&lt;/p>
&lt;h2 id="more-information">More information&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developers.google.com/web/tools/chrome-devtools/network/resource-loading#view-network-timing-details-for-a-specific-resource">Measure Resource Loading Times&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/janodvarko/harviewer">HAR Viewer source code&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>The Mentoring Framework</title><link>https://leonardofaria.net/2020/06/01/the-mentoring-framework/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://leonardofaria.net/2020/06/01/the-mentoring-framework/</guid><description>&lt;p>Last October I created a Mentoring Framework at work. The goal was creating a project from scratch using Ruby on Rails and in this journey, learning more about Ruby, Frontend, Project Management and Git, Databases and DevOps.&lt;/p>
&lt;p>This Mentoring Framework is similar to what bootcamps do but the difference here is I am sharing a list of suggested features / things to learn and the person can focus in what is important for them.&lt;/p>
&lt;p>&lt;strong>In a nutshell: Goals â Project â Execution â Knowledge (and profit)&lt;/strong>&lt;/p>
&lt;p>The document is divided into 4 main sections: &lt;a href="#before-start">Before start&lt;/a>, &lt;a href="#project-ideas">Project ideas&lt;/a>, &lt;a href="#execution">Execution&lt;/a>, &lt;a href="#examples">Examples&lt;/a> and &lt;a href="#resources">Resources&lt;/a>.&lt;/p>
&lt;h2 id="before-start">Before start&lt;/h2>
&lt;p>What are your main goals? For the following list, pick: &amp;ldquo;basic understanding&amp;rdquo;, &amp;ldquo;intermediate understanding&amp;rdquo;, &amp;ldquo;advanced understanding&amp;rdquo;. This will help to identify where you are going to invest more time and energy.&lt;/p>
&lt;ul>
&lt;li>Learn Ruby / Ruby on Rails&lt;/li>
&lt;li>Learn Frontend&lt;/li>
&lt;li>Learn Project Management and Git&lt;/li>
&lt;li>Learn Databases&lt;/li>
&lt;li>Learn DevOps&lt;/li>
&lt;/ul>
&lt;h2 id="project-ideas">Project ideas&lt;/h2>
&lt;p>Once you know your main goals, you need a project. Check the following two ideas:&lt;/p>
&lt;h3 id="book-store">Book store&lt;/h3>
&lt;p>Imagine you want to sell books online. What kind of features does a bookstore have?&lt;/p>
&lt;ul>
&lt;li>List books per title&lt;/li>
&lt;li>List books per authors&lt;/li>
&lt;li>List books per categories&lt;/li>
&lt;li>Search books&lt;/li>
&lt;li>Buy books&lt;/li>
&lt;li>List your orders&lt;/li>
&lt;/ul>
&lt;h3 id="pet-adoption-website">Pet adoption website&lt;/h3>
&lt;p>Imagine you want to create a website for an organisation that takes care of animals (in British Columbia we have SPCA). What kind of features does a pet adoption website have?&lt;/p>
&lt;ul>
&lt;li>List pets per type (dog, cat and others)&lt;/li>
&lt;li>List pets per size (or breed, or age)&lt;/li>
&lt;li>List pets per location&lt;/li>
&lt;li>Search pet per name&lt;/li>
&lt;li>Request an adoption&lt;/li>
&lt;li>List your adoption requests&lt;/li>
&lt;/ul>
&lt;h2 id="execution">Execution&lt;/h2>
&lt;p>Once you know your main goals and you have an idea, it is time to work. Check the list of tasks you will be doing:&lt;/p>
&lt;h3 id="learn-ruby-on-rails">Learn Ruby on Rails&lt;/h3>
&lt;ul>
&lt;li>Use scaffolds to create your entities (basic understanding) or create your own controllers, models and views (intermediate)&lt;/li>
&lt;li>Add authentication with Devise (basic understanding) or create your own (intermediate). Or use Devise with Oauth authentication (Facebook, Google, etc - intermediate)&lt;/li>
&lt;li>Add friendly URLs with a gem (basic) or create your own solution (intermediate)&lt;/li>
&lt;li>Add search (intermediate)&lt;/li>
&lt;li>Add tests for all your code&lt;/li>
&lt;li>Create seeds for your data so you don&amp;rsquo;t need to create manually data&lt;/li>
&lt;li>Send email to users (intermediate)&lt;/li>
&lt;li>Create different user roles (intermediate)&lt;/li>
&lt;li>Add pagination (basic)&lt;/li>
&lt;li>Add localization (intermediate)&lt;/li>
&lt;li>Add a tag system (intermediate)&lt;/li>
&lt;li>Add images (intermediate)&lt;/li>
&lt;/ul>
&lt;h3 id="learn-frontend">Learn Frontend&lt;/h3>
&lt;ul>
&lt;li>Use Tailwind CSS (basic) or your own CSS/SASS (intermediate) to create a beautiful layout&lt;/li>
&lt;li>Use Turbolinks (advanced / optional)&lt;/li>
&lt;li>Add basic animations - ex.: when adding a book in the cart show some animation (advanced/optional)&lt;/li>
&lt;li>Add Google Maps in your app (intermediate)&lt;/li>
&lt;li>Add Google Places in your users&lt;/li>
&lt;li>Add a carousel with photos&lt;/li>
&lt;li>Add Pagination with Ajax or endless pagination (advanced)&lt;/li>
&lt;/ul>
&lt;h3 id="learn-project-management-and-git">Learn Project Management and Git&lt;/h3>
&lt;ul>
&lt;li>Use Github Project to organize your features&lt;/li>
&lt;li>Use feature branches in Git, create PR for all your features&lt;/li>
&lt;/ul>
&lt;h3 id="learn-databases">Learn Databases&lt;/h3>
&lt;ul>
&lt;li>Write plain SQL to find relevant information. A few examples:
&lt;ul>
&lt;li>Find best-sellers authors in the book store&lt;/li>
&lt;li>Find the number of orders or pet requests per city&lt;/li>
&lt;li>Find which day has more sales&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Add charts in your app to expose the data&lt;/li>
&lt;/ul>
&lt;h3 id="learn-devops">Learn DevOps&lt;/h3>
&lt;ul>
&lt;li>Deploy the website to Heroku (easy/intermediate) or AWS (advanced)&lt;/li>
&lt;li>Setup CI in Heroku (easy/intermediate)&lt;/li>
&lt;li>Add Airbrake to monitor errors in your app (easy)&lt;/li>
&lt;li>Buy a domain, set up Cloudflare (advanced/optional)&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/06/the-mentoring-framework.png" alt="Website screenshots">&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://adopt.spca.bc.ca">SPCA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.petfinder.com/">Petfinder&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>Courses: &lt;a href="https://www.linkedin.com/learning/ruby-on-rails-5-essential-training">Ruby on Rails 5 Essential Training&lt;/a> and &lt;a href="https://www.linkedin.com/learning/ruby-on-rails-6-essential-training">Ruby on Rails 6 Essential Training&lt;/a> - The first course is longer than the second.&lt;/li>
&lt;li>Screencasts: &lt;a href="https://rubytapas.com">RubyTapas&lt;/a>, &lt;a href="https://gorails.com">GoRails&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Changing node versions automatically per directory</title><link>https://leonardofaria.net/2020/05/20/changing-node-versions-automatically-per-directory/</link><pubDate>Wed, 20 May 2020 07:00:00 -0700</pubDate><guid>https://leonardofaria.net/2020/05/20/changing-node-versions-automatically-per-directory/</guid><description>&lt;p>Working in multiple Node projects sometimes means using different versions of Node. &lt;a href="https://github.com/nvm-sh/nvm">nvm&lt;/a> is one popular solution for Linux, macOS and Windows WSL that handles multiple Node installations. One of its most unknown tricks is the &lt;a href="https://github.com/nvm-sh/nvm#deeper-shell-integration">deeper shell integration&lt;/a>. Check the video:&lt;/p>
&lt;video class="w-full h-auto" controls autoplay="autoplay">
&lt;source src="https://leonardofaria.net/wp-content/uploads/2020/05/nvm.mp4" type="video/mp4">
&lt;/video>
&lt;p>If you are using macOS Catalina, you are probably using ZSH as default shell. To make the magic happen, paste the following in &lt;code>~/.zshrc&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#998;font-style:italic"># place this after nvm initialization!&lt;/span>
autoload -U add-zsh-hook
load-nvmrc&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#0086b3">local&lt;/span> &lt;span style="color:#008080">node_version&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">$(&lt;/span>nvm version&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">local&lt;/span> &lt;span style="color:#008080">nvmrc_path&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">$(&lt;/span>nvm_find_nvmrc&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> -n &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#008080">$nvmrc_path&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">local&lt;/span> &lt;span style="color:#008080">nvmrc_node_version&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">$(&lt;/span>nvm version &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">$(&lt;/span>cat &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#d14">${&lt;/span>&lt;span style="color:#008080">nvmrc_path&lt;/span>&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#008080">$nvmrc_node_version&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;N/A&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
nvm install
&lt;span style="color:#000;font-weight:bold">elif&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#008080">$nvmrc_node_version&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span> !&lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#008080">$node_version&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
nvm use
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">elif&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#008080">$node_version&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span> !&lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">$(&lt;/span>nvm version default&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#d14">&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;Reverting to nvm default version&amp;#34;&lt;/span>
nvm use default
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
add-zsh-hook chpwd load-nvmrc
load-nvmrc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After restarting your terminal, nvm will automatically change the version of Node based in the current folder.&lt;/p></description></item><item><title>Using Dependabot to keep your environment up to date</title><link>https://leonardofaria.net/2020/05/02/using-dependabot-to-keep-your-environment-up-to-date/</link><pubDate>Sat, 02 May 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/05/02/using-dependabot-to-keep-your-environment-up-to-date/</guid><description>&lt;p>Adding dependencies in a project is seen as a good way to not reinvent the wheel but at the same time it can be concerning in many different aspects:&lt;/p>
&lt;ul>
&lt;li>Versioning: sometimes dependencies can require specific versions of other dependencies and this can cause hiccups in your app;&lt;/li>
&lt;li>Bundling: you need to be careful here to not bring extra code that will bloat your bundles;&lt;/li>
&lt;li>Updating: JavaScript moves fast and if you don&amp;rsquo;t update packages regularly, you&amp;rsquo;ll play Jenga in the future.&lt;/li>
&lt;/ul>
&lt;p>There are different tools to cover the update part like &lt;a href="https://dependencies.io">Dependencies.io&lt;/a>, &lt;a href="https://snyk.io/">Snyk&lt;/a> and &lt;a href="https://dependabot.com/">Dependabot&lt;/a>. Since I have been using Dependabot for a while, I decided to write about my experience.&lt;/p>
&lt;p>Dependabot is a tool acquired by GitHub one year ago that checks dependencies files from different languages (Ruby, JavaScript, Python, PHP, Elixir, to name a few) and finds new versions of libraries you are using in your project. Here is the setup:&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/05/dependabot.jpg" alt="Dependabot screenshot">&lt;/p>
&lt;p>Daily updates can be overwhelming and I think that weekly updates have a better cost/benefit. Also, I assign myself the Pull Requests so I can get notifications as soon they are opened.&lt;/p>
&lt;h2 id="how-to-use-dependabot-effectively">How to use Dependabot effectively&lt;/h2>
&lt;p>Dependabot includes in each PR release notes, changelogs, commits links and vulnerability details whenever available. This is useful because you can take a look at the information and decide to proceed or not.&lt;/p>
&lt;p>However, as pragmatic programmers, we want to ensure things won&amp;rsquo;t break. The PR details are important but more than that, we want a simulation of all (or almost all) deliverables that the project has.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/05/semaphore.jpg" alt="CI Integration">&lt;/p>
&lt;p>This screenshot shows what happens every time a PR is opened in the components library codebase of my work.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tests (Jest / Bundle)&lt;/strong>: the Jest task will test the React components while the Bundle task will simulate the bundling commands we run when we want to update the package in the NPM registry;&lt;/li>
&lt;li>&lt;strong>Linters (Stylesheets / JavaScript)&lt;/strong>: the stylesheet files follow a custom sass-lint setup and the JS code follows a series of ESLint rules. If a PR introduces a new version of a linter with new rules we will be able to capture that;&lt;/li>
&lt;li>&lt;strong>Cypress (Screenshot Testing / Accessibility Testing)&lt;/strong>: if a new package introduces changes that may reflect in the look and feel of components, Cypress will capture the difference, screenshot it and store in S3. Since Cypress needs a live version of the documentation website, we also get the Gatsby build process covered.&lt;/li>
&lt;/ul>
&lt;p>With all these steps, it is very unlikely an external package will break our master branch. Kudos to my co-worker Grant Lee that also works in this project.&lt;/p></description></item><item><title>Facing impostor syndrome and time management issues</title><link>https://leonardofaria.net/2020/04/26/facing-impostor-syndrome-and-time-management-issues/</link><pubDate>Sun, 26 Apr 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/04/26/facing-impostor-syndrome-and-time-management-issues/</guid><description>&lt;p>I often hear people talking about impostor syndrome and time management issues. Sometimes I hear about these issues from a friend, a direct report, and occasionally from myself. We are always challenged by them and they can affect our mood, our ability to be productive and our judgement.&lt;/p>
&lt;p>We have days where everything works great and also we have bad days, where everything seems to go wrong. This emotional roller coaster can make us doubt our accomplishments and can create a persistent fear of being exposed as a fraud.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/04/roller-coaster.jpg" alt="Roller coaster photo">&lt;/p>
&lt;p>There a few things that you can do to remember that you are great:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Keep a daily journal&lt;/strong> with notes of achievements: this daily exercise will train your brain to feel more confident;&lt;/li>
&lt;li>&lt;strong>Focus on your strengths&lt;/strong>, especially when you are new in a role at work, use your natural strengths to add value to your position;&lt;/li>
&lt;li>&lt;strong>Find quick wins&lt;/strong>, they will help you build a reputation of someone adept in a particular skill.&lt;/li>
&lt;/ul>
&lt;p>Issues with time management also impact our feeling of getting the job done. Sometimes the problem starts early on when we are assigned a task that may not make much sense. Let&amp;rsquo;s step back for a moment and think about the levels of uncertainty of a task:&lt;/p>
&lt;ol>
&lt;li>Well understood&lt;/li>
&lt;li>Have a few questions&lt;/li>
&lt;li>Understood, but unfamiliar with the approach&lt;/li>
&lt;li>Know the area, but not the direction&lt;/li>
&lt;li>General unclear&lt;/li>
&lt;/ol>
&lt;p>How does uncertainty affect time management? If something is Well understood, it is very unlikely you will get lost in the woods and things will take as long as expected. Starting with the level of Have a few questions, you need to be careful because the uncertainty will affect your time management and your sense of achievement. Good news is, you can always use this problem as an opportunity to improve.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Have a few questions&lt;/strong>: Find the best person to answer your question. If the description is unclear, go to the person who created that task. If the question is technical, talk to a developer on the team that can help you;&lt;/li>
&lt;li>&lt;strong>Understood, but unfamiliar with the approach&lt;/strong>: If you understand the big picture but you are not confident with the approach, talk to another developer and ask for help. This is a good opportunity for pair programming;&lt;/li>
&lt;li>&lt;strong>Know the area, but not the direction&lt;/strong>: This is a good opportunity to talk to another developer and hear their initial thoughts. They may have an opinion on how to get the task started or be able to suggest a good resource to review;&lt;/li>
&lt;li>&lt;strong>General unclear&lt;/strong>: If the problem in the task is generally unclear, ask for clarification. If the technical approach is unclear, talk to other developers, think about having a pair programming session, and speak with other members of your team to understand how they approach their work.&lt;/li>
&lt;/ul>
&lt;p>Overall, facing imposter syndrome is something that we all face at some point in our careers. It is an issue that I have certainly struggled with but find that facing these struggles provides an excellent opportunity for me to reflect on my skills and discover new areas of potential learning. With these suggestions in mind, I hope that you are able to improve your sense of confidence and self-efficacy in your professional life.&lt;/p>
&lt;p>&amp;ndash;&lt;/p>
&lt;p>Also posted on &lt;a href="https://www.freecodecamp.org/news/facing-impostor-syndrome-and-time-management-issues/">freeCodeCamp&lt;/a>, &lt;a href="https://dev.to/leonardofaria/facing-impostor-syndrome-and-time-management-issues-1mlj">DEV&lt;/a>, &lt;a href="https://www.codementor.io/@leonardofaria/facing-impostor-syndrome-and-time-management-issues-15vpjw3q2x">Codementor&lt;/a>. Photo credit: &lt;a href="https://pixabay.com/photos/roller-coaster-people-thrill-park-1553342/">roller coaster (Pixalbay)&lt;/a>&lt;/p></description></item><item><title>Moving to Hugo</title><link>https://leonardofaria.net/2020/04/21/moving-to-hugo/</link><pubDate>Tue, 21 Apr 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/04/21/moving-to-hugo/</guid><description>&lt;p>In the last few days, I worked to move this website to &lt;a href="https://gohugo.io">Hugo&lt;/a>. I have been using WordPress for years (this domain turned 15 earlier this month) in a dozen projects however it was time to change. Decided to follow a minimalist setup with Hugo.&lt;/p>
&lt;h2 id="about-the-stack">About the stack&lt;/h2>
&lt;p>I decided to use Hugo here because I wanted something simple. KISS. I like Gatsby and Next.js however I didn&amp;rsquo;t want to choose a JavaScript solution. To achieve similar setup, I would have to add too many dependencies and they would become outdated quickly (rephasing &lt;a href="https://wesbos.com/new-wesbos-website/#Serverless-Functions">Wes Bos&lt;/a>). That&amp;rsquo;s being said, I need to mention that I am using JS to strip the extra classes from Tailwind CSS.&lt;/p>
&lt;h2 id="about-the-design">About the design&lt;/h2>
&lt;p>My previous site used a theme called &lt;a href="http://lacymorrow.com/casper/">Casper&lt;/a>, which is inspired in &lt;a href="https://ghost.org/">Ghost&amp;rsquo;s default theme&lt;/a>. I decided to build the theme from scratch inspired by Casper, Medium and many other minimalist blogs. I still have a feel things to fix/improve but designwise I am quite happy with the result.&lt;/p>
&lt;p>As I mentioned before, I used &lt;a href="https://tailwindcss.com/">Tailwind CSS&lt;/a> in this project. The utility-first approach definitely makes prototying faster. To avoid a bloated CSS file I am using a &lt;a href="https://www.npmjs.com/package/@fullhuman/postcss-purgecss">purgecss package&lt;/a> to remove all the classes I am not using in the site. The final result is a 2.5KB CSS file.&lt;/p>
&lt;p>The previous WordPress had a good score in Lighthouse tests, and I was able to make it even better:&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2020/04/lighthouse.jpg" alt="Lighthouse results">&lt;/p>
&lt;p>The theme is called &lt;a href="http://bento-hugo-theme.netlify.com/">Bento&lt;/a> and it is &lt;a href="https://github.com/leonardofaria/bento">open-source&lt;/a>.&lt;/p></description></item><item><title>Terminal tips tweets</title><link>https://leonardofaria.net/2020/01/20/terminal-tips-tweets/</link><pubDate>Mon, 20 Jan 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/01/20/terminal-tips-tweets/</guid><description>&lt;p>A while ago I started a &lt;a href="https://twitter.com/leozera/status/1090639374109138946">thread on Twitter&lt;/a> with a few terminal tips. There are lots of CLIs in NPM and they can be very handy in our daily work. Here they are and if you like them, &lt;a href="https://twitter.com/leozera">follow me&lt;/a> :)&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">1. list-scripts and npm-list-scripts give you a list of available npm script including what each script does. Useful for documentation:&lt;br>&lt;br>ð» npm i -g list-scripts npm-list-scripts&lt;br>ð &lt;a href="https://t.co/QvvFEpEMeQ">https://t.co/QvvFEpEMeQ&lt;/a> &lt;a href="https://t.co/6MFQXbHPLW">https://t.co/6MFQXbHPLW&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/84dwGqVviX">pic.twitter.com/84dwGqVviX&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639457118609408?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">2. ncu checks the packages in your package.json file and gives you major and minor package updates info&lt;br>&lt;br>ð» npm i -g npm-check-updates&lt;br>ð &lt;a href="https://t.co/H9NIGetGKy">https://t.co/H9NIGetGKy&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/EPmx3YKJwE">pic.twitter.com/EPmx3YKJwE&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639526840549382?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">3. npm-scripts-tree is helpful when you have scripts calling other scripts and you are lost trying to understand the dependencies between them. Really handy for documentation:&lt;br>&lt;br>ð» npm i -g npm-scripts-tree&lt;br>ð &lt;a href="https://t.co/4NVKocfDuY">https://t.co/4NVKocfDuY&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/7NWn2FBPBK">pic.twitter.com/7NWn2FBPBK&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639627822628865?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">4. space-hogs shows large directories - imagine a better du:&lt;br>&lt;br>ð» npm i -g space-hogs&lt;br>ð &lt;a href="https://t.co/xPlGzYjLJk">https://t.co/xPlGzYjLJk&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/HKZQP9NMgq">pic.twitter.com/HKZQP9NMgq&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639691135610881?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">5. see is an improved cat (aka syntax highlight)&lt;br>&lt;br>ð» npm i -g see-cli&lt;br>ð &lt;a href="https://t.co/bEAjBJjhGt">https://t.co/bEAjBJjhGt&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/o6rx8MZbel">pic.twitter.com/o6rx8MZbel&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639798354665472?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">6. colorls is a ruby script that changes the ls output with color and icons&lt;br>&lt;br>ð» gem install colorls&lt;br>ð &lt;a href="https://t.co/9F3n6v3FnA">https://t.co/9F3n6v3FnA&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/ruby?src=hash&amp;amp;ref_src=twsrc%5Etfw">#ruby&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/NF675JfdPx">pic.twitter.com/NF675JfdPx&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639885931753475?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">7. You can use repeat in zsh and the speed-test cli from &lt;a href="https://twitter.com/sindresorhus?ref_src=twsrc%5Etfw">@sindresorhus&lt;/a> to keep monitoring your internet speed&lt;br>&lt;br>ð» repeat 10000 { date +&amp;quot;%T&amp;quot;; speed-test; sleep 1 }&lt;br>ð &lt;a href="https://t.co/BP4Rj4qI5r">https://t.co/BP4Rj4qI5r&lt;/a> &lt;a href="https://t.co/22j1YV6Kf1">pic.twitter.com/22j1YV6Kf1&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090640016970117120?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">8. You can configure git to push to the current branch:&lt;br>&lt;br>git config --global push.default current&lt;br>&lt;br>So instead of:&lt;br>git push origin your-feature-branch&lt;br>You can just do:&lt;br>git push &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/git?src=hash&amp;amp;ref_src=twsrc%5Etfw">#git&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1093949292040019968?ref_src=twsrc%5Etfw">February 8, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">9. Writing a PR? Maybe you want a list of your commits: &lt;br>&lt;br>git log origin/master..HEAD --no-merges --pretty=format:&amp;#39;- %s&amp;#39; --reverse&lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/git?src=hash&amp;amp;ref_src=twsrc%5Etfw">#git&lt;/a> &lt;a href="https://twitter.com/github?ref_src=twsrc%5Etfw">@github&lt;/a> &lt;a href="https://t.co/od8e8LPpPa">pic.twitter.com/od8e8LPpPa&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1180601156889804801?ref_src=twsrc%5Etfw">October 5, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">10. Running out of space? Maybe too many node_modules folders:&lt;br>&lt;br>ð» npx npkill&lt;br>ð &lt;a href="https://t.co/zyj9s6eCj9">https://t.co/zyj9s6eCj9&lt;/a>&lt;br>&lt;br>Saved 10GB+ here ~ &lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/y31i7gS9af">pic.twitter.com/y31i7gS9af&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1215393238720188416?ref_src=twsrc%5Etfw">January 9, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>Exploring device detection for better user experiences in 2020</title><link>https://leonardofaria.net/2020/01/15/exploring-device-detection-for-better-user-experiences-in-2020/</link><pubDate>Wed, 15 Jan 2020 02:16:54 -0300</pubDate><guid>https://leonardofaria.net/2020/01/15/exploring-device-detection-for-better-user-experiences-in-2020/</guid><description>&lt;p>A few months ago I watched a great talk in Chrome Dev Summit about performance in slow devices.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/puUPpVrIRkc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>It blew my mind all the work done by Facebook in identifying devices to create a better user experience. Fast-forward to now, I decided to study a bit more the topic and see what I could do at Thinkific.&lt;/p>
&lt;h2 id="user-agents">User agents&lt;/h2>
&lt;p>User agents are well-known by developers. We use them to detect bots, redirect users to a specific version of our website or append CSS classes on our page so we can create different experiences.&lt;/p>
&lt;p>At Thinkific we already use the &lt;a href="https://github.com/fnando/browser">browser Ruby gem&lt;/a> to parse the user-agent and get relevant info (bot detection for instance). So, I decided to persist the main info in a visitor_device table â here is the schema:&lt;/p>
&lt;pre>&lt;code>tenant_id: the course creator school the visitor is checking
raw: the raw ua
type: desktop / mobile / tablet / bot / other
browser_name
browser_version
platform_name
platform_version
hardware: hstore containing memory, processor, device_model, device_name
connection: hstore containing downlink_max, connection_type
&lt;/code>&lt;/pre>&lt;p>You probably noticed that a few things there are not available in the UA string. Time for new JavaScript APIs:&lt;/p>
&lt;h2 id="getting-hardware-info-using-javascript">Getting hardware info using JavaScript&lt;/h2>
&lt;p>As covered in the Chrome Dev Summit video, we can use JS to get this info&lt;/p>
&lt;h3 id="memory">Memory&lt;/h3>
&lt;p>&lt;code>navigator.deviceMemory&lt;/code> will return a floating-point number. There are things to consider here:&lt;/p>
&lt;ul>
&lt;li>It only works over HTTPS&lt;/li>
&lt;li>Support is quite limited (Chrome only basically)&lt;/li>
&lt;/ul>
&lt;p>More about it:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/w3c/device-memory">Spec from W3C&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/deviceMemory">MDN Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://caniuse.com/#feat=mdn-api_navigator_devicememory">Can I use deviceMemory&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="processors">Processors&lt;/h3>
&lt;p>&lt;code>navigator.hardwareConcurrency&lt;/code>Â will return the number of logical cores of the user&amp;rsquo;s CPU. Support for this isÂ &lt;a href="https://caniuse.com/#feat=hardwareconcurrency">decent&lt;/a>.&lt;/p>
&lt;h2 id="detecting-connection-info-using-javascript">Detecting connection info using JavaScript&lt;/h2>
&lt;p>&lt;code>navigator.connection&lt;/code> is a new API containing information about the system&amp;rsquo;s connection, such as the current bandwidth of the user&amp;rsquo;s device or whether the connection is metered. The support is quite limited (Chrome only basically) but things are promising.&lt;/p>
&lt;p>More about it:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://googlechrome.github.io/samples/network-information/">Chrome example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/connection">MDN Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://caniuse.com/#feat=netinfo">Can I use Network Information API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="detecting-the-device-model">Detecting the device model&lt;/h2>
&lt;p>The user agentÂ &lt;em>may&lt;/em>Â return some information about the model name.Â &lt;a href="https://userstack.com/">userstack&lt;/a>Â is a service that gives you information based on the user agent. It works well and it is easy to integrate, however, depending on your need, they can&amp;rsquo;t help.&lt;/p>
&lt;p>Take for instance iDevices. Their user agent is basically the same so you can&amp;rsquo;t differentiate an iPad Pro from an old iPad that runs the last iOS. For these cases, you may need a better detection based on resolution, pixel density and other hardware information exposed in the browser. I did a quick research on this and found 3 products so far:Â &lt;a href="https://web.wurfl.io/#wurfl-js">WURFL.io&lt;/a>,Â &lt;a href="https://deviceatlas.com/products/web">DeviceAtlas&lt;/a>Â andÂ &lt;a href="https://51degrees.com/">51Degrees&lt;/a>. I didn&amp;rsquo;t have time to try their products yet, but I am looking forward to doing it (and post about it)&lt;/p>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;p>&lt;em>Question: Why not using Google Analytics / Mixpanel / Kibana / New Relic / your tool here?&lt;/em>&lt;/p>
&lt;p>We could get browser info inside other tools however as a SaaS product we don&amp;rsquo;t use our own Google Analytics property (customers add their own). Also, adblockers may block these third-party tools. Last not least, by having this info in our side we can adapter better.&lt;/p>
&lt;p>&lt;em>Question: Do you have a list of low-end/high-end devices?&lt;/em>&lt;/p>
&lt;p>No. Maybe this can be built combining the number of processors and memory but I didn&amp;rsquo;t invest much time on this. In this project, my colleague created a Rails helper that would determinate if the user would use the lite or default version of a website based on hardware. On this topic, it is important to mention Facebook has a library for Android called &lt;a href="https://github.com/facebook/device-year-class/">Device Year Class&lt;/a>.&lt;/p></description></item></channel></rss>