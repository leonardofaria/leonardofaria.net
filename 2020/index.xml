<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2020s on Leonardo Faria</title><link>https://leonardofaria.net/2020/</link><description>Recent content in 2020s on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://leonardofaria.net/2020/index.xml" rel="self" type="application/rss+xml"/><item><title>Using HAR files to analyze performance over time</title><link>https://leonardofaria.net/2020/06/07/using-har-files-to-analyze-performance-over-time/</link><pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate><guid>https://leonardofaria.net/2020/06/07/using-har-files-to-analyze-performance-over-time/</guid><description>When I consider the performance of a website, the first things that come to mind are; looking at the requests of a page, understanding what resources are being loaded, and how long these resources take to be available to users.
The network tab will give you a table containing all assets loaded on the page, as well as relevant information about their origin (domain, HTTP status code, size), who initiated the request, and the order in which they were loaded in a waterfall representation.</description></item><item><title>The Mentoring Framework</title><link>https://leonardofaria.net/2020/06/01/the-mentoring-framework/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://leonardofaria.net/2020/06/01/the-mentoring-framework/</guid><description>Last October I created a Mentoring Framework at work. The goal was creating a project from scratch using Ruby on Rails and in this journey, learning more about Ruby, Frontend, Project Management and Git, Databases and DevOps.
This Mentoring Framework is similar to what bootcamps do but the difference here is I am sharing a list of suggested features / things to learn and the person can focus in what is important for them.</description></item><item><title>Changing node versions automatically per directory</title><link>https://leonardofaria.net/2020/05/20/changing-node-versions-automatically-per-directory/</link><pubDate>Wed, 20 May 2020 07:00:00 -0700</pubDate><guid>https://leonardofaria.net/2020/05/20/changing-node-versions-automatically-per-directory/</guid><description>Working in multiple Node projects sometimes means using different versions of Node. nvm is one popular solution for Linux, macOS and Windows WSL that handles multiple Node installations. One of its most unknown tricks is the deeper shell integration. Check the video:
If you are using macOS Catalina, you are probably using ZSH as default shell. To make the magic happen, paste the following in ~/.zshrc file.
# place this after nvm initialization!</description></item><item><title>Using Dependabot to keep your environment up to date</title><link>https://leonardofaria.net/2020/05/02/using-dependabot-to-keep-your-environment-up-to-date/</link><pubDate>Sat, 02 May 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/05/02/using-dependabot-to-keep-your-environment-up-to-date/</guid><description>Adding dependencies in a project is seen as a good way to not reinvent the wheel but at the same time it can be concerning in many different aspects:
Versioning: sometimes dependencies can require specific versions of other dependencies and this can cause hiccups in your app; Bundling: you need to be careful here to not bring extra code that will bloat your bundles; Updating: JavaScript moves fast and if you don&amp;rsquo;t update packages regularly, you&amp;rsquo;ll play Jenga in the future.</description></item><item><title>Facing impostor syndrome and time management issues</title><link>https://leonardofaria.net/2020/04/26/facing-impostor-syndrome-and-time-management-issues/</link><pubDate>Sun, 26 Apr 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/04/26/facing-impostor-syndrome-and-time-management-issues/</guid><description>I often hear people talking about impostor syndrome and time management issues. Sometimes I hear about these issues from a friend, a direct report, and occasionally from myself. We are always challenged by them and they can affect our mood, our ability to be productive and our judgement.
We have days where everything works great and also we have bad days, where everything seems to go wrong. This emotional roller coaster can make us doubt our accomplishments and can create a persistent fear of being exposed as a fraud.</description></item><item><title>Moving to Hugo</title><link>https://leonardofaria.net/2020/04/21/moving-to-hugo/</link><pubDate>Tue, 21 Apr 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/04/21/moving-to-hugo/</guid><description>In the last few days, I worked to move this website to Hugo. I have been using WordPress for years (this domain turned 15 earlier this month) in a dozen projects however it was time to change. Decided to follow a minimalist setup with Hugo.
About the stack I decided to use Hugo here because I wanted something simple. KISS. I like Gatsby and Next.js however I didn&amp;rsquo;t want to choose a JavaScript solution.</description></item><item><title>Terminal tips tweets</title><link>https://leonardofaria.net/2020/01/20/terminal-tips-tweets/</link><pubDate>Mon, 20 Jan 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/01/20/terminal-tips-tweets/</guid><description>A while ago I started a thread on Twitter with a few terminal tips. There are lots of CLIs in NPM and they can be very handy in our daily work. Here they are and if you like them, follow me :)
1. list-scripts and npm-list-scripts give you a list of available npm script including what each script does. Useful for documentation:
ðŸ’» npm i -g list-scripts npm-list-scripts
ðŸŒŽ https://t.co/QvvFEpEMeQ https://t.</description></item><item><title>Exploring device detection for better user experiences in 2020</title><link>https://leonardofaria.net/2020/01/15/exploring-device-detection-for-better-user-experiences-in-2020/</link><pubDate>Wed, 15 Jan 2020 02:16:54 -0300</pubDate><guid>https://leonardofaria.net/2020/01/15/exploring-device-detection-for-better-user-experiences-in-2020/</guid><description>A few months ago I watched a great talk in Chrome Dev Summit about performance in slow devices.
It blew my mind all the work done by Facebook in identifying devices to create a better user experience. Fast-forward to now, I decided to study a bit more the topic and see what I could do at Thinkific.
User agents User agents are well-known by developers. We use them to detect bots, redirect users to a specific version of our website or append CSS classes on our page so we can create different experiences.</description></item></channel></rss>