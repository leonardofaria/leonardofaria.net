<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rubyonrails on Leonardo Faria</title><link>https://leonardofaria.net/tags/rubyonrails/</link><description>Recent content in rubyonrails on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Jun 2008 02:27:05 -0300</lastBuildDate><atom:link href="https://leonardofaria.net/tags/rubyonrails/index.xml" rel="self" type="application/rss+xml"/><item><title>annotate_model, gem útil da semana</title><link>https://leonardofaria.net/2008/06/30/annotate_model-gem-util-da-semana/</link><pubDate>Mon, 30 Jun 2008 02:27:05 -0300</pubDate><guid>https://leonardofaria.net/2008/06/30/annotate_model-gem-util-da-semana/</guid><description>&lt;p>Trabalhar com Rails é certeza de encontrar ótimo material para trabalhar/documentar sua aplicação. Tenho uma lista de plugins/gems úteis para o desenvolvimento, o que daria um enorme post. Seguindo os conceitos do Getting Real, rapidinho vou postando (é muito material).&lt;/p>
&lt;p>O primeiro da lista é o &lt;a href="http://github.com/ctran/annotate_models/">annotate_model&lt;/a>, um gem que gera para cada model as informações da estrutura da tabela daquela entidade. Por exemplo:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#998;font-style:italic"># == Schema Information &lt;/span>
&lt;span style="color:#998;font-style:italic"># Schema version: 20080628203259 &lt;/span>
&lt;span style="color:#998;font-style:italic"># &lt;/span>
&lt;span style="color:#998;font-style:italic"># Table name: comments &lt;/span>
&lt;span style="color:#998;font-style:italic"># &lt;/span>
&lt;span style="color:#998;font-style:italic"># id :integer(11) not null, primary key &lt;/span>
&lt;span style="color:#998;font-style:italic"># name :string(255) &lt;/span>
&lt;span style="color:#998;font-style:italic"># email :string(255) &lt;/span>
&lt;span style="color:#998;font-style:italic"># body :text &lt;/span>
&lt;span style="color:#998;font-style:italic"># code_id :integer(11) &lt;/span>
&lt;span style="color:#998;font-style:italic"># created_at :datetime &lt;/span>
&lt;span style="color:#998;font-style:italic"># updated_at :datetime &lt;/span>
&lt;span style="color:#998;font-style:italic">#&lt;/span>
&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Comment&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#008080">ActiveRecord&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">Base&lt;/span>
&lt;span style="color:#998;font-style:italic"># ...&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Uma forma de se conhecer os atributos de uma entidade é, a partir do script/console, digitar: &lt;code>Model.new.attributes&lt;/code>, entretanto com o gem, o conhecimento dessas informações fica bem mais fácil. Após instalada (sudo gem install annotate-models), bastar executar o comando annotate na pasta do seu aplicativo. Simples, rápido e quebra um galhão.&lt;/p></description></item><item><title>Passenger no painel de preferências do Leopard</title><link>https://leonardofaria.net/2008/06/28/passenger-no-painel-de-preferencias-do-leopard/</link><pubDate>Sat, 28 Jun 2008 17:04:01 -0300</pubDate><guid>https://leonardofaria.net/2008/06/28/passenger-no-painel-de-preferencias-do-leopard/</guid><description>&lt;p>Que o mod_rails veio para revolucionar o deployment de Rails, todo mundo já sabe. Agora, me deparei com isso:&lt;/p>
&lt;center>
&lt;img src="https://leonardofaria.net/wp-content/uploads/2008/06/passenger.jpg" alt="Passenger" title="passenger" />
&lt;/center>
&lt;p>Como no &lt;a href="http://locomotive.raaum.org/">Locomotive&lt;/a>, &lt;a href="http://www.fngtps.com/2008/06/putting-the-pane-back-into-deployment">criaram&lt;/a>, com RubyCocoa, um painel para gerenciar suas aplicações. Agora, nem é mais preciso declarar cada aplicação no httpd.conf. Virou brincadeira, né?&lt;/p>
&lt;p>Para funcionar, bastar ter Mac OS 10.5.2 e Pessenger 2.0.1 instalados.&lt;/p></description></item><item><title>Rails, Git, MySQL e mod_rails no Leopard</title><link>https://leonardofaria.net/2008/05/24/rails-git-mysql-e-mod_rails-no-leopard/</link><pubDate>Sat, 24 May 2008 16:53:23 -0300</pubDate><guid>https://leonardofaria.net/2008/05/24/rails-git-mysql-e-mod_rails-no-leopard/</guid><description>&lt;p>Comprou um Mac? Não sabe por onde começar? Esse é um mega-post mostrando como configurar Ruby on Rails, Git, MySQL e mod_rails no Leopard. É tudo &lt;strong>muito-fácil&lt;/strong>!&lt;/p>
&lt;h3 id="ruby-on-rails">Ruby on Rails&lt;/h3>
&lt;p>O Leopard já vem com Ruby e Rails já instalados. Então, a única sugestão é a de atualizar todos os gems. O comando &lt;code>gem list&lt;/code> deve apontar os gems instalados. Por padrão, são:&lt;/p>
&lt;pre>&lt;code>actionmailer (1.3.6, 1.3.3)
actionpack (1.13.6, 1.13.3)
actionwebservice (1.2.6, 1.2.3)
activerecord (1.15.6, 1.15.3)
activesupport (1.4.4, 1.4.2)
acts_as_ferret (0.4.1)
capistrano (2.0.0)
cgi_multipart_eof_fix (2.2)
daemons (1.0.7)
dnssd (0.6.0)
fastthread (1.0)
fcgi (0.8.7)
ferret (0.11.4)
gem_plugin (0.2.2)
highline (1.2.9)
hpricot (0.6)
libxml-ruby (0.3.8.4)
mongrel (1.0.1)
needle (1.3.0)
net-sftp (1.1.0)
net-ssh (1.1.2)
rails (1.2.6, 1.2.3)
rake (0.7.3)
RedCloth (3.0.4)
ruby-openid (1.1.4)
ruby-yadis (0.3.4)
rubynode (0.1.3)
sources (0.0.1)
sqlite3-ruby (1.2.1)
termios (0.9.4)
&lt;/code>&lt;/pre>&lt;p>Observa-se que o Mac OS vem com Rails 1.2.6 e 1.2.3. Para garantir tudo atualizado, é interessante usar o flag update, do comando gem e instalar o Rails, caso sua versão seja diferente da última versão corrente.&lt;/p>
&lt;pre>&lt;code>sudo gem update --system
sudo gem install rails
&lt;/code>&lt;/pre>&lt;p>Após atualizar o sistema e executar &lt;code>gem list&lt;/code>, tem-se:&lt;/p>
&lt;pre>&lt;code>actionmailer (2.0.2, 1.3.6, 1.3.3)
actionpack (2.0.2, 1.13.6, 1.13.3)
actionwebservice (1.2.6, 1.2.3)
activerecord (2.0.2, 1.15.6, 1.15.3)
activeresource (2.0.2)
activesupport (2.0.2, 1.4.4, 1.4.2)
acts_as_ferret (0.4.1)
capistrano (2.0.0)
cgi_multipart_eof_fix (2.2)
daemons (1.0.7)
dnssd (0.6.0)
fastthread (1.0.1, 1.0)
fcgi (0.8.7)
ferret (0.11.4)
gem_plugin (0.2.2)
highline (1.2.9)
hpricot (0.6)
libxml-ruby (0.3.8.4)
mongrel (1.0.1)
needle (1.3.0)
net-sftp (1.1.0)
net-ssh (1.1.2)
passenger (1.0.5)
rails (2.0.2, 1.2.6, 1.2.3)
rake (0.8.1, 0.7.3)
RedCloth (3.0.4)
ruby-openid (1.1.4)
ruby-yadis (0.3.4)
rubygems-update (1.1.1)
rubynode (0.1.3)
sources (0.0.1)
sqlite3-ruby (1.2.1)
termios (0.9.4)
&lt;/code>&lt;/pre>&lt;h3 id="git">Git&lt;/h3>
&lt;p>O suporte ao Git não é bicho de sete cabeças. São duas as formas de instalar: via &lt;strong>GUI&lt;/strong> ou via &lt;strong>shell&lt;/strong>. A instalação via GUI é idêntica as demais instalações de aplicativos do Mac, além de ser mais rápida do que a instalação via shell. Basta &lt;a href="http://code.google.com/p/git-osx-installer/downloads/list?can=3&amp;amp;q=&amp;amp;sort=-uploaded&amp;amp;colspec=Filename+Summary+Uploaded+Size+DownloadCount">fazer o download&lt;/a> do pacote e apertar ‘next&amp;rsquo;, ‘next&amp;rsquo;, ‘finish&amp;rsquo;. Para &lt;a href="http://dysinger.net/2007/12/30/installing-git-on-mac-os-x-105-leopard/">instalação&lt;/a> via &lt;a href="http://blog.kineticweb.com/articles/2007/10/30/compiling-git-for-mac-os-x-leopard-10-5">shell&lt;/a> é necessário compilar o GIT e outras coisinhas mais.&lt;/p>
&lt;h3 id="mysql">MySQL&lt;/h3>
&lt;p>Para o MySQL, também existem duas formas de instalação: via GUI e através da compilação dos binários, via Shell. Via Gui basta &lt;a href="http://dev.mysql.com/downloads/mysql/5.0.html#macosx-dmg">copiar o pacote&lt;/a> do site e instalar como qualquer outra aplicação do Mac OS. Para compilação, o melhor é seguir &lt;a href="http://hivelogic.com/articles/2007/11/installing-mysql-on-mac-os-x">esse artigo&lt;/a> do &lt;a href="http://hivelogic.com">Hivelogic&lt;/a>.&lt;/p>
&lt;h3 id="mod_rails-passenger">mod_rails (Passenger)&lt;/h3>
&lt;p>A instalação ao Passenger é bem menos complicado do que as antigas formas de se trabalhar com Rails. Inicialmente, copie o gem passenger e execute o instalador:&lt;/p>
&lt;pre>&lt;code>sudo gem install passenger
sudo passenger-install-apache2-module
&lt;/code>&lt;/pre>&lt;p>O instalador é simples e não há configurações a serem feitas. Agora, é necessário alterar o arquivo de configuração do Apache para carregar o suporte a Rails. Abra o arquivo &lt;code>/etc/apache2/httpd.conf&lt;/code> e adicione as seguintes linhas no final do arquivo:&lt;/p>
&lt;pre>&lt;code>LoadModule passenger_module /opt/local/lib/ruby/gems/1.8/gems/passenger-1.0.1/ext/apache2/mod_passenger.so
RailsSpawnServer /opt/local/lib/ruby/gems/1.8/gems/passenger-1.0.1/bin/passenger-spawn-server
RailsRuby /opt/local/bin/ruby
&lt;/code>&lt;/pre>&lt;p>Além disso, é necessário informar, nesse arquivo, as configurações de sua aplicação&lt;/p>
&lt;pre>&lt;code>&amp;lt;directory &amp;quot;/Users/leonardofaria/Sites/test/public&amp;quot;&amp;gt;
Order allow,deny
Allow from all
ServerName localhost
DocumentRoot /Users/leonardofaria/Sites/test/public
&amp;lt;/directory&amp;gt;
&amp;lt;virtualhost *&amp;gt;
ServerName localhost
DocumentRoot /Users/leonardofaria/Sites/test/public
&amp;lt;/virtualhost&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Feita todas as alterações, é hora de reiniciar o Apache. Você pode fazer isso via Preferências do Sistema &amp;gt; Compartilhamento, ou pelo shell:&lt;/p>
&lt;pre>&lt;code>sudo apachectl start
&lt;/code>&lt;/pre>&lt;h3 id="notas">Notas&lt;/h3>
&lt;ul>
&lt;li>O &lt;a href="http://simplesideias.com.br/">Nando&lt;/a> mostra em &lt;a href="http://simplesideias.com.br/instalando-o-mod_rails-phusion-passenger-no-mac-os-x-leopard/#comments">seu artigo&lt;/a> outra forma de carregar as informações das aplicações.&lt;/li>
&lt;li>O Passenger possui uma &lt;a href="http://www.modrails.com/documentation/Users%20guide.html">longa documentação&lt;/a> sobre a configuração do Apache&lt;/li>
&lt;/ul>
&lt;h3 id="fontes">Fontes&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://dysinger.net/2007/12/30/installing-git-on-mac-os-x-105-leopard/">http://dysinger.net/2007/12/30/installing-git-on-mac-os-x-105-leopard/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://developer.apple.com/tools/developonrailsleopard.html">http://developer.apple.com/tools/developonrailsleopard.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://simplesideias.com.br/instalando-o-mod_rails-phusion-passenger-no-mac-os-x-leopard/">http://simplesideias.com.br/instalando-o-mod_rails-phusion-passenger-no-mac-os-x-leopard/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.akitaonrails.com/2008/4/16/phusion-passenger-mod_rails-test-drive">http://www.akitaonrails.com/2008/4/16/phusion-passenger-mod_rails-test-drive&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Ruby on Rails na caveira!</title><link>https://leonardofaria.net/2007/12/19/ruby-on-rails-na-caveira/</link><pubDate>Wed, 19 Dec 2007 01:47:38 -0200</pubDate><guid>https://leonardofaria.net/2007/12/19/ruby-on-rails-na-caveira/</guid><description>&lt;p>Nos últimos dias, tenho lido muita coisa sobre RoR. Infelizmente, queria blogar sobre cada um desses assuntos, mas o tempo anda muito corrido. Fiz esse mega-post com alguns links de assuntos interessantes para aprendizagem.&lt;/p>
&lt;h3 id="introdução">Introdução&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="http://www.fearoffish.co.uk/assets/2006/12/27/fof_training_handout.pdf">Ruby on Rails – The basics&lt;/a> – um pequeno pdf de caráter beeeem introdutório.&lt;/li>
&lt;li>&lt;a href="http://railshandbook.com/">Ruby on Rails Handbook&lt;/a> – uma lista com inúmeros materiais sobre o framework.&lt;/li>
&lt;li>&lt;a href="http://railslogvislzr.rubyforge.org/">Log Visualizer&lt;/a> – apesar do nome Tabajara, essa aplicação gera gráficos e outras firulas dos seus arquivos de log.&lt;/li>
&lt;li>&lt;a href="http://rubylearning.com/satishtalim/tutorial.html">Curso online de Ruby&lt;/a> – via &lt;a href="http://twitter.com/caiosalim">Caio Salim&lt;/a> no Twitter (por isso que eu gosto desse Twitter).&lt;/li>
&lt;/ol>
&lt;h3 id="documentação">Documentação&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="http://wiki.rubyonrails.com/rails/pages/ReservedWords">ReservedWords&lt;/a> – para evitar criar um model chamado Ruby.&lt;/li>
&lt;li>&lt;a href="http://www.railsbrain.com/">RailsBrain.com&lt;/a> – documentação de várias versões do Rails.&lt;/li>
&lt;li>&lt;a href="http://mechanize.rubyforge.org/mechanize/">Mechanize&lt;/a> – o Mechanize é um crawler, ou seja, lê páginas web. O Eduardo o utiliza por exemplo no &lt;a href="http://www.ocurioso.com">O Curioso&lt;/a> para manipular os scraps do orkut. Depois de conhecer a documentação, vale ver esse exemplo de manipular coisas do &lt;a href="http://jystewart.net/process/2007/04/avoiding-myspace-or-automating-myspace-updates-with-wwwmechanize/">MySpace&lt;/a>.&lt;/li>
&lt;li>&lt;a href="http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide">Rails Security Guide&lt;/a> – esse é um link OBRIGATÓRIO que o Fabio Akita sugeriu. O nome do link já sugere seu assunto.&lt;/li>
&lt;/ol>
&lt;h3 id="helpers-e-cia">Helpers e cia&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="http://www.eribium.org/wp-content/uploads/2007/01/common_passwords.txt">Validação de senhas comuns&lt;/a> – para evitar coisas do tipo “123”.&lt;/li>
&lt;li>&lt;a href="http://agtools.rubyforge.org/bbcodeizer/">BBCodeizer&lt;/a> – traduz BBCode para HTML.&lt;/li>
&lt;li>&lt;a href="http://blog.lipsiasoft.org/articles/2007/05/30/flash-helper">Flash Helper&lt;/a> – helper para inserir Flash de uma &lt;a href="http://blog.deconcept.com/swfobject">forma bacana&lt;/a> (leia-se: de um jeito que todos os navegadores – inclusive o Ignorant Explorer – entendam).&lt;/li>
&lt;li>&lt;a href="http://snippets.dzone.com/posts/show/1691">Live search&lt;/a> – um snippet meio tosco de como fazer um live search.&lt;/li>
&lt;li>&lt;a href="http://forum.rubyonbr.org/forums/14/topics/2510">Consulta valor de SEDEX&lt;/a> – outro snippet que pode ser útil.&lt;/li>
&lt;li>&lt;a href="http://blog.wolfman.com/articles/2006/11/14/how-to-protect-a-form-from-accidentally-losing-data">How to protect a form from accidentally losing data&lt;/a> – algo bem interessante. Sabe quando você está escrevendo uma mensagem no Gmail e vai para outra página e ele te perguntar se você vai descartar a mensagem escrita? Então, um snippet que faz esse alerta.&lt;/li>
&lt;li>&lt;a href="http://simplesideias.com.br/definindo-o-fuso-horario-no-rails/">Definição de fuso horário&lt;/a> – via Nando Vieira.&lt;/li>
&lt;li>&lt;a href="http://textsnippets.com/posts/show/43">Google API on Rails&lt;/a> – usando a API da busca do Google no Rails.&lt;/li>
&lt;li>&lt;a href="http://blog.codahale.com/2006/01/14/a-rails-howto-simplify-in-place-editing-with-scriptaculous/">In-place editing&lt;/a> – sabe aquele recurso que tem pra todo lado e ninguém sabe como funciona? Aqui explica.&lt;/li>
&lt;li>&lt;a href="http://www.onlamp.com/pub/a/onlamp/2005/06/09/rails_ajax.html">Ajax on Rails&lt;/a> – tutorial simples de implementação de requisições não sincronizadas, vulgo Ajax, no Rails.&lt;/li>
&lt;/ol>
&lt;h3 id="plugins">Plugins&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="http://code.google.com/p/robsanheim/wiki/BrainBuster">Brainbuster&lt;/a> – um captcha inteligente.&lt;/li>
&lt;li>&lt;a href="http://blog.riopro.com.br/2007/12/05/marcando-um-registro-como-excluido-ao-inves-de-excluir-acts_as_paranoid/">acts_as_paranoid&lt;/a> – esse plugin é importante principalmente em sistemas sujeitos a auditoria. Ao deletar um registro, ele não o remove do banco de dados e apenas o marca como “excluído”.&lt;/li>
&lt;li>&lt;a href="http://agilewebdevelopment.com/plugins/flux_validator">Flux Validator&lt;/a> – um plugin de validação com Ajax mas, lembre-se: é importante haver a validação no model por uma questão de segurança, uma vez que a entrada dos dados pode ser facilmente manipulada fora desses recursos em javascript.&lt;/li>
&lt;li>&lt;a href="http://transparent-message.xilinus.com/">Transparent Message&lt;/a> – dá uma saída interessante para os flash[:notice/:error].&lt;/li>
&lt;/ol>
&lt;h3 id="tutoriais">Tutoriais&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="http://www.bestechvideos.com/category/development/ruby/">Ruby – A Programmer&amp;rsquo;s Best Friend&lt;/a> – site cheio de screencasts.&lt;/li>
&lt;li>&lt;a href="http://podcast.sdruby.com/">sd.rb&lt;/a> – podcast da turma de San Diego que usa RoR.&lt;/li>
&lt;/ol>
&lt;h3 id="rest">REST&lt;/h3>
&lt;p>Com a invenção do Rails 2.0, o assunto REST veio a tona com uma propulsão jamais vista.&lt;/p>
&lt;ol>
&lt;li>&lt;a href="http://pt.wikipedia.org/wiki/REST">REST na Wikipedia&lt;/a> – o start do assunto.&lt;/li>
&lt;li>&lt;a href="http://www.infoq.com/articles/rest-introduction">A Brief Introduction to REST&lt;/a> – para não dizer que não falei de rest&lt;/li>
&lt;li>&lt;a href="http://www.scribd.com/doc/47562/restful-development">RESTful Development&lt;/a> – material sobre REST no Rails.&lt;/li>
&lt;/ol>
&lt;p>P.S.: esse título é uma alusão tosca ao filme Tropa de Elite. Falando nisso, o hype acabou!&lt;/p></description></item><item><title>Locomotive com Rails 2.0</title><link>https://leonardofaria.net/2007/12/16/locomotive-com-rails-20/</link><pubDate>Sun, 16 Dec 2007 22:06:23 -0200</pubDate><guid>https://leonardofaria.net/2007/12/16/locomotive-com-rails-20/</guid><description>&lt;p>Uma das formas simples de se ter Ruby on Rails no Mac é através do &lt;a href="http://www.locomotive.raaum.org/">Locomotive&lt;/a>, um pacote all-in-one com Ruby, Rails e vários gems importantes para desenvolvimento. Como o Rails 2.0 foi lançado no último dia 7, resolvi atualizar minha máquina.&lt;/p>
&lt;p>Numa janela do terminal rodei o tradicional &lt;code>gem install rails -y --source http://gems.rubyonrails.org&lt;/code>, para atualizar a versão do Rails. Eu indiquei o repositório do site oficial, mas não é obrigatório. Logo em seguida criei minha primeira aplicação com um &lt;code>rails _2.0.1_ teste&lt;/code>. O “_2.0.1_” gera o projeto com a estrutura já da nova versão.&lt;/p>
&lt;p>Em seguida, adicionei a aplicação teste a lista de aplicações do Locomotive e a iniciei. A aplicação não pode ser inicializada e observando o &lt;code>server.log&lt;/code> percebi que ainda faltava atualizar o RubyGems. Assim, rodei um &lt;code>gem update --system&lt;/code> e pronto!&lt;/p></description></item><item><title>Documentação sobre Ruby e seus gems</title><link>https://leonardofaria.net/2007/12/14/documentacao-sobre-ruby-e-seus-gems/</link><pubDate>Fri, 14 Dec 2007 23:58:23 -0200</pubDate><guid>https://leonardofaria.net/2007/12/14/documentacao-sobre-ruby-e-seus-gems/</guid><description>&lt;p>Uma dica que pouca gente conhece sobre documentação é o gem_server. O comando gem_server inicia na porta 8808 uma instância WEBrick com a listagem de todos os gems instalados na máquina e suas respectivas informações de versão e inclusive documentação. Por ali, é possível obter inclusive todas as informações sobre métodos e classes dos cincos pacotes que integram o Rails. Uma vez startado, para ver o serviço basta carregar a URI &lt;a href="http://localhost:8808">localhost:8808&lt;/a> e obter uma página como a abaixo. [Dica via &lt;a href="http://www.akitaonrails.com">Akita&lt;/a>]&lt;/p>
&lt;p>Outro comando interessante é o ri. O ri mostra informações de classes, métodos e módulos do Ruby. Por exemplo, para obter informações sobre String, use ri String.&lt;/p>
&lt;p>&lt;strong>[upgrade]&lt;/strong> O &lt;a href="http://logbr.reflectivesurface.com/">Ronaldo&lt;/a> sugeriu o &lt;a href="http://eigenclass.org/hiki/fastri">FastRI&lt;/a>, uma alternativa ao ri e que é distribuído como gem. Para instalar basta um simples “gem install fastri” e para usar, qri String.&lt;/p></description></item><item><title>Um resumo do Minas on Rails</title><link>https://leonardofaria.net/2007/12/02/um-resumo-do-minas-on-rails/</link><pubDate>Sun, 02 Dec 2007 14:56:00 -0200</pubDate><guid>https://leonardofaria.net/2007/12/02/um-resumo-do-minas-on-rails/</guid><description>&lt;p>Ontem aconteceu o Minas on Rails. O evento surgiu da idéia do &lt;a href="http://logbr.reflectivesurface.com/">Ronaldo Ferraz&lt;/a> e da organização do pessoal da &lt;a href="http://www.dito.com.br">Dito&lt;/a> – André, &lt;a href="http://www.milk-it.net/">Milk-it&lt;/a> – Carlos, Michel e cia, &lt;a href="http://www.ideiadigital.ppg.br/">Idéia Digital&lt;/a> – Rafael Apocalypse, entre outros. Eu, dei meus pitacos sobre a organização do evento na lista &lt;a href="http://groups.google.com.br/group/rails-mg?hl=pt-BR">rails-mg&lt;/a>. O evento começou com uma alfineta engraçadíssima ao Cake PHP, o Ronaldo ficou &lt;a href="http://logbr.reflectivesurface.com/2007/12/01/minas-on-rails-o-trem-esta-rolando/">blogando ao vivo&lt;/a> e o Open Talk final foi descontraído e bacana.&lt;/p>
&lt;h3 id="as-palestras">As palestras&lt;/h3>
&lt;p>A primeira palestra que abriu o dia foi o André Fonseca e seu &lt;strong>case &lt;a href="http://www.baudearquivos.com">Baú de Arquivos&lt;/a>&lt;/strong>. O Baú de Arquivos, que começou como trabalho de faculdade, poderia ser classificado como um disco virtual 2.0, com tags e compartilhamento de usuários. A palestra foi interessante porque mostrou os recursos que Rails possui para ganho de produtividade – convenções, scaffold e plugins. Para quem não conhecia o framework, serviu como um aperitivo.&lt;/p>
&lt;p>Depois do André foi a vez do &lt;a href="http://www.eustaquiorangel.com/">Eustáquio ‘TaQ&amp;rsquo; Rangel&lt;/a> falar. Cara super-simpático que eu já conseguia de blog, listas e Twitter, o TaQ falou sobre &lt;strong>Ruby, passado, presente e futuro&lt;/strong>. Ele falou da simplicidade, do hype, das abrobrinhas que falam da linguagem (como o da Info [v]Exame – abaixo) e do avanço de desempenho da versão 1.9 do Ruby que vem no Natal desse ano. De um modo geral, ela está 4 vezes mais rápida do que a versão current (1.8.6).&lt;/p>
&lt;blockquote>
&lt;p>“O Rails tem o ponto fraco de exigir o aprendizado da linguagem Ruby, que tem uma estrutura um pouco diferente dos dialetos de programação mais tradicionais”.&lt;/p>
&lt;/blockquote>
&lt;p>A terceira palestra foi do Eduardo Rocha, que também só conhecia virtualmente. Ele falou da &lt;strong>implementação do &lt;a href="http://www.ocurioso.com">O Curioso&lt;/a>&lt;/strong>, site que monitora scraps do orkut. É impressionante os números dele: 400 mil usuários e uma tabela scraps de 160GB! Provavelmente, seu site deve ser um dos maiores cases parrudos de Rails no Brasil.&lt;/p>
&lt;p>O Diógenes Araújo falou sobre &lt;strong>JRuby&lt;/strong>, projeto livre apoiado pela Sun. Veja como é interessante essa integração entre Ruby e Java: você pode, por exemplo, escrever Java dentro do Ruby e distribuir aplicações Rails integradas como .war.&lt;/p>
&lt;p>Depois do almoço, Rafael Apocalype falou sobre &lt;strong>Design para Web usando MVC&lt;/strong>. Apocalypse mostrou a vantagem em se utilizar esse padrão, impedindo brigas entre designers e programadores por um arquivo; além de mostrar a óbvia organização que nos é proporcionado.&lt;/p>
&lt;p>Ronaldo Ferraz – outro que só conhecia virtualmente – fez a sexta palestra do dia e falou sobre &lt;strong>DSL – linguagem especificas de domínio&lt;/strong>. DSL é uma forma do Ruby simular outra linguagem e podem ter usos bem específicos. O código abaixo, por exemplo, pode ser uma DSL:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">receita &lt;span style="color:#d14">&amp;#34;Bola de Fubá&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">do&lt;/span>
ingrediente &lt;span style="color:#d14">&amp;#34;Farinha&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;1 kilo&amp;#34;&lt;/span>
ingrediente &lt;span style="color:#d14">&amp;#34;Açúcar&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;200 gramas&amp;#34;&lt;/span>
ingrediente &lt;span style="color:#d14">&amp;#34;Ovos&amp;#34;&lt;/span>, &lt;span style="color:#d14">&amp;#34;2 unidades&amp;#34;&lt;/span>
preparo &lt;span style="color:#d14">&amp;#34;Misture todos ingrediantes&amp;#34;&lt;/span>
preparo &lt;span style="color:#d14">&amp;#34;Leve ao forno&amp;#34;&lt;/span>
preparo &lt;span style="color:#d14">&amp;#34;Sirva&amp;#34;&lt;/span>
tempo &lt;span style="color:#d14">&amp;#34;2 horas&amp;#34;&lt;/span>
porcoes &lt;span style="color:#099">3&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Michel Filipe falou sobre &lt;strong>TDD (Test-Driven Development) no Rails&lt;/strong>. Os testes automatizados servem para prever possíveis erros em nossas aplicações e são uma ótima recomendação para quem desenvolve. O Rails possui recursos facilitadores para o TDD, como a pasta ‘test&amp;rsquo; de nossa aplicação. P.S.: o &lt;a href="http://www.simplesideias.com.br/">Nando Vieira&lt;/a> também já &lt;a href="http://www.treinatom.com.br/betaEventos/TestDriverDevelopmentNoRailsNandoVieira.rar">falou sobre TDD&lt;/a> no &lt;a href="http://www.treinatom.com.br/betaEventos">Treina TOM&lt;/a>.&lt;/p>
&lt;p>A penúltima palestra foi sobre &lt;strong>XP&lt;/strong> e foi uma das melhores falas que já vi. O &lt;a href="http://www.improveit.com.br/vinicius">Vinícius Teles&lt;/a> apresentou seu case &lt;strong>Projeto Lucidus&lt;/strong>, que é o desenvolvimento de vários sistemas para um grupo carioca de empresas de adminstração. Essas empresas possuem uma série de softwares em Clipper e a equipe de Teles está migrando tudo para Rails. Foi uma aula de Extreme Programming: falou das reuniões semanais com o cliente, da programação em par e da disciplina do desenvolvimento.&lt;/p>
&lt;p>Carlos Júnior falou sobre &lt;strong>REST on Rails&lt;/strong>. REST é uma técnica de engenharia de software para sistemas distribuídos e possui 4 operações definidas para o desenvolvimento: Post, Get, Put e Delete. Na &lt;a href="http://pt.wikipedia.org/">Wikipedia&lt;/a> tem uma explicação &lt;a href="http://pt.wikipedia.org/wiki/REST">detalhada sobre o assunto&lt;/a>.&lt;/p>
&lt;p>P.S.: ganhei um ano de hospedagem grátis no Evento, promoção da empresa de hosting &lt;a href="http://www.iw2servers.com.br/">IW2&lt;/a>, uma das patrocinadoras do evento. Vou sortear aqui no blog. Daqui a pouco faço um post com as regras.&lt;/p>
&lt;p>&lt;a href="http://flickr.com/photos/leonardofaria/sets/72157603362887798/">Algumas fotos estão no meu Flickr.&lt;/a>&lt;/p></description></item><item><title>Minas on Rails</title><link>https://leonardofaria.net/2007/11/16/minas-on-rails/</link><pubDate>Fri, 16 Nov 2007 13:53:30 -0200</pubDate><guid>https://leonardofaria.net/2007/11/16/minas-on-rails/</guid><description>&lt;center>
&lt;a href="http://www.minasonrails.org">&lt;img src='https://leonardofaria.net/wp-content/uploads/2007/11/yqewzqhzk1c5ojefw09yffo6_400.png' alt='Minas on Rails' />&lt;/a>
&lt;/center>
&lt;p>O Ruby on Rails ganha mais espaço a cada dia e sua versatilidade e agilidade de uso provam a capacidade de conquistar um espaço maior nas empresas de desenvolvimento brasileiras. São por essas qualidades que a cada dia aumentam os adeptos do framework e de sua filosofia.&lt;/p>
&lt;p>No Brasil, o mercado já observa com bons olhos a ferramenta e já ocorrem em grandes centros encontros para troca de experiências e apresentação de cases. Em Minas Gerais não poderia ser diferente e é essa a missão do Minas on Rails.&lt;/p>
&lt;p>Discussões sobre Rails, técnicas de desenvolvimento, palestras e networking são as palavras-chave desse nosso encontro. Gente de todo estado reunida no dia 1 de dezembro para colocar Minas no trilhos.&lt;/p>
&lt;p>&lt;a href="http://www.minasonrails.org">Confira a programação no site Minas on Rails&lt;/a>.&lt;/p></description></item><item><title>Prepare-se para o Rails 2.0</title><link>https://leonardofaria.net/2007/10/12/prepare-se-para-o-rails-20/</link><pubDate>Fri, 12 Oct 2007 14:54:13 -0300</pubDate><guid>https://leonardofaria.net/2007/10/12/prepare-se-para-o-rails-20/</guid><description>&lt;p>A versão 2.0 do framework Rails está por vir e isso significa algumas mudanças e novidades. Já &lt;a href="http://blog.viget.com/whats-coming-in-rails-20/">existem&lt;/a> &lt;a href="http://mentalized.net/journal/2007/03/13/rails_20_deprecations/">vários&lt;/a> &lt;a href="http://weblog.rubyonrails.org/2007/9/30/rails-2-0-0-preview-release">posts&lt;/a> na &lt;a href="http://www.google.com/search?client=safari&amp;amp;rls=pt-pt&amp;amp;q=rails+2.0&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8">blogosfera&lt;/a> mostrando as particulariedades da nova versão. Vou falar de algumas delas:&lt;/p>
&lt;p>&lt;strong>Paginação&lt;/strong>: o paginate foi removido. Uma das soluções mais bacanas é usar o plugin &lt;a href="http://errtheblog.com/post/929">Will Paginate&lt;/a>, tão simples de usar quanto ao paginador original.&lt;/p>
&lt;p>&lt;strong>Configuração do ambiente&lt;/strong>: configurar o environment.rb pode ser meio embaraçoso. A configuração agora será dividida, o que facilitará no compartilhamento entre diversas aplicações, por exemplo.&lt;/p>
&lt;p>&lt;strong>Query Cache&lt;/strong>: o David Hansson fez uma interessante &lt;a href="http://s3.amazonaws.com/ppt-download/a-peak-at-rails-20-3461.pdf">apresentação&lt;/a> sobre o Rails 2.0 na RailsConf desse ano, e deve vir algo interessante no gerenciamento de cache de consultas a banco de dados.&lt;/p>
&lt;p>&lt;strong>Autenticação HTTP&lt;/strong>: também mostrado na apresentação da RailsConf desse ano e previsto para a próxima versão.&lt;/p>
&lt;p>&lt;strong>Performance&lt;/strong>: implementado uma forma simples de cache para javascript e folhas de estilo.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#a61717;background-color:#e3d2d2">&amp;lt;&lt;/span>%= javascript_include_tag :all, :cache =&amp;gt; true %&amp;gt;
&lt;span style="color:#a61717;background-color:#e3d2d2">&amp;lt;&lt;/span>%= stylesheet_link_tag :all, :cache =&amp;gt; true %&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A &lt;a href="http://weblog.rubyonrails.com/2007/10/5/rails-1-2-4-maintenance-release">versão &lt;strong>1.2.4&lt;/strong>&lt;/a> do framework já inclui alertas de tudo que sairá na versão 2.0. O &lt;a href="http://blog.impactmedia.com.br/">Davis Cabral&lt;/a> publicou &lt;a href="http://blog.impactmedia.com.br/articles/2007/10/4/rails-2-0-suas-apps-so-compatveis">&lt;strong>um script&lt;/strong>&lt;/a> que verifica se sua aplicação já está preparada para as mudanças&lt;/p></description></item><item><title>5 dicas para trabalhar com Rails</title><link>https://leonardofaria.net/2007/08/19/5-dicas-para-trabalhar-com-rails/</link><pubDate>Sun, 19 Aug 2007 20:29:51 -0300</pubDate><guid>https://leonardofaria.net/2007/08/19/5-dicas-para-trabalhar-com-rails/</guid><description>&lt;p>Começar em um ambiente novo de desenvolvimento pode se mostrar desengonçado. Então, para começar em Rails, aí vão minhas dicas, que acho bem produtivas.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Conheça Ruby&lt;/strong>: Ruby tem características interessantes e uma interface humana. Conhecer o modo Ruby de fazer e suas &lt;a href="https://leonardofaria.net/2007/06/28/curiosidade-ruby-do-dia/">particularidades&lt;/a> é obrigatório para trabalhar com Rails.&lt;/li>
&lt;li>&lt;strong>O IRB é meu amigo&lt;/strong>: o IRB é o shell interativo do Ruby. Isso é muito útil para rápidos testes. Vide o &lt;a href="http://tryruby.hobix.com/">tryruby!&lt;/a>&lt;/li>
&lt;li>&lt;strong>API nos bookmarks&lt;/strong>: existem vários sites com a API do Ruby e do Rails, como o &lt;a href="http://www.noobkit.com/">gotAPI&lt;/a>, o &lt;a href="http://www.noobkit.com/">Noobkit&lt;/a>, além do &lt;a href="http://api.rubyonrails.com">site oficial&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Assista a screencasts&lt;/strong>: o &lt;a href="http://www.railscasts.com">Railscasts&lt;/a> possui &lt;a href="http://railscasts.com/episodes;archive">dezenas de episódios&lt;/a> mostrando pequenos howtos. Existem também os screencasts pagos &lt;a href="http://www.peepcode.com/">Peepcode&lt;/a> – que também são muito bons.&lt;/li>
&lt;li>&lt;strong>Leia blogs&lt;/strong>: existem dezenas de bons blogs sobre Rails. No Brasil, existem 2 agregadores interessantes: o &lt;a href="http://forum.rubyonbr.org/blogosfera">Blogosfera&lt;/a> do &lt;a href="http://www.rubyonbr.org">Ruby on Br&lt;/a> e o &lt;a href="http://rubyonrails.com.br/planeta/">Planeta&lt;/a> do &lt;a href="http://rubyonrails.com.br/">Ruby on Rails Brasil&lt;/a>. Em inglês, existem dois &lt;a href="http://www.planetrubyonrails.com/">grandes&lt;/a> &lt;a href="http://www.planetrubyonrails.org">agregadores&lt;/a> diferentes.&lt;/li>
&lt;/ol></description></item><item><title>Endless Pageless</title><link>https://leonardofaria.net/2007/08/11/endless-pageless/</link><pubDate>Sat, 11 Aug 2007 03:41:55 -0300</pubDate><guid>https://leonardofaria.net/2007/08/11/endless-pageless/</guid><description>&lt;p>Ano passado me deparei com o &lt;a href="http://www.searchmash.com">searchmash&lt;/a> (leia-se Google).&lt;br>
Um sistema de busca e… sem paginação! Quando chega no fim da página os próximos registros aparecem magicamente (retificando, via Ajax).&lt;/p>
&lt;p>Após tomar uma Heineken, me &lt;a href="http://unspace.ca/discover/pageless/">deparo&lt;/a> com a mesma abordagem, com seu exemplo em um &lt;a href="http://pursudo.com/">uso ‘comercial&amp;rsquo;&lt;/a>. No site do experimento tem a aplicação em Ruby on Rails pra download, com o snippet responsável por botar os próximos resultados nos trilhos.&lt;/p></description></item><item><title>3 anos de Rails</title><link>https://leonardofaria.net/2007/08/04/3-anos-de-rails/</link><pubDate>Sat, 04 Aug 2007 19:33:35 -0300</pubDate><guid>https://leonardofaria.net/2007/08/04/3-anos-de-rails/</guid><description>&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#099">3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>times &lt;span style="color:#000;font-weight:bold">do&lt;/span> &lt;span style="color:#0086b3">puts&lt;/span> &lt;span style="color:#d14">&amp;#39;Hip hip hurra&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>No último dia 30, o framework Rails &lt;a href="http://weblog.rubyonrails.org/2007/7/30/happy-3-year-anniversary-rails">completou três anos&lt;/a>.&lt;br>
Hoje, uma consulta no Google por ‘Ruby on Rails&amp;rsquo; retorna 43,200,000 resultados. A Amazon retorna 108 livros.&lt;/p>
&lt;p>Para quem vem do mundo enterprise do Java, pode parecer pouco, mas vejo para o Rails um brilhante futuro. Apostem suas fichas.&lt;/p></description></item><item><title>Café com o TOM, RoR na sua sexta a noite</title><link>https://leonardofaria.net/2007/07/21/cafe-com-o-tom-ror-na-sua-sexta-a-noite/</link><pubDate>Sat, 21 Jul 2007 16:25:44 -0300</pubDate><guid>https://leonardofaria.net/2007/07/21/cafe-com-o-tom-ror-na-sua-sexta-a-noite/</guid><description>&lt;p>Nas últimas duas sextas, sempre às 20:30, o Carlos Eduardo, da &lt;a href="http://www.egenial.com.br/">e-Genial&lt;/a>, realizou o &lt;a href="http://www.egenial.com.br/betaEventos">Café com o TOM&lt;/a> (café na sexta a noite?). São palestras rápidas (cerca de 2 horas) sobre assuntos interessantes que assolam o desenvolvimento. A interface desse serviço é feita em Ruby on Rails + Flex e é uma interessante solução para juntar pessoas :)&lt;br>
Na primeira semana, o &lt;a href="http://www.akitaonrails.com/">Fabio Akita&lt;/a> falou sobre &lt;a href="http://jruby.codehaus.org/">JRuby&lt;/a>, mostrando o melhor dos mundos Java e Ruby. Achei bem interessante a possibilidade de aplicações Ruby no desktop.&lt;br>
Ontem foi a vez do &lt;a href="http://www.improveit.com.br/">Vinícius Manhães Teles&lt;/a> falar de Extreme Programming. Infelizmente não pude ver, porque, embora não pareça, desenvolvedores possuem uma vida social. Se esse foi seu caso, a palestra foi gravada e está disponível para &lt;a href="http://www.egenial.com.br/betaEventos/ExtremeProgrammingComViniciusManhaesTeles21_07_2007.rar">download&lt;/a>.&lt;br>
Na próxima sexta, é a vez do gerente do famoso CESAR falar. Novamente, o tema englobará projetos agéis.&lt;/p>
&lt;p>P.S.: o Carlos me confidenciou no gTalk que em agosto vai acontecer um dia inteiro só de palestras.&lt;/p></description></item><item><title>Rails, software de opinião</title><link>https://leonardofaria.net/2007/07/21/rails-software-de-opiniao/</link><pubDate>Sat, 21 Jul 2007 02:50:00 -0300</pubDate><guid>https://leonardofaria.net/2007/07/21/rails-software-de-opiniao/</guid><description>&lt;center>
&lt;img src='https://leonardofaria.net/wp-content/uploads/2007/07/rails-fuckyou.jpg' alt='Fuck you' />
&lt;/center>
&lt;p>Fonte: Canada on Rails, &lt;a href="http://www.flickr.com/photos/eugevon/130610241/">flickr&lt;/a>.&lt;/p></description></item><item><title>Deployment na Dreamhost e RailsPlayground</title><link>https://leonardofaria.net/2007/07/05/deployment-na-dreamhost-e-railsplayground/</link><pubDate>Thu, 05 Jul 2007 22:36:00 -0300</pubDate><guid>https://leonardofaria.net/2007/07/05/deployment-na-dreamhost-e-railsplayground/</guid><description>&lt;p>Minha aplicação &lt;strong>Rails&lt;/strong> está pronta, mas, e agora? Como instalá-la no servidor?&lt;br>
Essa é uma dúvida muito comum entre desenvolvedores Rails. Fazer a configuração do ambiente de produção de uma aplicação é uma tarefa bem DIY (do it yourself, ou, faça você mesmo). Não existe uma fórmula certa ou errada para isso, mas sim diferentes soluções para essa questão. Esse artigo, portanto, mostra uma forma, que eu e o &lt;a href="http://www.simplesideias.com.br">Nando&lt;/a> usamos para rodarmos nossas aplicações. Ele na &lt;a href="http://railsplayground.com/">&lt;strong>RailsPlayground&lt;/strong>&lt;/a> e eu na &lt;a href="http://www.dreamhost.com">&lt;strong>Dreamhost&lt;/strong>&lt;/a>. Vamos lá:&lt;/p>
&lt;h3 id="mão-na-massa">Mão na Massa&lt;/h3>
&lt;p>Faça uma conexão SSH com seu servidor. Para quem não sabe, basicamente, é uma conexão que permite você trabalhar num outro computador remotamente. Assim, você pode, copiar arquivos, deletar e gerenciar sua conta nesse host. Em sistemas *nix, como Mac e Linux, digite em um terminal: ssh &lt;a href="mailto:usuario@meusite.com.br">usuario@meusite.com.br&lt;/a>. Após a autenticação você estará no servidor. No Windows, instale o &lt;a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/">PuTTY&lt;/a>, velho guerreiro para essas operações.&lt;/p>
&lt;p>Nota: esse usuário deve ter, obviamente, acesso a shell. Caso tenha dúvida, verifique seus &lt;a href="https://panel.dreamhost.com/index.cgi?tree=users.users&amp;amp;">usuários&lt;/a>.&lt;/p>
&lt;p>Uma vez já logado no servidor, crie uma aplicação inicial (por exemplo: teste), apenas para gerar os arquivos certos de configuração (como o dispatch.* e .htaccess). No seu diretório principal (/home/meuusuario) crie:&lt;/p>
&lt;pre class="brush: plain; title: ; notranslate" title="">rails teste
&lt;/pre>
&lt;p>Feito isso, envie sua aplicação para sua pasta de usuário. Você pode fazer isso usando um programa de FTP mesmo. Lembre-se de que sua aplicação não deve estar dentro da pasta public_html ou meusite.com.br ou seja, a pasta que você informa no &lt;a href="https://panel.dreamhost.com/index.cgi?tree=domain.manage&amp;amp;">gerenciador de domínios&lt;/a> da Dreamhost.&lt;/p>
&lt;p>Com sua aplicação já no servidor, verifique se seu arquivo environment.rb está com a mesma versão do Rails que está instalada na máquina. Isso previne indesejáveis erros, como o “Rails application failed to start properly”. Não esqueça também de descomentar a linha que coloca a aplicação em modo de produção. Não devemos nunca deixar uma aplicação ir para versão final em modo de desenvolvimento, porque nesse modo os logs gerados são enormes. Verificada versão do Rails e servidor configurado para produção, acerte a permissão dos arquivos.&lt;/p>
&lt;pre class="brush: plain; title: ; notranslate" title="">chmod -R 755 ~/MinhaAppWeb2.0deSucesso
&lt;/pre>
&lt;p>Acertada as permissões, copie o .htaccess e os dispatch.* da aplicação teste para sua aplicação.&lt;/p>
&lt;pre class="brush: plain; title: ; notranslate" title="">cp ~/teste/public/dispatch.* ~/MinhaAppWeb2.0deSucesso/public/
cp ~/teste/public/.htaccess ~/MinhaAppWeb2.0deSucesso/public/
&lt;/pre>
&lt;p>Nota: se você tinha feito uma alteração no .htaccess de sua aplicação, lembre de editar o novo arquivo copiado.&lt;/p>
&lt;p>Falta agora fazer as migrações das tabelas de seu banco de dados. Rake neles!&lt;/p>
&lt;pre class="brush: plain; title: ; notranslate" title="">rake migrate RAILS_ENV="production"
&lt;/pre>
&lt;p>Se você preferir pode usar também o PHPMyAdmin da Dreamhost, para criar/exportar seu banco de dados.&lt;br>
Finalmente, vamos criar um link simbólico da sua aplicação para o lugar público.&lt;/p>
&lt;pre class="brush: plain; title: ; notranslate" title="">ln -s /home/meuusuario/MinhaAppWeb2.0deSucesso/public /home/meuusuario/public_html
&lt;/pre>
&lt;p>Nesse caso, a aplicação ficaria no diretório principal do domínio (desde que public_html tenha sido especificado como sua pasta raiz do domínio no &lt;a href="https://panel.dreamhost.com/index.cgi?tree=domain.manage&amp;amp;">gerenciador&lt;/a> da Dreamhost)&lt;/p></description></item><item><title>Curiosidade Ruby do dia</title><link>https://leonardofaria.net/2007/06/28/curiosidade-ruby-do-dia/</link><pubDate>Thu, 28 Jun 2007 18:27:44 -0300</pubDate><guid>https://leonardofaria.net/2007/06/28/curiosidade-ruby-do-dia/</guid><description>&lt;p>Não existe ‘else if&amp;rsquo; em &lt;strong>Ruby&lt;/strong> e sim ‘elsif&amp;rsquo; – sem o ‘e&amp;rsquo; mesmo! Isso costuma pegar alguns desatentos. Veja o exemplo:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">if&lt;/span> numero &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">print&lt;/span> &lt;span style="color:#d14">&amp;#34;Número é 2&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">elsif&lt;/span> numero &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#099">3&lt;/span>
&lt;span style="color:#0086b3">print&lt;/span> &lt;span style="color:#d14">&amp;#34;Número é 3&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">else&lt;/span>
&lt;span style="color:#0086b3">print&lt;/span> &lt;span style="color:#d14">&amp;#34;Número não é nem 2 nem 3&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Existem &lt;a href="http://simplesideias.com.br/o-modo-ruby-de-fazer/">outras&lt;/a> &lt;a href="http://www.arthurgeek.net/2007/5/22/codigos-mais-claros-usando-ruby">características&lt;/a> &lt;a href="http://www.google.com.br/search?q=ruby-idioms">interessantes&lt;/a> na &lt;a href="http://www.ruby-lang.org/">linguagem&lt;/a>.&lt;/p></description></item><item><title>Novos resources sobre Rails</title><link>https://leonardofaria.net/2007/05/15/novos-resources-sobre-rails/</link><pubDate>Tue, 15 May 2007 01:11:24 -0300</pubDate><guid>https://leonardofaria.net/2007/05/15/novos-resources-sobre-rails/</guid><description>&lt;p>Trabalhar com Rails me garante bons bookmarks (:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="http://wiki.rubyonrails.com/rails/pages/ReservedWords">Palavras reservadas&lt;/a> no Rails. Nada de variáveis chamadas LoadError&lt;/li>
&lt;li>&lt;a href="http://www.railsapi.org/">Ruby on Rails API&lt;/a>: documentação no estilo do PHP&lt;/li>
&lt;li>&lt;a href="http://podcast.sdruby.com/">Screencasts&lt;/a> do Grupo de Usuários de San Diego&lt;/li>
&lt;li>&lt;a href="http://static.twoday.net/matsblog/stuff/Tooltip/Tooltip.Demo.html#tooltipOne">Toottips.js&lt;/a>: criação de tooltips usando script.aculo.us. Testado e aprovado.&lt;/li>
&lt;li>&lt;a href="http://vinsol.com/2007/03/23/simple-captcha-10/">Captcha&lt;/a>: gerando facilmente aquelas imagens de verificação que às vezes pode ser um saco.&lt;/li>
&lt;li>&lt;a href="http://snippets.dzone.com/posts/show/2016">Mudando a classe de um link ativo&lt;/a>, via Rails&lt;/li>
&lt;li>&lt;a href="http://sean.treadway.info/demo/upload/">Upload com Ajax&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.michaelwales.com/2006/12/starting-a-rails-application/">Explicação&lt;/a> sobre a estrutura de diretórios de uma aplicação em Rails.&lt;/li>
&lt;li>&lt;a href="http://jroller.com/page/abstractScope?entry=flash_mp3_imageslideshow_media_player">Flash Playr&lt;/a>: plugin para Flash, pegando dados do Odeo e Flickr&lt;/li>
&lt;li>&lt;a href="http://clarkware.com/cgi/blosxom/2007/02/24#FileUploadFu">attachment_fu&lt;/a>: plugin para upload, remake do acts_as_attachment&lt;/li>
&lt;li>&lt;a href="http://technoweenie.stikipad.com/plugins/show/Acts+as+Attachment">acts_as_attachment&lt;/a>: irmão do acts_as_account. Não esquecer do artigo de &lt;a href="http://www.flex888.com/2007/03/23/multiple-file-upload-with-ruby-on-rails-acts_as_attachment.html">múltiplos uploads&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>A qualquer momento, novos resources nesse mesmo batblog.&lt;/p>
&lt;p>E pra terminar, &lt;a href="http://www.youtube.com/watch?v=PQbuyKUaKFo">esse ‘comercial&amp;rsquo;&lt;/a>. &lt;a href="http://weblog.rubyonrails.com/2007/5/14/hi-i-m-ruby-on-rails">Vi no blog do Ruby on Rails&lt;/a>.&lt;/p></description></item><item><title>Manipulando datas no Rails</title><link>https://leonardofaria.net/2007/05/06/manipulando-datas-no-rails/</link><pubDate>Sun, 06 May 2007 18:20:44 -0300</pubDate><guid>https://leonardofaria.net/2007/05/06/manipulando-datas-no-rails/</guid><description>&lt;p>Em nossas aplicações geralmente trabalhamos com datas. Em nossos bancos de dados, temos sempre um campo do tipo DATETIME. Mas como formatar as datas e evitar tosqueiras como Mon May 18 00:00:00 -0400 2007?&lt;/p>
&lt;p>Estou postando duas formas bacanas de formatar datas no Rails.&lt;/p>
&lt;h3 id="6-de-maio-de-2007">6 de Maio de 2007&lt;/h3>
&lt;p>Para formatar as datas desse modo, basta usar:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">&amp;lt;%=&lt;/span> mydate&lt;span style="color:#000;font-weight:bold">.&lt;/span>strftime(&lt;span style="color:#d14">&amp;#34;%d de %B de %Y&amp;#34;&lt;/span>) &lt;span style="color:#000;font-weight:bold">%&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mas a saída é em inglês. Para traduzir, basta incluir em seu environment.rb:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">MONTHNAMES&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> &lt;span style="color:#d14">%w(Janeiro Fevereiro Março Abril Maio Junho Julho Agosto Setembro Outubro Novembro Dezembro)&lt;/span>
&lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">DAYNAMES&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">%w(Domingo Segunda-Feira Terça-Feira Quart-Feira Quinta-Feira Sexta-Feira Sábado)&lt;/span>
&lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">ABBR_MONTHNAMES&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> &lt;span style="color:#d14">%w(Jan Fev Mar Abr Mai Jun Jul Aug Sep Out Nov Dez)&lt;/span>
&lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">ABBR_DAYNAMES&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#d14">%w(Dom Seg Ter Qua Qui Sex Sab)&lt;/span>
&lt;span style="color:#000;font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Time&lt;/span>
&lt;span style="color:#000;font-weight:bold">alias&lt;/span> &lt;span style="color:#990073">:strftime_nolocale&lt;/span> &lt;span style="color:#990073">:strftime&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">strftime&lt;/span>(&lt;span style="color:#0086b3">format&lt;/span>)
&lt;span style="color:#0086b3">format&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0086b3">format&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>dup
&lt;span style="color:#0086b3">format&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>gsub!(&lt;span style="color:#009926">/%a/&lt;/span>, &lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">ABBR_DAYNAMES&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>wday&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#0086b3">format&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>gsub!(&lt;span style="color:#009926">/%A/&lt;/span>, &lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">DAYNAMES&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>wday&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#0086b3">format&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>gsub!(&lt;span style="color:#009926">/%b/&lt;/span>, &lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">ABBR_MONTHNAMES&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>mon&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#0086b3">format&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>gsub!(&lt;span style="color:#009926">/%B/&lt;/span>, &lt;span style="color:#008080">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#008080">MONTHNAMES&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>mon&lt;span style="color:#000;font-weight:bold">]&lt;/span>)
&lt;span style="color:#0086b3">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>strftime_nolocale(&lt;span style="color:#0086b3">format&lt;/span>)
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>O que o algoritmo faz acima é redeclarar as constantes de Data. Logo em seguida o def strftime traduz também o Time, para retornar as mensagens também em português.&lt;/p>
&lt;h3 id="à-cinco-minutos-atrás">À cinco minutos atrás&lt;/h3>
&lt;p>Essas datas amigáveis podem ser facilmente formatadas em Rails usando simplesmente:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000;font-weight:bold">%=&lt;/span> distance_of_time_in_words_to_now(mydate) &lt;span style="color:#000;font-weight:bold">%&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Entretanto, as frases estão em inglês. Para ter as datas em português, crie um arquivo .rb na sua pasta lib e cole o seguinte código.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">module&lt;/span> &lt;span style="color:#555">ActionView&lt;/span>
&lt;span style="color:#000;font-weight:bold">module&lt;/span> &lt;span style="color:#555">Helpers&lt;/span>
&lt;span style="color:#000;font-weight:bold">module&lt;/span> &lt;span style="color:#555">DateHelper&lt;/span>
&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">distance_of_time_in_words&lt;/span>(from_time, to_time &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#099">0&lt;/span>, include_seconds &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">false&lt;/span>)
from_time &lt;span style="color:#000;font-weight:bold">=&lt;/span> from_time&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_time &lt;span style="color:#000;font-weight:bold">if&lt;/span> from_time&lt;span style="color:#000;font-weight:bold">.&lt;/span>respond_to?(&lt;span style="color:#990073">:to_time&lt;/span>)
to_time &lt;span style="color:#000;font-weight:bold">=&lt;/span> to_time&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_time &lt;span style="color:#000;font-weight:bold">if&lt;/span> to_time&lt;span style="color:#000;font-weight:bold">.&lt;/span>respond_to?(&lt;span style="color:#990073">:to_time&lt;/span>)
distance_in_minutes &lt;span style="color:#000;font-weight:bold">=&lt;/span> (((to_time &lt;span style="color:#000;font-weight:bold">-&lt;/span> from_time)&lt;span style="color:#000;font-weight:bold">.&lt;/span>abs)&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#099">60&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>round
distance_in_seconds &lt;span style="color:#000;font-weight:bold">=&lt;/span> ((to_time &lt;span style="color:#000;font-weight:bold">-&lt;/span> from_time)&lt;span style="color:#000;font-weight:bold">.&lt;/span>abs)&lt;span style="color:#000;font-weight:bold">.&lt;/span>round
&lt;span style="color:#000;font-weight:bold">case&lt;/span> distance_in_minutes
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">0&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">1&lt;/span>
&lt;span style="color:#000;font-weight:bold">return&lt;/span> (distance_in_minutes &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#099">0&lt;/span>) ? &lt;span style="color:#d14">&amp;#39;menos de um minuto&amp;#39;&lt;/span> : &lt;span style="color:#d14">&amp;#39;1 minuto&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">unless&lt;/span> include_seconds
&lt;span style="color:#000;font-weight:bold">case&lt;/span> distance_in_seconds
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">0&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">4&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;menos de 5 segundos&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">5&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">9&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;menos de 10 segundos&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">10&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">19&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;menos de 20 segundos&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">20&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">39&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;meio minuto&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">40&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">59&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;menos de um minuto&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">else&lt;/span> &lt;span style="color:#d14">&amp;#39;1 minuto&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">2&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">44&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#d14">#{&lt;/span>distance_in_minutes&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> minutos&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">45&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">89&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;1 hora&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">90&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">1439&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#d14">#{&lt;/span>(distance_in_minutes&lt;span style="color:#000;font-weight:bold">.&lt;/span>to_f &lt;span style="color:#000;font-weight:bold">/&lt;/span> &lt;span style="color:#099">60&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#099">0&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>round&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> horas&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">1440&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">2879&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;1 dia&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">2880&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">43199&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#d14">#{&lt;/span>(distance_in_minutes &lt;span style="color:#000;font-weight:bold">/&lt;/span> &lt;span style="color:#099">1440&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>round&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> dias&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">43200&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">86399&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;1 mês&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">86400&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">525959&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#34;&lt;/span>&lt;span style="color:#d14">#{&lt;/span>(distance_in_minutes &lt;span style="color:#000;font-weight:bold">/&lt;/span> &lt;span style="color:#099">43200&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>round&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> meses&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">when&lt;/span> &lt;span style="color:#099">525960&lt;/span>&lt;span style="color:#000;font-weight:bold">..&lt;/span>&lt;span style="color:#099">1051919&lt;/span> &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#d14">&amp;#39;1 ano&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">else&lt;/span> &lt;span style="color:#d14">&amp;#34;mais de &lt;/span>&lt;span style="color:#d14">#{&lt;/span>(distance_in_minutes &lt;span style="color:#000;font-weight:bold">/&lt;/span> &lt;span style="color:#099">525960&lt;/span>)&lt;span style="color:#000;font-weight:bold">.&lt;/span>round&lt;span style="color:#d14">}&lt;/span>&lt;span style="color:#d14"> anos&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>O código é uma função escrita pelo &lt;a href="http://www.nomedojogo.com/2007/04/15/datas-amigveis-em-portugus/">Carlos Brando&lt;/a>. Depois da criação do arquivo .rb, chame-o em seu environment.rb:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#0086b3">require&lt;/span> &lt;span style="color:#d14">&amp;#34;nome_do_arquivo_criado_acima&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Por que vale a pena trabalhar com Rails</title><link>https://leonardofaria.net/2007/04/13/por-que-vale-a-pena-trabalhar-com-rails/</link><pubDate>Fri, 13 Apr 2007 22:36:09 -0300</pubDate><guid>https://leonardofaria.net/2007/04/13/por-que-vale-a-pena-trabalhar-com-rails/</guid><description>&lt;p>&lt;img src='https://leonardofaria.net/wp-content/uploads/2007/04/rails.gif' align='right' style="margin-right: 7px" class='white' /> Resolvi escrever esse post após um amigo me perguntar se compensava aprender/trabalhar com Ruby e com Rails, já que é demasiadamente recente e sem apoio de grandes empresas, como acontece com o PHP e Python.&lt;/p>
&lt;p>Minha curiosidade de trabalhar com Rails veio após todo o hype envolvido no framework e particularmente, depois que conheci o &lt;a href="http://www.orkurioso.com">Orkurioso&lt;/a> (serviço todo hypado para monitorar scraps do &lt;a href="http://www.orkut.com">orkut&lt;/a>) e vi o &lt;a href="http://media.rubyonrails.org/video/rails_take2_with_sound.mov">screencast&lt;/a> (51MB, .mov) do &lt;a href="http://www.loudthinking.com/about.html">David Heinemeier&lt;/a>, junto a todas as aplicações da &lt;a href="http://www.37signals.com/">37signals&lt;/a>.&lt;/p>
&lt;p>O screencast é realmente algo bem fantástico. Para quem não viu, é a montagem de um blog em 15 minutos, ou 58 linhas. O screencast mostra as várias caracteristicas do framework, com o modelo de &lt;a href="http://pt.wikipedia.org/wiki/MVC">MVC&lt;/a> de desenvolvimento, a fácil configuração de banco de dados (aliás, que configuração?) e a ‘humanização&amp;rsquo; da linguagem, que não se parece com aquelas monstruosidades da sintaxes de outras linguagens.&lt;/p>
&lt;p>Em um rápido resumo, MVC é um padrão de arquitetura de aplicações que visa separar a lógica da aplicação (Model), da interface do usuário (View) e do fluxo da aplicação (Controller). Isso garante uma maior organização da aplicação e uma maior facilidade em manutenção do código. A configuração de banco de dados no Rails é simples. Primeiro, porque se basea em um único arquivo e por convenção, as entidades possuem o mesmo nome da sua tabela, mas no singular. Desse modo, se você tem uma tabela articles, deverá ter uma classe Article. A humanização da linguagem também merece destaque. Característica do Ruby, a humanização garante códigos mais legíveis. Exemplo: “The quick brown fox”.length retorna o tamanho de uma string. “The quick brown fox”.upcase retorna THE QUICK BROWN FOX. Simples assim.&lt;br>
&lt;img src='https://leonardofaria.net/wp-content/uploads/2007/04/rails.png' alt='Rails' class='white' align='right' />&lt;br>
Essas são apenas algumas das vantagens do RoR. Algo que também me chamou muito a atenção foram os plugins, que seja para fazer de sistema de login a envio de arquivo estão lá. Plugins, conceitos como DRY (não se repita), arquitetura MVC só garantem o ganho de produtividade. Tenho re-descobrido o prazer de programar e é essa paixão, de &lt;a href="http://rubyonbr.org/articles/2006/12/06/rails-sucesso-pela-arrogncia/">software&lt;/a> de &lt;a href="http://www.loudthinking.com/arc/000516.html">opinião&lt;/a>, que o Rails desperta nos desenvolvedores.&lt;/p>
&lt;h3 id="caindo-na-real">Caindo na Real&lt;/h3>
&lt;p>Algo que não posso de esquecer de citar e que tem tudo a ver com desenvolvimento é o &lt;a href="http://gettingreal.37signals.com">Getting Real&lt;/a>, livro da 37signals que aborda a criação de aplicações web. Getting Real significa um meio rápido, menor, que reflete menos software, menos funcionalidades, menos tudo que não é essencial. O livro mostra porque é interessante permanecer pequeno e ser ágil, além de mostrar as experiências reais de uma empresa de sucesso. Getting Real tem sua &lt;a href="http://gettingreal.37signals.com/GR_por.php">versão em português&lt;/a> e é leitura obrigatória para quem projeta aplicações.&lt;/p></description></item><item><title>Criando RSS com Rails</title><link>https://leonardofaria.net/2007/04/12/criando-rss-com-rails/</link><pubDate>Thu, 12 Apr 2007 22:27:15 -0300</pubDate><guid>https://leonardofaria.net/2007/04/12/criando-rss-com-rails/</guid><description>&lt;p>&lt;strong>Nota&lt;/strong>: antes do artigo vale lembrar do &lt;a href="http://www.egenial.com.br/curso/">curso online de Ruby on Rails + Flex&lt;/a> do &lt;a href="http://www.egenial.com.br">Carlos&lt;/a>. Ele já fez &lt;a href="http://blog.egenial.com.br/?p=42">alguns experimentos&lt;/a> com esses dois ambientes e rolou um resultado bacana. Vamos ao artigo então :P&lt;/p>
&lt;p>Não sou o maior especialista em padrões de distribuição de conteúdo. Existe gente melhor para isso, mas em um projeto meu, precisei da criação de feeds. O primeiro passo é mapear o arquivos routes.rb (config/routes.rb) do seu projeto.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">map&lt;span style="color:#000;font-weight:bold">.&lt;/span>resources &lt;span style="color:#990073">:articles&lt;/span>, &lt;span style="color:#990073">:collections&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> {&lt;span style="color:#990073">:rss&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#990073">:get&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esse mapeamento vai permitir que você tenha o seguinte endereço: &lt;a href="http://www.meusite.com/articles/rss">www.meusite.com/articles/rss&lt;/a>. Feito isso, abra seu controller (products_controller.rb) e adicione o método RSS, que buscará os últimos registros do banco.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#000;font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">rss&lt;/span>
  &lt;span style="color:#008080">@articles&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#008080">Article&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>find(&lt;span style="color:#990073">:all&lt;/span>, &lt;span style="color:#990073">:limit&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#099">10&lt;/span>, &lt;span style="color:#990073">:order&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#d14">&amp;#39;created_at DESC&amp;#39;&lt;/span>)
  render &lt;span style="color:#990073">:layout&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">false&lt;/span>
&lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Observe o “render :layout =&amp;gt; false”. Ele evita que o layout seja carregado, que não será necessário no seu feed. Feito isso, é necessário a criação da view. Na pasta view, crie o arquivo rss.rxhml.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>instruct! &lt;span style="color:#990073">:xml&lt;/span>, &lt;span style="color:#990073">:version&lt;/span>&lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span>&lt;span style="color:#d14">&amp;#34;1.0&amp;#34;&lt;/span>
xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>rss(&lt;span style="color:#990073">:version&lt;/span>&lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span>&lt;span style="color:#d14">&amp;#34;2.0&amp;#34;&lt;/span>){
  xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>channel{
    xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>title(&lt;span style="color:#d14">&amp;#34;Meu site&amp;#34;&lt;/span>)
    xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>link(&lt;span style="color:#d14">&amp;#34;http://www.meusite.com/&amp;#34;&lt;/span>)
    xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>description(&lt;span style="color:#d14">&amp;#34;Esse é meu site!&amp;#34;&lt;/span>)
    xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>language(&lt;span style="color:#d14">&amp;#39;en-uk&amp;#39;&lt;/span>)
      &lt;span style="color:#000;font-weight:bold">for&lt;/span> article &lt;span style="color:#000;font-weight:bold">in&lt;/span> &lt;span style="color:#008080">@articles&lt;/span>
        xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>item &lt;span style="color:#000;font-weight:bold">do&lt;/span>
          xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>title(article&lt;span style="color:#000;font-weight:bold">.&lt;/span>title)
          xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>description(article&lt;span style="color:#000;font-weight:bold">.&lt;/span>body)     
          xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>author(&lt;span style="color:#d14">&amp;#34;contato@meusite.com&amp;#34;&lt;/span>)               
          xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>pubDate(article&lt;span style="color:#000;font-weight:bold">.&lt;/span>created_at&lt;span style="color:#000;font-weight:bold">.&lt;/span>strftime(&lt;span style="color:#d14">&amp;#34;%a, %d %b %Y %H:%M:%S %z&amp;#34;&lt;/span>))
          xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>link(article_url(article))
          xml&lt;span style="color:#000;font-weight:bold">.&lt;/span>guid(article_url(article))
        &lt;span style="color:#000;font-weight:bold">end&lt;/span>
      &lt;span style="color:#000;font-weight:bold">end&lt;/span>
  }
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esse é um modelo básico. Algumas aulinhas sobre o padrão podem garantir mais diversão. Algo a mais que você pode fazer é disponibilizar o endereço do feed na tag&lt;/p></description></item><item><title>Mais resources sobre Ruby on Rails</title><link>https://leonardofaria.net/2007/04/07/mais-resources-sobre-ruby-on-rails/</link><pubDate>Sat, 07 Apr 2007 22:06:23 -0300</pubDate><guid>https://leonardofaria.net/2007/04/07/mais-resources-sobre-ruby-on-rails/</guid><description>&lt;p>No desenvolvimento de um projeto pessoal – que devo lançar em breve – ando vendo algumas coisas bacanas. Ai estão:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="http://technoweenie.stikipad.com/plugins/show/Acts+as+Authenticated">Acts as Authenticated&lt;/a>: um plugin para fazer autenticação em sites. Bem prático.&lt;/li>
&lt;li>&lt;a href="http://www.bluetux.com.br/blog/show/4">Populando um select com Ajax&lt;/a>: um artigo de como fazer uma tag select ser montada dinamicamente com ajuda do script.aculo.us.&lt;/li>
&lt;li>&lt;a href="http://www.seoonrails.com/even-better-looking-urls-with-permalink_fu">Permalink&lt;/a>: um plugin para criação de permalinks.&lt;/li>
&lt;li>&lt;a href="http://roberto.techmobil.com.br/2007/03/31/fksearch-meu-1%C2%B0-plugin-rails/">FkSearch&lt;/a>: plugin de autocompletar estilo del.icio.us&lt;/li>
&lt;/ol>
&lt;p>Extra: dicas para &lt;a href="http://railsforum.com/viewtopic.php?id=1336">Textmate + Rails&lt;/a>.&lt;/p></description></item><item><title>Ruby on Rails on Mac OS X</title><link>https://leonardofaria.net/2007/03/11/ruby-on-rails-on-mac-os-x/</link><pubDate>Sun, 11 Mar 2007 13:58:58 -0300</pubDate><guid>https://leonardofaria.net/2007/03/11/ruby-on-rails-on-mac-os-x/</guid><description>&lt;p>[Estou de fato sumido do blog. &lt;a href="https://leonardofaria.net/2006/12/30/mudanca-e-previsoes/">Mudei&lt;/a> para &lt;a href="http://pt.wikipedia.com/wiki/piumhi">Piumhi Harbor&lt;/a> e fiquei com computador somente na primeira semana. Meu iBook teve problemas e fiquei quase um mês esperando. Enfim, computador novo, finalmente posso brincar com Ruby on Rails. Inclusive já estou começando a trabalhar em um projeto comercial com o uso desse framework.]&lt;/p>
&lt;p>Enfim, estou escrevendo esse post para falar das formas de instalação do Ruby on Rails no Mac OS X. &lt;a href="http://weblog.rubyonrails.org/2006/8/7/ruby-on-rails-will-ship-with-os-x-10-5-leopard">Vale lembrar&lt;/a> que a próxima do Mac OS, Leopard, &lt;a href="http://www.apple.com/server/macosx/leopard/more.html">virá com Rails já instalado&lt;/a>, mas enquanto o felino não chega, temos um trabalhinho extra.&lt;/p>
&lt;p>A forma menos trabalhosa de se ter Rails no Tiger é através do &lt;a href="http://locomotive.sourceforge.net/">Locomotive&lt;/a>, que é um pacote all-in-one. Instalação simplificada, basta arrastar a pasta do programa para a Applications&amp;rsquo; folder e pronto!&lt;/p>
&lt;p>A forma mais disseminada é através &lt;a href="http://hivelogic.com/narrative/articles/ruby_rails_lighttpd_mysql_tiger?status=301">desse artigo&lt;/a> de Dan Benjamin. A instalação é toda feita manualmente e compila os vários itens necessários para o funcionamento do framework. Vale lembrar que para essa instalação é necessário ter o Xcode instalado na máquina. Para quem não sabe, Xcode é um ambiente completo de desenvolvimento da própria Apple. Ele sempre vem em CD ou DVD nos computadores da Apple, mas quem não tem pode &lt;a href="http://developer.apple.com/tools/download/">puxar os 924MB&lt;/a> do site de desenvolvedores da Apple.&lt;/p>
&lt;p>Outra forma que vi é ter &lt;a href="http://maczealots.com/tutorials/ruby-on-rails/">RoR junto ao Apache&lt;/a>.&lt;/p>
&lt;p>E por último tem um pacote não tão conhecido chamado &lt;a href="http://www.rbsoftware.net/?page=wsxk">WebServerXKit&lt;/a>, que reúne Apache, MySQL, PHP, PostgreSQL e… RoR!&lt;/p>
&lt;p>Mais informações sobre instalações no Mac e em outros sistemas podem ser vistas no &lt;a href="http://wiki.rubyonrails.org/rails">wiki&lt;/a> do site oficial.&lt;/p></description></item><item><title>Apresentando Ruby on Rails</title><link>https://leonardofaria.net/2007/01/27/apresentando-ruby-on-rails/</link><pubDate>Sat, 27 Jan 2007 00:39:28 -0200</pubDate><guid>https://leonardofaria.net/2007/01/27/apresentando-ruby-on-rails/</guid><description>&lt;p>Resolvi escrever esse post para mostrar algumas características do &lt;a href="http://www.rubyonrails.org">Ruby on Rails&lt;/a>, um framework que me chamou muito a atenção após &lt;a href="http://media.rubyonrails.org/video/rails_take2_with_sound.mov">ver a implementação&lt;/a> de um blog em 58(!) linhas.&lt;/p>
&lt;p>O Rails é um framework web criado em 2004, com 4000 linhas de código, por &lt;a href="http://www.loudthinking.com/">David Heinemeier Hansson&lt;/a>. Foi projetado para que suas camadas se comuniquem de forma transparente e seguindo a arquitetura &lt;a href="http://pt.wikipedia.org/wiki/MVC">MVC&lt;/a>. Isso o torna extremamente produtivo e simples de aprender.&lt;/p>
&lt;p>Entre outras características bacanas do RoR posso citar o suporte nativo a Ajax, pela biblioteca &lt;a href="http://script.aculo.us">script.aculo.us&lt;/a> e a portabilidade. Desenvolvo no Mac OS e levo para meu servidor Linux sem sofrimentos. Além disso, o Rails conta com uma forma facilitada de instalar novos componentes (o gem). Esses componentes facilitam tarefas do programador, partindo desde um gerenciador de uploads até um sistema de galerias de imagens.&lt;/p>
&lt;p>É com essa introdução da linguagem que aponto alguns links de onde começar na linguagem.&lt;/p>
&lt;h2 id="começando">Começando&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="http://www.rubyonrails.org/">Ruby on Rails&lt;/a> (onde tudo começou)&lt;/li>
&lt;li>&lt;a href="http://www.ruby-lang.org/en/documentation/quickstart/">Conhecendo Ruby em 20 minutos&lt;/a> e &lt;a href="http://tryruby.hobix.com/">try ruby!&lt;/a> (tutorial interativo da linguagem).&lt;br>
Mais documentação: &lt;a href="http://ruby-doc.org/">Ruby-Doc.org&lt;/a>, &lt;a href="http://www.ruby-lang.org/en/">Ruby Programming Language&lt;/a> e &lt;a href="http://railshelp.com/">RailsHelp&lt;/a>.&lt;/li>
&lt;li>Ruby para quem &lt;a href="http://www.ruby-lang.org/en/documentation/ruby-from-other-languages/to-ruby-from-php/">conhece PHP&lt;/a>, para &lt;a href="http://www.ruby-lang.org/en/documentation/ruby-from-other-languages/to-ruby-from-java/">quem conhece Java&lt;/a> e para quem vem de &lt;a href="http://www.ruby-lang.org/en/documentation/ruby-from-other-languages/">outras linguagens&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h2 id="em-pt_br">Em pt_br&lt;/h2>
&lt;ol start="4">
&lt;li>&lt;a href="http://www.rubyonrails.com.br/">Ruby on Rails in Brazil&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rubyonbr.org/">Ruby on Br&lt;/a> – Comunidade bem bacana&lt;/li>
&lt;li>&lt;a href="http://pt.wikipedia.org/wiki/Ruby_on_Rails">Wikipedia falando sobre RoR&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.egenial.com.br/articles/2006/09/23/pequena-introdu%C3%A7%C3%A3o-ao-ruby-on-rails">Outra introdução&lt;/a> sobre RoR em português.&lt;/li>
&lt;li>&lt;a href="http://wiki.rubygarden.org/Ruby/page/show/YesAnotherRailsTutorial">Outro tutorial&lt;/a> prático sobre Rails&lt;/li>
&lt;li>&lt;a href="http://kb.reflectivesurface.com/br/tutoriais/railsDiversaoLucro/">Rails para diversão e lucro&lt;/a> – conteúdo muito bom!&lt;/li>
&lt;li>&lt;a href="http://www.eustaquiorangel.com/">Blog do Eustáquio&lt;/a>, figurinha carimbada e autor do livro &lt;a href="http://www.submarino.com.br/books_productdetails.asp?Query=ProductPage&amp;amp;ProdTypeId=1&amp;amp;ProdId=1470481&amp;amp;franq=170759">Ruby: Conhecendo a linguagem&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.balanceonrails.com.br/">Balance On Rails&lt;/a>, de outro cara carimbado, Fabio Akita, autor do &lt;a href="http://www.brasport.com.br/index.php?Escolha=8&amp;amp;Livro=L00209">Repensando a Web com Rails&lt;/a> (aliás, peguem o &lt;a href="http://www.esnips.com/doc/d87f0bf9-ec81-4769-a943-d17bc466f7d2/Rails-03.pdf">capítulo demo&lt;/a>).&lt;/li>
&lt;li>&lt;a href="http://rails.jkcosta.info/">juca on rails&lt;/a> – o cara fez um mini curso de Rails por IRC. No blogue tem todos os logs das aulas. Além disso, tem um ótimo &lt;a href="http://rails.jkcosta.info/articles/2006/06/15/livros-de-rails">post sobre livros da linguagem&lt;/a>.&lt;/li>
&lt;li>&lt;a href="http://alexmrg.wordpress.com/">Tecnologias Web&lt;/a> – blog falando de Rails. Tem um post falando &lt;a href="http://alexmrg.wordpress.com/2006/12/28/what-the-fuck-is-mvc/">de que diabos é esse tal de MVC&lt;/a>.&lt;/li>
&lt;li>Listas no Google Groups: &lt;a href="http://groups.google.com/group/rails-br">rails-br&lt;/a> e &lt;a href="http://groups.google.com/group/rubybrasil">ruby-brasil&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h2 id="more">More&lt;/h2>
&lt;ol start="15">
&lt;li>&lt;a href="http://raa.ruby-lang.org/">Ruby Application Archive&lt;/a> e &lt;a href="http://rubyforge.org/">RubyForge&lt;/a>: snippets para projetos&lt;/li>
&lt;li>&lt;a href="http://www.top-ten-tutorials.com/search.php?search=rails">Mais tutoriais de Rails&lt;/a> e &lt;a href="http://digg.com/search?section=news&amp;amp;s=rails">Rails no Digg&lt;/a>&lt;br>
&lt;a href="http://www.ruby-forum.com/">Ruby Forum&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;em>P.S.: Se você tem algum link pra indicar ou uma retificação no artigo, comente!&lt;/em>&lt;/p></description></item></channel></rss>