<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dicas on Leonardo Faria</title><link>https://leonardofaria.net/tags/dicas/</link><description>Recent content in dicas on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Aug 2007 20:29:51 -0300</lastBuildDate><atom:link href="https://leonardofaria.net/tags/dicas/index.xml" rel="self" type="application/rss+xml"/><item><title>5 dicas para trabalhar com Rails</title><link>https://leonardofaria.net/2007/08/19/5-dicas-para-trabalhar-com-rails/</link><pubDate>Sun, 19 Aug 2007 20:29:51 -0300</pubDate><guid>https://leonardofaria.net/2007/08/19/5-dicas-para-trabalhar-com-rails/</guid><description>Começar em um ambiente novo de desenvolvimento pode se mostrar desengonçado. Então, para começar em Rails, aí vão minhas dicas, que acho bem produtivas.
Conheça Ruby: Ruby tem características interessantes e uma interface humana. Conhecer o modo Ruby de fazer e suas particularidades é obrigatório para trabalhar com Rails. O IRB é meu amigo: o IRB é o shell interativo do Ruby. Isso é muito útil para rápidos testes. Vide o tryruby!</description></item><item><title>Novos resources sobre Rails</title><link>https://leonardofaria.net/2007/05/15/novos-resources-sobre-rails/</link><pubDate>Tue, 15 May 2007 01:11:24 -0300</pubDate><guid>https://leonardofaria.net/2007/05/15/novos-resources-sobre-rails/</guid><description>Trabalhar com Rails me garante bons bookmarks (:
Palavras reservadas no Rails. Nada de variáveis chamadas LoadError Ruby on Rails API: documentação no estilo do PHP Screencasts do Grupo de Usuários de San Diego Toottips.js: criação de tooltips usando script.aculo.us. Testado e aprovado. Captcha: gerando facilmente aquelas imagens de verificação que às vezes pode ser um saco. Mudando a classe de um link ativo, via Rails Upload com Ajax Explicação sobre a estrutura de diretórios de uma aplicação em Rails.</description></item><item><title>Mais resources sobre Ruby on Rails</title><link>https://leonardofaria.net/2007/04/07/mais-resources-sobre-ruby-on-rails/</link><pubDate>Sat, 07 Apr 2007 22:06:23 -0300</pubDate><guid>https://leonardofaria.net/2007/04/07/mais-resources-sobre-ruby-on-rails/</guid><description>No desenvolvimento de um projeto pessoal – que devo lançar em breve – ando vendo algumas coisas bacanas. Ai estão:
Acts as Authenticated: um plugin para fazer autenticação em sites. Bem prático. Populando um select com Ajax: um artigo de como fazer uma tag select ser montada dinamicamente com ajuda do script.aculo.us. Permalink: um plugin para criação de permalinks. FkSearch: plugin de autocompletar estilo del.icio.us Extra: dicas para Textmate + Rails.</description></item><item><title>Pseudo-seletores são legais</title><link>https://leonardofaria.net/2006/10/28/pseudo-seletores-sao-legais/</link><pubDate>Sat, 28 Oct 2006 01:52:29 -0300</pubDate><guid>https://leonardofaria.net/2006/10/28/pseudo-seletores-sao-legais/</guid><description>Todo mundo lembra do pseudo-seletor :hover, quando quer fazer um simples efeito rollover em um link. Well, o que pouco sabe é que existe outros dois seletores muito bacanas: o :after e o :before.
Veja o exemplos:
input:before { content:&amp;#34;&amp;amp;nbsp;&amp;#34;;} a:before { content:&amp;#34;&amp;gt;&amp;#34;;} a:after { content: &amp;#34; (link externo) &amp;#34;; } a:after { content: &amp;#34; (&amp;#34; attr(href) &amp;#34;)&amp;#34;; } O primeiro exemplo coloca um espaço (entidade ) antes do conteúdo do botão.</description></item></channel></rss>