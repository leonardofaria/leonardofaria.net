<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>portfolio on Leonardo Faria</title><link>https://leonardofaria.github.io/leonardofaria.net/tags/portfolio/</link><description>Recent content in portfolio on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Oct 2019 00:36:30 -0300</lastBuildDate><atom:link href="https://leonardofaria.github.io/leonardofaria.net/tags/portfolio/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a website for my Apple Collection</title><link>https://leonardofaria.github.io/leonardofaria.net/2019/10/17/creating-a-website-for-my-apple-collection/</link><pubDate>Thu, 17 Oct 2019 00:36:30 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2019/10/17/creating-a-website-for-my-apple-collection/</guid><description>&lt;p>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2019/10/collection.jpg" alt="Part of the collection">&lt;/p>
&lt;p>A while ago I started an Apple Collection. After a few laptops and a few iDevices, I decided that I should start collecting info about my iThings. In the beginning, I created a gist containing model, serial number, how did I get the device, minimum/maximum OS, etc.&lt;/p>
&lt;p>The list kept going bigger and bigger and the content started looking messy. The natural way to organize my data would be inside a SQL database, with the information distributed in columns. After organizing the information in tables, I would create a graphQL API (the one cool kids use these days) to give me the data needed to populate my UI – probably written in React, compiled with Babel and packed with webpack.&lt;/p>
&lt;p>Reading the previous paragraph aloud, you can hear many technologies and I even ignored the backend language and UI details like SASS or styled-components. It sounds a bit overwhelming when the ultimate goal is showing a list of items in a nice design.&lt;/p>
&lt;p>That&amp;rsquo;s being said, I thought: how can I deliver this content without:&lt;/p>
&lt;ul>
&lt;li>An API or any backend work&lt;/li>
&lt;li>Any JS framework/library&lt;/li>
&lt;li>Any JS tooling (webpack, babel, etc)&lt;/li>
&lt;li>Any CSS work&lt;/li>
&lt;/ul>
&lt;p>On top of these constraints, I had a few stretch goals:&lt;/p>
&lt;ul>
&lt;li>Create a website with good accessibility&lt;/li>
&lt;li>Create a website that works in old browsers, since I have computers running Mac OS 9.2 and iDevices running iOS 3&lt;/li>
&lt;/ul>
&lt;p>Challenge accepted. One index.html, a few vanilla JS files, no custom CSS. TL,DR:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://bit.ly/collection-website">Final website&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bit.ly/collection-source">Source code&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="no-api-or-any-backend-work">No API or any backend work&lt;/h2>
&lt;p>A while ago I saw a SaaS product called &lt;a href="https://steinhq.com/">Stein&lt;/a>. You create your data inside a Google Sheets document and they give you an endpoint with your data. Their library works like handlebars and it looks perfect for my use case:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#000080">div&lt;/span> &lt;span style="color:#008080">data-stein-url&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;https://api.steinhq.com/v1/storages/5cc158079ec99a2f484dcb40/Sheet1&amp;#34;&lt;/span> &lt;span style="color:#008080">data-stein-limit&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;2&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#000080">div&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#000080">h1&lt;/span>&amp;gt;{{title}}&amp;lt;/&lt;span style="color:#000080">h1&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#000080">h6&lt;/span>&amp;gt;By {{author}}&amp;lt;/&lt;span style="color:#000080">h6&lt;/span>&amp;gt;
{{content}}
Read on &amp;lt;&lt;span style="color:#000080">a&lt;/span> &lt;span style="color:#008080">href&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;{{link}}&amp;#34;&lt;/span>&amp;gt;Medium&amp;lt;/&lt;span style="color:#000080">a&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#000080">div&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#000080">div&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="no-js-frameworklibrary-and-tooling">No JS framework/library and tooling&lt;/h2>
&lt;p>Decided to avoid adding a framework or library in this project since the use case didn&amp;rsquo;t need one. All JS interactions on this page are quite simple (show/hide menus, open a modal screen, handle permalinks).&lt;/p>
&lt;p>Since I was not using a framework/library, I would avoid adding webpack and babel. No need to dig into presets and loaders.&lt;/p>
&lt;p>PS. You can argue that I&amp;rsquo;d have chosen create-react-app or Next.js and get all these problems solved, but no.&lt;/p>
&lt;h2 id="no-css-work">No CSS work&lt;/h2>
&lt;p>I love writing CSS, especially when I can use SASS but I decided to do not write CSS here. I had a few good reasons to avoid doing it:&lt;/p>
&lt;ul>
&lt;li>I had no designs and despite I could do something decent-looking, I didn&amp;rsquo;t want to put time and energy on it;&lt;/li>
&lt;li>I wanted to use &lt;a href="https://tailwindcss.com">Tailwind CSS&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>If you never heard about Tailwind CSS, please don&amp;rsquo;t try to think “it is a Bootstrap option”. Here is a good short explanation, from their website:&lt;/p>
&lt;blockquote class="wp-block-quote">
&lt;p>
Most CSS frameworks do too much.&lt;br />&amp;#8230;&lt;br />Instead of opinionated predesigned components, Tailwind provides low-level utility classes that let you build completely custom designs without ever leaving your HTML.
&lt;/p>
&lt;/blockquote>
&lt;p>This is pretty much true. A quick search gives you many web apps “rebuilt” with Tailwind CSS:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/whatsapp-web-clone">Whatsapp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/telegram-desktop-using-tailwindcss">Telegram&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/facebook-clone">Facebook&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/reddit-clone">Reddit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/youtube-clone">Youtube&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/slack-clone-1">Slack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/coinbase-clone">Coinbase&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/github-profile-clone">Github&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/trello-panel-clone">Trello&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codepen.io/drehimself/full/vpeVMx/">Twitter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=_JhTaENzfZQ">Netlify&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="create-a-website-with-good-accessibility">Create a website with good accessibility&lt;/h2>
&lt;p>Last month I started taking accessibility courses at &lt;a href="https://dequeuniversity.com/curriculum/packages/full">Deque University&lt;/a>. Their content is great and it reminders me that &lt;strong>HTML is accessible by default&lt;/strong>. By using a semantic HTML structure and testing basic things like keyboard navigation and colour contrast you eliminate several barries that move people with disabilities from your content. I am not an accessibility expert but here are a few accessibility-related things I&amp;rsquo;ve worked on this website:&lt;/p>
&lt;ul>
&lt;li>Disable stylesheets: by disabling stylesheets you can ensure that your content follows a logical/structural way.&lt;/li>
&lt;li>VoiceOver: VoiceOver is included in macOS and iOS. It is &lt;a href="https://webaim.org/articles/voiceover/">very simple to use it&lt;/a> and by using it you can have a better understanding of how people use this feature.&lt;/li>
&lt;li>Modals: modals can be problematic. Decided to follow &lt;a href="https://bitsofco.de/accessible-modal-dialog/">Ire Aderinokun&amp;rsquo;s&lt;/a> approach.&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd">axe&lt;/a>: the extension is an accessibility checker for WCAG 2 and Section 508 accessibility rules.&lt;/li>
&lt;/ul>
&lt;p>It is not perfect, there are a few things that I didn&amp;rsquo;t work it, like adding a skip link to the main content. If you are curious, &lt;a href="https://github.com/leonardofaria/collection/pull/1">here is the Pull Request with all the changes&lt;/a>.&lt;/p>
&lt;h2 id="create-a-website-that-works-in-old-browsers">Create a website that works in old browsers&lt;/h2>
&lt;p>I couldn&amp;rsquo;t achieve this objective since I had no control over scripts and styles. However, it doesn&amp;rsquo;t seem to be impossible. A few things I noticed:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/SteinHQ/Expedite">Expedite&lt;/a> (Stein client) uses &lt;a href="https://github.com/SteinHQ/Expedite/blob/master/index.js#L51-L54">fetch&lt;/a>, which was only &lt;a href="https://caniuse.com/#feat=fetch">added in Safari 10&lt;/a>. The request to their server could be probably replaced for an XMLHttpRequest.&lt;/li>
&lt;li>Tailwind uses flexbox in many elements. Safari only started supporting Flexbox in iOS 7. Maybe I could write a few properties to their existing elements to achieve a decent look.&lt;/li>
&lt;li>SSL Certificates may be an issue to old browsers.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusions">Conclusions&lt;/h2>
&lt;p>Making this website was super fun. The fact I added “constraints” to it made think outside the box. Out of curiosity, I tracked my time using &lt;a href="https://clockify.me">Clockify&lt;/a> and I&amp;rsquo;ve worked 13h on this, between coding, creating the data, testing and writing this post.&lt;/p></description></item><item><title>the ink magazine</title><link>https://leonardofaria.github.io/leonardofaria.net/2015/12/12/the-ink-magazine/</link><pubDate>Sat, 12 Dec 2015 21:12:26 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2015/12/12/the-ink-magazine/</guid><description>&lt;p>&lt;a href="http://bit.ly/the-ink-magazine">the ink magazine&lt;/a> was an &lt;a href="http://wrmf.ca/posts/wmdd-4815-assignments/">assignment&lt;/a> of my &lt;a href="http://wrmf.ca/posts/wmadd-4815-outline/">HTML &amp;amp; CSS classes&lt;/a> in the &lt;a href="http://langara.ca/programs-and-courses/programs/web-and-mobile-app/index.html">Web and Mobile App Design and Development&lt;/a> program, performed in &lt;a href="http://langara.bc.ca">Langara College&lt;/a>.&lt;/p>
&lt;p>The students was supposed to create a magazine responsive layout using HTML/CSS. (I usually use Gulp and SASS in my projects, however, I didn&amp;rsquo;t use extra tools in this task).&lt;/p>
&lt;p>The &lt;a href="http://bit.ly/1M9LNF5">source code&lt;/a> is available in &lt;a href="http://github.com/leonardofaria/">my Github profile&lt;/a>.&lt;/p>
&lt;p>&lt;a href="http://bit.ly/the-ink-magazine">&lt;img src="https://raw.github.com/leonardofaria/the-ink-magazine/master/img/static/mockup.jpg" alt="">&lt;/a>&lt;/p></description></item><item><title>codestacker in Github</title><link>https://leonardofaria.github.io/leonardofaria.net/2015/08/26/codestacker-in-github/</link><pubDate>Wed, 26 Aug 2015 19:26:00 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2015/08/26/codestacker-in-github/</guid><description>&lt;p>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2015/08/codestacker.jpg" alt="codestacker">&lt;/p>
&lt;p>Some years ago, precisely on &lt;a href="https://leonardofaria.net/2008/07/02/nasceu-codestackercom/">July/2008&lt;/a> I created &lt;a href="http://codestacker.com">codestacker&lt;/a>. I know, there were several options to collect snippets, but I decided to code my own solution. More than that I have planned to develop a Textmate bundle and a Mac OS Widget (who cares?), however I did not code these functions.&lt;/p>
&lt;p>In the latest days, I migrated all old data to a new app written in Rails 4.2 and hosted on Heroku. The &lt;a href="http://github.com/leonardofaria/codestacker">source code is available&lt;/a> in Github.&lt;/p></description></item><item><title>Writing for IELTS and TOEFL</title><link>https://leonardofaria.github.io/leonardofaria.net/2015/06/10/writing-skills-for-ielts-and-toefl/</link><pubDate>Wed, 10 Jun 2015 17:44:14 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2015/06/10/writing-skills-for-ielts-and-toefl/</guid><description>&lt;p>I took the TOEFL exam some weeks ago. This is one of most popular tests to prove English skills. It is considered by many people a tough exam because it requires not only English skills, but also time management skills.&lt;/p>
&lt;p>The test takes 4 hours to be finished. The last part of the test is to write 2 texts in 50 minutes. In the first task, the student is supposed to summarise a text and a lecture, which lecture sometimes cast doubt in the passage. The second one is called independent task. In this task the student should write about a specific subject. During my preparation, I written more than 50 texts and I believe that practice makes perfection. After this hard work, I imagined create a simple app with exercises and tips to improve the writing skills.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://writingskills.leonardofaria.net">Writing for IELTS and TOEFL&lt;/a>&lt;/strong> has 100 exercises to practice writing. In addition, I collected several tips to improve writing skills, such as an effective checklist and an extensive explanation about linking words. All these tips are useful in my exam.&lt;/p>
&lt;p>&lt;a href="http://writingskills.leonardofaria.net">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2015/06/og_img.jpg" alt="Writing for IELTS and TOEFL" width="1200" height="630" class="alignnone size-full wp-image-1546" srcset="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2015/06/og_img.jpg 1200w, https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2015/06/og_img-300x158.jpg 300w, https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2015/06/og_img-1024x538.jpg 1024w" sizes="(max-width: 1200px) 100vw, 1200px" />&lt;/a>&lt;/p>
&lt;p>The app is available on &lt;a href="https://play.google.com/store/apps/details?id=net.leonardofaria.writingskills">Google Play&lt;/a> and &lt;a href="https://itunes.apple.com/us/app/writing-skills-for-ielts-toefl/id1000191077?ls=1&amp;amp;mt=8">Apple Store&lt;/a> and it costs US$0.99.&lt;/p></description></item><item><title>e-Recursos mobile</title><link>https://leonardofaria.github.io/leonardofaria.net/2014/11/04/e-recursos-mobile/</link><pubDate>Tue, 04 Nov 2014 20:50:19 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2014/11/04/e-recursos-mobile/</guid><description>&lt;p>A mais ou menos 1 ano atrás foi publicado a primeira aplicação móvel do Ministério da Previdência Social. Trata-se do e-Recursos, sistema de processo eletrônico de recurso do INSS.&lt;/p>
&lt;div class="flex">
&lt;a href="https://play.google.com/store/apps/details?id=br.gov.previdencia.erecursos">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2014/10/ss-android1.jpg" class="p-2" alt="Android" />&lt;/a> &lt;a href="https://play.google.com/store/apps/details?id=br.gov.previdencia.erecursos">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2014/10/ss-android2.jpg" class="p-2" alt="Android" />&lt;/a>
&lt;/div>
&lt;p>O aplicativo permite a consulta a movimentação do processo bem como o acesso aos documentos que o compõem, desde que o acesso seja realizado pela própria parte interessada. A aplicação está disponível para &lt;a href="https://play.google.com/store/apps/details?id=br.gov.previdencia.erecursos">Android&lt;/a> e &lt;a href="https://itunes.apple.com/br/app/erecursos/id737750100?l=en&amp;amp;mt=8">iOS&lt;/a> e já foram mais de 10 mil downloads.&lt;/p>
&lt;div class="flex">
&lt;a href="https://itunes.apple.com/br/app/erecursos/id737750100?l=en&amp;#038;mt=8">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2014/10/ss-iphone-1.jpg" class="p-2" alt="iOS" />&lt;/a> &lt;a href="https://itunes.apple.com/br/app/erecursos/id737750100?l=en&amp;#038;mt=8">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2014/10/ss-iphone-2.jpg" class="p-2" alt="iOS" />&lt;/a>
&lt;/div></description></item><item><title>Novo micro-projeto: Guia da TV</title><link>https://leonardofaria.github.io/leonardofaria.net/2011/01/25/novo-micro-projeto-guia-da-tv/</link><pubDate>Tue, 25 Jan 2011 18:33:40 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2011/01/25/novo-micro-projeto-guia-da-tv/</guid><description>&lt;p>Aproveitei algumas horas das minhas férias e lancei um novo micro-projeto: &lt;strong>&lt;a href="http://guiadatv.divirta.me">Guia da TV&lt;/a>&lt;/strong>. O &lt;strong>Guia da TV&lt;/strong> permite você saber quais programas estão para começar.&lt;/p>
&lt;center>
&lt;a href="http://guiadatv.divirta.me">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2011/01/guiadatv.jpg" width="500" />&lt;/a>
&lt;/center>
&lt;p>Algumas coisas ainda serão aprimoradas, mas o aplicativo já está em produção. Ele foi feito com Rails 3 e algumas pitadas de jQuery em sua interface. O conteúdo é fornecido pela &lt;a href="http://revistaeletronica.com.br/">Revista Eletrônica&lt;/a>. Se você gosta de ver TV, use-o e o recomende no Facebook ;)&lt;/p></description></item><item><title>Novo micro-projeto: HORÓSCOPO NO MSN</title><link>https://leonardofaria.github.io/leonardofaria.net/2010/10/09/novo-micro-projeto-horoscopo-no-msn/</link><pubDate>Sat, 09 Oct 2010 20:16:04 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2010/10/09/novo-micro-projeto-horoscopo-no-msn/</guid><description>&lt;p>Chegou mais um serviço de utilidade pública feita por mim. Depois do &lt;a href="http://codestacker.com">&lt;strong>codestacker&lt;/strong>&lt;/a>, &lt;a href="http://autosimulado.com.br">&lt;strong>autosimulado&lt;/strong>&lt;/a> e &lt;a href="http://xavecator.leonardofaria.net">&lt;strong>xavecator&lt;/strong>&lt;/a>, por acaso tive contato com algumas coisinhas do protocolo do MSN e desse contato saiu o &lt;a href="http://horoscopo.leonardofaria.net">&lt;strong>Horóscopo por MSN&lt;/strong>&lt;/a>. &lt;a href="http://horoscopo.leonardofaria.net">&lt;strong>Horóscopo por MSN&lt;/strong>&lt;/a> foi uma aplicação escrita em algumas noites e seu nome já diz tudo: você recebe o horóscopo do dia em seu MSN.&lt;/p>
&lt;center>
&lt;a href="http://horoscopo.leonardofaria.net/">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2010/10/horoscopo.jpg" alt="Horóscopo no MSN" title="Horóscopo no MSN" width="500" />&lt;/a>
&lt;/center>
&lt;p>Funciona assim: você adiciona na sua lista de AmIgUxOs o contato &lt;a href="mailto:horoscopo@leonardofaria.net">horoscopo@leonardofaria.net&lt;/a>. Vai no site e escolhe o signo que deseja ser informado. Pronto. Uma vez por dia, o robozinho da aplicação vai entregar no seu MSN o seu horóscopo.&lt;/p>
&lt;p>P.S. eu não acredito em horóscopo.&lt;br>
P.S. 2: aplicação foi feita com Rails 3 e PHP. O PHP é responsável por conversar com o MSN enquanto a parte Rails do aplicativo gerencia todo o resto. Minha vontade é portar a parte PHP para Ruby.&lt;/p></description></item><item><title>Syntax Highlight on Rails</title><link>https://leonardofaria.github.io/leonardofaria.net/2009/12/02/syntax-highlight-on-rails/</link><pubDate>Wed, 02 Dec 2009 20:52:12 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2009/12/02/syntax-highlight-on-rails/</guid><description>&lt;p>Quer fazer um syntax highlight igual ao do codestacker abaixo, &lt;em>a la Textmate&lt;/em>? É fácil:&lt;/p>
&lt;p>Faça o download da biblioteca de expressões regulares &lt;a href="http://www.geocities.jp/kosako3/oniguruma/">Oniguruma&lt;/a>. A versão mais recente é a &lt;a href="http://www.geocities.jp/kosako3/oniguruma/archive/onig-5.9.1.tar.gz">5.9.1&lt;/a>. Compile-a:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">./configure &lt;span style="color:#000;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> make &lt;span style="color:#000;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Após isso instale as gems Oniguruma, Textpow e Ultraviolet e instale o plugin &lt;a href="http://github.com/arya/tm_syntax_highlighting">tm_syntax_highlighting&lt;/a> em seu projeto.&lt;/p>
&lt;p>Em suas views, utilize:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">code(some_ruby_code, &lt;span style="color:#990073">:theme&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#d14">&amp;#34;twilight&amp;#34;&lt;/span>, &lt;span style="color:#990073">:lang&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#d14">&amp;#34;ruby&amp;#34;&lt;/span>, &lt;span style="color:#990073">:line_numbers&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">true&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Integração contínua no autosimulado</title><link>https://leonardofaria.github.io/leonardofaria.net/2009/04/03/integracao-continua-no-autosimulado/</link><pubDate>Fri, 03 Apr 2009 20:31:38 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2009/04/03/integracao-continua-no-autosimulado/</guid><description>&lt;p>Assim como no &lt;a href="http://www.codestacker.com">&lt;strong>codestacker&lt;/strong>&lt;/a>, não lancei o &lt;a href="http://www.autosimulado.com.br">&lt;strong>autosimulado&lt;/strong>&lt;/a> com todos os features prontos. Naturalmente, lançar um projeto sem estar com 100% dos recursos completos pode ser um risco, mas é uma gostosa corrida contra o tempo – e mais uma chance para avaliar se essa ou aquela funcionalidade é realmente útil para o aplicativo. Como disse Steve Jobs em uma apresentação sobre a iTunes Music Store, “Inovação não é dizer sim para tudo. É dizer NÃO para tudo exceto as funcionalidades mais cruciais”.&lt;/p>
&lt;p>Hoje eu estou postando para falar de uma nova funcionalidade do &lt;a href="http://www.autosimulado.com.br">&lt;strong>autosimulado&lt;/strong>&lt;/a>. Agora, o seu desempenho é salvo e você pode acompanhar o resultado dos testes em uma página exclusiva e com gráficos. Para ilustrar:&lt;/p>
&lt;center>
&lt;a href-"http://www.autosimulado.com.br">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2009/04/autosimulado1.jpg" alt="autosimulado" title="autosimulado" />&lt;/a>
&lt;/center></description></item><item><title>Nasceu: autosimulado</title><link>https://leonardofaria.github.io/leonardofaria.net/2009/03/14/nasceu-autosimulado/</link><pubDate>Sat, 14 Mar 2009 20:41:36 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2009/03/14/nasceu-autosimulado/</guid><description>&lt;p>&lt;a href="http://www.autosimulado.com.br">&lt;strong>autosimulado&lt;/strong>&lt;/a> é um aplicativo web com simulados de provas de legislação, aquelas que você faz quando vai tirar sua carteira de motorista. A inspiração para o &lt;a href="http://www.autosimulado.com.br">&lt;strong>autosimulado&lt;/strong>&lt;/a> apareceu quando minha namorada foi tirar carteira, e ao tentar ajudá-la procurando provas, só encontrei coisas chatas, feias e sem usabilidade. Provas do Detran metem medo em muita gente – eu mesmo só passei da segunda tentativa – e ser simples, rápido, inteligente e grátis é o objetivo do site, que nasceu sobre a concepção do &lt;a href="https://gettingreal.37signals.com/GR_por.php">Getting Real&lt;/a> e da integração contínua.&lt;/p>
&lt;center>
&lt;a href="http://www.autosimulado.com.br">&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2009/03/autosimulado.jpg" alt="autosimulado" title="autosimulado" width="450" />&lt;/a>
&lt;/center></description></item><item><title>Integração contínua no codestacker</title><link>https://leonardofaria.github.io/leonardofaria.net/2008/10/23/integracao-continua-no-codestacker/</link><pubDate>Thu, 23 Oct 2008 00:17:40 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2008/10/23/integracao-continua-no-codestacker/</guid><description>&lt;p>&lt;a href="https://leonardofaria.net/2008/07/02/nasceu-codestackercom/">Meses atrás&lt;/a> lancei o &lt;a href="http://www.codestacker.com">codestacker&lt;/a>. Para seu desenvolvimento segui a conhecida metodologia &lt;a href="https://gettingreal.37signals.com/GR_por.php">Getting Real&lt;/a> e lancei o serviço sem os principais features. Pouco a pouco estou acrescentando recursos ao site.&lt;/p>
&lt;p>Internet é isso. Caia na real e tenha integração contínua em seu serviço.&lt;/p>
&lt;center>
&lt;a href='http://www.codestacker.com'>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2008/11/codestacker.jpg" alt="" title="codestacker" />&lt;/a>
&lt;/center>
&lt;p>&lt;strong>[update 22/11/08]&lt;/strong> corrigido bugs no ie.&lt;br>
&lt;strong>[update 16/11/08]&lt;/strong> implementado busca e agora o código pode ser &amp;lsquo;embedado&amp;rsquo;. Exemplo:&lt;/p>
&lt;p>&lt;strong>[update 02/11/08]&lt;/strong> corrigido alguns bugs (valeu os toques, &lt;a href="http://dito.com.br/">André&lt;/a>!) e refatorado muito código.&lt;br>
&lt;strong>[update 23/10/08]&lt;/strong> implementado textile.&lt;/p></description></item><item><title>Nasceu: codestacker.com</title><link>https://leonardofaria.github.io/leonardofaria.net/2008/07/02/nasceu-codestackercom/</link><pubDate>Wed, 02 Jul 2008 00:05:33 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2008/07/02/nasceu-codestackercom/</guid><description>&lt;center>
&lt;a href='http://www.codestacker.com'>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2008/07/codestacker.jpg" alt="" title="codestacker" />&lt;/a>
&lt;/center>
&lt;p>Nasceu meu projeto Rails de 2 fins-de-semana: &lt;a href="http://www.codestacker.com">codestacker&lt;/a> (é em minúsculas, tá?) é um site para compartilhamento de código, anônimo ou não, público ou privado. Existem vários sites semelhantes ao &lt;a href="http://www.codestacker.com">codestacker&lt;/a>, entretanto, quis fazer minha solução cobrindo minha abordagem para o problema e como posso solucioná-lo.&lt;/p>
&lt;p>Tenho vários features que ainda não implementei, &lt;a href="http://gettingreal.37signals.com/GR_por.php">caí na real&lt;/a> e lancei o básico do serviço. Existirão outros fins-de-semana para atualizações.&lt;/p>
&lt;p>Então é isso, vejo todo mundo &lt;a href="http://www.codestacker.com">lá&lt;/a>.&lt;/p></description></item><item><title>Novo trabalho interativo: is®</title><link>https://leonardofaria.github.io/leonardofaria.net/2008/05/26/novo-trabalho-interativo-is/</link><pubDate>Mon, 26 May 2008 20:59:26 -0300</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2008/05/26/novo-trabalho-interativo-is/</guid><description>&lt;p>Nos últimos meses, estive desenvolvendo o hotsite da coleção de inverno da grife mineira &lt;a href="http://www.is.ind.br">is®&lt;/a>. Já é o meu terceiro trabalho com o designer Pedro Frot.a e enfim, é uma grife fantástica, cool, contemporânea e que traz o encontro das artes com a moda.&lt;/p>
&lt;p>P.S.: Durante a navegação, curta o som de artistas do mundo todo que se identificam com o espírito da marca.&lt;/p>
&lt;center>
&lt;a href='http://www.is.ind.br'>&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2008/05/itisatshirtlife.jpg" alt="" title="it is® a t-shirt life" width="400" height="287" />&lt;/a>
&lt;/center></description></item><item><title>Site da is® lançado!</title><link>https://leonardofaria.github.io/leonardofaria.net/2007/01/01/site-da-is-lancado/</link><pubDate>Mon, 01 Jan 2007 22:59:25 -0200</pubDate><guid>https://leonardofaria.github.io/leonardofaria.net/2007/01/01/site-da-is-lancado/</guid><description>&lt;center>
&lt;img src="https://leonardofaria.github.io/leonardofaria.net/wp-content/uploads/2007/01/462.jpg" alt="is®" />
&lt;/center>
&lt;p>Após noites de trabalho duro finalmente vai ao ar o site da coleção &lt;a href="http://www.is.ind.br">Wind is® calling&lt;/a> da marca mineira is®. É o segundo site que faço da marca (o outro site foi o da coleção &lt;a href="http://winter06.is.ind.br">It is® a hard cool life&lt;/a>) com projeto gráfico de Pedro Frot.a.&lt;/p>
&lt;p>Uma das coisas bacanas da marca é o Gallery, um projeto que reúne ilustradores do mundo todo. Com &lt;a href="http://www.binhobarreto.net">ilustrações&lt;/a> &lt;a href="http://www.abiuro.com/">de&lt;/a> &lt;a href="http://erone.grphk.free.fr/">diversos&lt;/a> &lt;a href="http://www.santoforte.com.br/">tipos&lt;/a>, a is® consegue um público contemporâneo, que curte horas a fio uma rave mas que não esquece de uma boa conversa de bar entre amigos.&lt;/p>
&lt;p>A trilha sonora do site é marcada com &lt;a href="http://www.joesibol.com/" title="Joe Sibol">diversos&lt;/a> &lt;a href="http://www.deadsmilingpirates.com/" title="Dead Smiling Pirates">artistas&lt;/a> &lt;a href="http://www.podsafeaudio.com/jamroom/bands/7/" title="Uma Floresta">independentes&lt;/a>, de &lt;a href="http://www.myspace.com/thefireapes" title="The Fire Apes">variados&lt;/a> &lt;a href="http://myspace.com/columbines" title="The Columbines">estilos&lt;/a>.&lt;/p>
&lt;p>Definitivamente é um dos meus trabalhos mais prazerosos. Vale a visita.&lt;/p></description></item></channel></rss>