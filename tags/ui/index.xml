<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ui on Leonardo Faria</title><link>https://leonardofaria.net/tags/ui/</link><description>Recent content in ui on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 11 Aug 2007 03:41:55 -0300</lastBuildDate><atom:link href="https://leonardofaria.net/tags/ui/index.xml" rel="self" type="application/rss+xml"/><item><title>Endless Pageless</title><link>https://leonardofaria.net/2007/08/11/endless-pageless/</link><pubDate>Sat, 11 Aug 2007 03:41:55 -0300</pubDate><guid>https://leonardofaria.net/2007/08/11/endless-pageless/</guid><description>Ano passado me deparei com o searchmash (leia-se Google).
Um sistema de busca e… sem paginação! Quando chega no fim da página os próximos registros aparecem magicamente (retificando, via Ajax).
Após tomar uma Heineken, me deparo com a mesma abordagem, com seu exemplo em um uso ‘comercial&amp;rsquo;. No site do experimento tem a aplicação em Ruby on Rails pra download, com o snippet responsável por botar os próximos resultados nos trilhos.</description></item><item><title>Novas janelas em Javascript não-obstrusivo</title><link>https://leonardofaria.net/2007/06/23/novas-janelas-em-javascript-nao-obstrusivo/</link><pubDate>Sat, 23 Jun 2007 00:49:44 -0300</pubDate><guid>https://leonardofaria.net/2007/06/23/novas-janelas-em-javascript-nao-obstrusivo/</guid><description>A newsletter dessa semana do SitePoint mostrou uma forma bem interessante de abrir novas janelas com javascript não-obstrusivo e validando XHTML Strict (para quem não sabe, o atributo ‘target&amp;rsquo; da tag ‘a&amp;rsquo; não passa na validação).
&amp;lt;a href=&amp;#34;http://example.com/&amp;#34; onclick=&amp;#34; if (confirm(&amp;#39;Open this link in a new window?&amp;#39;)) { open(&amp;#39;http://example.com/&amp;#39;); return false; } &amp;#34;&amp;gt;external link&amp;lt;/a&amp;gt; Basicamente, emprega-se o uso de uma caixa de diálogo. Bem simples. Uma alternativa mais sofisticada é criar uma função e ativá-la através do uso de uma classe.</description></item><item><title>Fixando o botão voltar em projetos em Flash</title><link>https://leonardofaria.net/2006/10/28/fixando-o-botao-voltar-em-projetos-em-flash/</link><pubDate>Sat, 28 Oct 2006 20:55:55 -0300</pubDate><guid>https://leonardofaria.net/2006/10/28/fixando-o-botao-voltar-em-projetos-em-flash/</guid><description>Um problema dos hotsites em Flash é a falta da implementação do botão Voltar do navegador. Achar um conteúdo garante uma boa garimpada. O SWFAddress garante, com a ajuda de Javascript, a solução desse problema. No site existe inclusive um demo do projeto, bem interessante.</description></item><item><title>Ajax a seu favor. E não contra</title><link>https://leonardofaria.net/2006/10/28/ajax-a-seu-favor-e-nao-contra/</link><pubDate>Sat, 28 Oct 2006 20:36:26 -0300</pubDate><guid>https://leonardofaria.net/2006/10/28/ajax-a-seu-favor-e-nao-contra/</guid><description>Usar Ajax desenfreamente por aí pode causar dependência química. O Ajaxonline é um portal sobre o assunto e apresenta uma séria falha, que muitos sites que também usam XMLHttpRequest também apresentam: links obstrusivos.
A ‘agilidade&amp;rsquo; do uso do Ajax está em re-aproveitar camadas e iframes para substituição de conteúdo, requisitando URLs e enviando formulários, enfim, interagindo com o usuário. O problema está na hora de chamar essas requisições. Ao chamar uma dessa funções pelo atributo href da tag a do HTML (ou simplesmente setando o valor desse atributo para ‘#'), o desenvolvedor esquece que os usuários possuem diferentes formas de interação com o sites.</description></item></channel></rss>