<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ruby on Leonardo Faria</title><link>https://leonardofaria.net/tags/ruby/</link><description>Recent content in ruby on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 10 Sep 2014 23:14:28 -0300</lastBuildDate><atom:link href="https://leonardofaria.net/tags/ruby/index.xml" rel="self" type="application/rss+xml"/><item><title>Curiosidade Ruby do dia #3: Strings</title><link>https://leonardofaria.net/2014/09/10/curiosidade-ruby-do-dia-strings/</link><pubDate>Wed, 10 Sep 2014 23:14:28 -0300</pubDate><guid>https://leonardofaria.net/2014/09/10/curiosidade-ruby-do-dia-strings/</guid><description>Strings são, em qualquer linguagem, cadeias de caracteres. Em Ruby, você pode acessar o conteúdo de uma string de forma semelhante a um array, exemplo:
message = &amp;#34;Hello World&amp;#34; puts message[0,5] # Hello É possível substituir uma palavra de dentro de uma string como se ela fosse um elemento de um array, veja:
message = &amp;#34;I like cats&amp;#34; puts message # I like cats message[&amp;#34;cats&amp;#34;] = &amp;#34;dogs&amp;#34; puts message # I like dogs Uma exceção será disparada caso você tente substituir algo que não existe na string:</description></item><item><title>Curiosidade Ruby do dia #2</title><link>https://leonardofaria.net/2009/07/01/curiosidade-ruby-do-dia-2/</link><pubDate>Wed, 01 Jul 2009 21:03:22 -0300</pubDate><guid>https://leonardofaria.net/2009/07/01/curiosidade-ruby-do-dia-2/</guid><description>Em outra curiosidade Ruby do dia, eu falei do elsif. Hoje eu lembro do método succ, da classe String. Veja os exemplo:
&amp;gt;&amp;gt; &amp;#34;abb&amp;#34;.succ =&amp;gt; &amp;#34;abc&amp;#34; &amp;gt;&amp;gt; &amp;#34;1&amp;#34;.succ =&amp;gt; &amp;#34;2&amp;#34; &amp;gt;&amp;gt; &amp;#34;1999zzz&amp;#34;.succ =&amp;gt; &amp;#34;2000aaa&amp;#34; &amp;gt;&amp;gt; Não é simplesmente incrível?
P.S.: o método chama-se succ e não suck. Trocadilhos desse tipo serão desconsiderados.</description></item><item><title>Documentação do Rails e Ruby no Spotlight</title><link>https://leonardofaria.net/2009/02/08/documentacao-do-rails-e-ruby-no-spotlight/</link><pubDate>Sun, 08 Feb 2009 23:12:35 -0200</pubDate><guid>https://leonardofaria.net/2009/02/08/documentacao-do-rails-e-ruby-no-spotlight/</guid><description>Essa é uma dica bem interessante: um cara chamado Priit Haamer migrou as documentações do Rails e do Ruby para o dicionário do Mac OS. Como o Spotlight do sistema busca – além de arquivos, emails, músicas e o que for – as entradas do dicionário, você ganha mais uma forma rápida de acesso a documentação de sua linguagem favorita.</description></item><item><title>Curiosidade Ruby do dia</title><link>https://leonardofaria.net/2007/06/28/curiosidade-ruby-do-dia/</link><pubDate>Thu, 28 Jun 2007 18:27:44 -0300</pubDate><guid>https://leonardofaria.net/2007/06/28/curiosidade-ruby-do-dia/</guid><description>Não existe ‘else if&amp;rsquo; em Ruby e sim ‘elsif&amp;rsquo; – sem o ‘e&amp;rsquo; mesmo! Isso costuma pegar alguns desatentos. Veja o exemplo:
if numero == 2 print &amp;#34;Número é 2&amp;#34; elsif numero == 3 print &amp;#34;Número é 3&amp;#34; else print &amp;#34;Número não é nem 2 nem 3&amp;#34; end Existem outras características interessantes na linguagem.</description></item></channel></rss>