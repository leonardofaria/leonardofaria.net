<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2012s on Leonardo Faria</title><link>https://leonardofaria.net/2012/</link><description>Recent content in 2012s on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 31 Dec 2012 11:30:47 -0200</lastBuildDate><atom:link href="https://leonardofaria.net/2012/index.xml" rel="self" type="application/rss+xml"/><item><title>Configurando o Sublime Text 2</title><link>https://leonardofaria.net/2012/12/31/configurando-o-sublime-text-2/</link><pubDate>Mon, 31 Dec 2012 11:30:47 -0200</pubDate><guid>https://leonardofaria.net/2012/12/31/configurando-o-sublime-text-2/</guid><description>Tempos atrás tinha instalado o Sublime, mas não o usei efetivamente. O Nando Vieira fez um ótimo post detalhado sobre o editor, e após isso, resolvi dar uma olhada mais a fundo. O Sublime é altamente configurável e abaixo cito algumas modificações que fiz.
Plugins O Sublime possui um gerenciador de plugins que extendem as funcionalidades do editor. O post que citei do Nando mostra como instalá-los. Esses são os plugins que andei testando:</description></item><item><title>Raspberry Pi</title><link>https://leonardofaria.net/2012/12/30/raspberry-pi/</link><pubDate>Sun, 30 Dec 2012 17:10:41 -0200</pubDate><guid>https://leonardofaria.net/2012/12/30/raspberry-pi/</guid><description>A alguns dias atrás comprei um Raspberry Pi. Ele é um computador do tamanho de um cartão de crédito, possui um processador de 700 MHz, 512 MB de Ram e você pode usar um cartão de memória como disco de boot. Para alimentação, um carregador de celular basta. Estou usando um teclado de um iMac capacete e um adaptador wifi xing ling para acessar a rede sem fio de casa.</description></item><item><title>Para agilizar o desenvolvimento do frontend</title><link>https://leonardofaria.net/2012/11/21/para-agilizar-o-desenvolvimento-do-frontend/</link><pubDate>Wed, 21 Nov 2012 22:45:14 -0200</pubDate><guid>https://leonardofaria.net/2012/11/21/para-agilizar-o-desenvolvimento-do-frontend/</guid><description>Uso o Chrome como browser padrão em minha máquina e algumas extensões interessantes para desenvolvedores.
Kingsquare HTML Validator: faz validação do seu código usando o Tidy. Se você usa o Safari, não deixe de conhecer o Tidy Validator Secure Shell: um terminal em seu browser – atualmente prefiro o iTerm ligado em um monitor extra e com várias telas divididas. PageSpeed Insights: uma espécie de YSlow do Google. Descobri em um vídeo (slides) do Ilka Grigorik.</description></item><item><title>mytop, para monitorar seu MySQL</title><link>https://leonardofaria.net/2012/10/04/mytop-para-monitorar-seu-mysql/</link><pubDate>Thu, 04 Oct 2012 00:27:33 -0300</pubDate><guid>https://leonardofaria.net/2012/10/04/mytop-para-monitorar-seu-mysql/</guid><description>O mytop é um clone do comando top para o MySQL. Ele é usado para monitorar a performance do seu banco, sem precisar de softwares caros, complexos ou pesados. Ele é escrito em Perl e abaixo está um mini-roteiro de como instalá-lo – no meu caso, Mac OS Mountain Lion.
Antes de compilar o mytop é necessário instalar o pré-requisito DBD-Mysql. No terminal, digite:
perl -MCPAN -e 'shell' Em seguida, execute:</description></item><item><title>Atualizando o MacBook Pro</title><link>https://leonardofaria.net/2012/05/29/atualizando-o-macbook-pro/</link><pubDate>Tue, 29 May 2012 15:56:24 -0300</pubDate><guid>https://leonardofaria.net/2012/05/29/atualizando-o-macbook-pro/</guid><description>Estive um mês de férias na Califórnia, com direito a visitas a Cupertino na Apple e a Stanford. Aproveitando minha vinda aos Estados Unidos, resolvi fazer um upgrade na minha máquina, trocando memória RAM, substituindo o HD original por um drive SSD e também trocando o SuperDrive pelo HD original. Esse não é um upgrade inédito, o Fábio Akita já fez e o Rafael Gimenez também.
Porque fazer Porque não tinha grana para comprar um MacBook Air; Porque ainda que tivesse grana para um MacBook Air, não poder fazer trocar memória era algo que me incomodava; Porque abrir Macs é divertido.</description></item><item><title>Geração de PDFs indolor no PHP</title><link>https://leonardofaria.net/2012/02/12/geracao-de-pdfs-indolor-no-php/</link><pubDate>Sun, 12 Feb 2012 15:04:44 -0200</pubDate><guid>https://leonardofaria.net/2012/02/12/geracao-de-pdfs-indolor-no-php/</guid><description>Tempos atrás escrevi um artigo sobre como gerar PDF dentro do Rails usando a gem wicked_pdf e o wkhtmltopdf. Como escrevi no post anterior, o wkhtmltopdf usa Webkit, a engine de renderização do Safari / Chrome para gerar a visualização do documento. Isso o torna superior se comparado com bibliotecas do PHP como o FPDF, pois, geralmente, essa bibliotecas possuem dificuldades para reproduzir efeitos de CSS.
Em um novo projeto, estou usando novamente o wkhtmltopdf, mas agora dentro do PHP.</description></item></channel></rss>