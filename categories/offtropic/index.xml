<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>offtropic on Leonardo Faria</title><link>https://leonardofaria.net/categories/offtropic/</link><description>Recent content in offtropic on Leonardo Faria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Jan 2020 11:41:56 -0300</lastBuildDate><atom:link href="https://leonardofaria.net/categories/offtropic/index.xml" rel="self" type="application/rss+xml"/><item><title>Terminal tips tweets</title><link>https://leonardofaria.net/2020/01/20/terminal-tips-tweets/</link><pubDate>Mon, 20 Jan 2020 11:41:56 -0300</pubDate><guid>https://leonardofaria.net/2020/01/20/terminal-tips-tweets/</guid><description>&lt;p>A while ago I started a &lt;a href="https://twitter.com/leozera/status/1090639374109138946">thread on Twitter&lt;/a> with a few terminal tips. There are lots of CLIs in NPM and they can be very handy in our daily work. Here they are and if you like them, &lt;a href="https://twitter.com/leozera">follow me&lt;/a> :)&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">1. list-scripts and npm-list-scripts give you a list of available npm script including what each script does. Useful for documentation:&lt;br>&lt;br>💻 npm i -g list-scripts npm-list-scripts&lt;br>🌎 &lt;a href="https://t.co/QvvFEpEMeQ">https://t.co/QvvFEpEMeQ&lt;/a> &lt;a href="https://t.co/6MFQXbHPLW">https://t.co/6MFQXbHPLW&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/84dwGqVviX">pic.twitter.com/84dwGqVviX&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639457118609408?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">2. ncu checks the packages in your package.json file and gives you major and minor package updates info&lt;br>&lt;br>💻 npm i -g npm-check-updates&lt;br>🌎 &lt;a href="https://t.co/H9NIGetGKy">https://t.co/H9NIGetGKy&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/EPmx3YKJwE">pic.twitter.com/EPmx3YKJwE&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639526840549382?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">3. npm-scripts-tree is helpful when you have scripts calling other scripts and you are lost trying to understand the dependencies between them. Really handy for documentation:&lt;br>&lt;br>💻 npm i -g npm-scripts-tree&lt;br>🌎 &lt;a href="https://t.co/4NVKocfDuY">https://t.co/4NVKocfDuY&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/7NWn2FBPBK">pic.twitter.com/7NWn2FBPBK&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639627822628865?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">4. space-hogs shows large directories - imagine a better du:&lt;br>&lt;br>💻 npm i -g space-hogs&lt;br>🌎 &lt;a href="https://t.co/xPlGzYjLJk">https://t.co/xPlGzYjLJk&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/HKZQP9NMgq">pic.twitter.com/HKZQP9NMgq&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639691135610881?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">5. see is an improved cat (aka syntax highlight)&lt;br>&lt;br>💻 npm i -g see-cli&lt;br>🌎 &lt;a href="https://t.co/bEAjBJjhGt">https://t.co/bEAjBJjhGt&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/o6rx8MZbel">pic.twitter.com/o6rx8MZbel&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639798354665472?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">6. colorls is a ruby script that changes the ls output with color and icons&lt;br>&lt;br>💻 gem install colorls&lt;br>🌎 &lt;a href="https://t.co/9F3n6v3FnA">https://t.co/9F3n6v3FnA&lt;/a>&lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/ruby?src=hash&amp;amp;ref_src=twsrc%5Etfw">#ruby&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/NF675JfdPx">pic.twitter.com/NF675JfdPx&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090639885931753475?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">7. You can use repeat in zsh and the speed-test cli from &lt;a href="https://twitter.com/sindresorhus?ref_src=twsrc%5Etfw">@sindresorhus&lt;/a> to keep monitoring your internet speed&lt;br>&lt;br>💻 repeat 10000 { date +&amp;quot;%T&amp;quot;; speed-test; sleep 1 }&lt;br>🌎 &lt;a href="https://t.co/BP4Rj4qI5r">https://t.co/BP4Rj4qI5r&lt;/a> &lt;a href="https://t.co/22j1YV6Kf1">pic.twitter.com/22j1YV6Kf1&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1090640016970117120?ref_src=twsrc%5Etfw">January 30, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">8. You can configure git to push to the current branch:&lt;br>&lt;br>git config --global push.default current&lt;br>&lt;br>So instead of:&lt;br>git push origin your-feature-branch&lt;br>You can just do:&lt;br>git push &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/git?src=hash&amp;amp;ref_src=twsrc%5Etfw">#git&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1093949292040019968?ref_src=twsrc%5Etfw">February 8, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">9. Writing a PR? Maybe you want a list of your commits: &lt;br>&lt;br>git log origin/master..HEAD --no-merges --pretty=format:&amp;#39;- %s&amp;#39; --reverse&lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/git?src=hash&amp;amp;ref_src=twsrc%5Etfw">#git&lt;/a> &lt;a href="https://twitter.com/github?ref_src=twsrc%5Etfw">@github&lt;/a> &lt;a href="https://t.co/od8e8LPpPa">pic.twitter.com/od8e8LPpPa&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1180601156889804801?ref_src=twsrc%5Etfw">October 5, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">10. Running out of space? Maybe too many node_modules folders:&lt;br>&lt;br>💻 npx npkill&lt;br>🌎 &lt;a href="https://t.co/zyj9s6eCj9">https://t.co/zyj9s6eCj9&lt;/a>&lt;br>&lt;br>Saved 10GB+ here ~ &lt;a href="https://twitter.com/hashtag/terminal?src=hash&amp;amp;ref_src=twsrc%5Etfw">#terminal&lt;/a> &lt;a href="https://twitter.com/hashtag/npm?src=hash&amp;amp;ref_src=twsrc%5Etfw">#npm&lt;/a> &lt;a href="https://twitter.com/hashtag/cli?src=hash&amp;amp;ref_src=twsrc%5Etfw">#cli&lt;/a> &lt;a href="https://twitter.com/hashtag/protip?src=hash&amp;amp;ref_src=twsrc%5Etfw">#protip&lt;/a> &lt;a href="https://t.co/y31i7gS9af">pic.twitter.com/y31i7gS9af&lt;/a>&lt;/p>&amp;mdash; Leonardo Faria (@leozera) &lt;a href="https://twitter.com/leozera/status/1215393238720188416?ref_src=twsrc%5Etfw">January 9, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>Exploring device detection for better user experiences in 2020</title><link>https://leonardofaria.net/2020/01/15/exploring-device-detection-for-better-user-experiences-in-2020/</link><pubDate>Wed, 15 Jan 2020 02:16:54 -0300</pubDate><guid>https://leonardofaria.net/2020/01/15/exploring-device-detection-for-better-user-experiences-in-2020/</guid><description>&lt;p>A few months ago I watched a great talk in Chrome Dev Summit about performance in slow devices.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/puUPpVrIRkc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>It blew my mind all the work done by Facebook in identifying devices to create a better user experience. Fast-forward to now, I decided to study a bit more the topic and see what I could do at Thinkific.&lt;/p>
&lt;h2 id="user-agents">User agents&lt;/h2>
&lt;p>User agents are well-known by developers. We use them to detect bots, redirect users to a specific version of our website or append CSS classes on our page so we can create different experiences.&lt;/p>
&lt;p>At Thinkific we already use the &lt;a href="https://github.com/fnando/browser">browser Ruby gem&lt;/a> to parse the user-agent and get relevant info (bot detection for instance). So, I decided to persist the main info in a visitor_device table – here is the schema:&lt;/p>
&lt;pre>&lt;code>tenant_id: the course creator school the visitor is checking
raw: the raw ua
type: desktop / mobile / tablet / bot / other
browser_name
browser_version
platform_name
platform_version
hardware: hstore containing memory, processor, device_model, device_name
connection: hstore containing downlink_max, connection_type
&lt;/code>&lt;/pre>&lt;p>You probably noticed that a few things there are not available in the UA string. Time for new JavaScript APIs:&lt;/p>
&lt;h2 id="getting-hardware-info-using-javascript">Getting hardware info using JavaScript&lt;/h2>
&lt;p>As covered in the Chrome Dev Summit video, we can use JS to get this info&lt;/p>
&lt;h3 id="memory">Memory&lt;/h3>
&lt;p>&lt;code>navigator.deviceMemory&lt;/code> will return a floating-point number. There are things to consider here:&lt;/p>
&lt;ul>
&lt;li>It only works over HTTPS&lt;/li>
&lt;li>Support is quite limited (Chrome only basically)&lt;/li>
&lt;/ul>
&lt;p>More about it:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/w3c/device-memory">Spec from W3C&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/deviceMemory">MDN Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://caniuse.com/#feat=mdn-api_navigator_devicememory">Can I use deviceMemory&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="processors">Processors&lt;/h3>
&lt;p>&lt;code>navigator.hardwareConcurrency&lt;/code> will return the number of logical cores of the user&amp;rsquo;s CPU. Support for this is &lt;a href="https://caniuse.com/#feat=hardwareconcurrency">decent&lt;/a>.&lt;/p>
&lt;h2 id="detecting-connection-info-using-javascript">Detecting connection info using JavaScript&lt;/h2>
&lt;p>&lt;code>navigator.connection&lt;/code> is a new API containing information about the system&amp;rsquo;s connection, such as the current bandwidth of the user&amp;rsquo;s device or whether the connection is metered. The support is quite limited (Chrome only basically) but things are promising.&lt;/p>
&lt;p>More about it:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://googlechrome.github.io/samples/network-information/">Chrome example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/connection">MDN Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://caniuse.com/#feat=netinfo">Can I use Network Information API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="detecting-the-device-model">Detecting the device model&lt;/h2>
&lt;p>The user agent &lt;em>may&lt;/em> return some information about the model name. &lt;a href="https://userstack.com/">userstack&lt;/a> is a service that gives you information based on the user agent. It works well and it is easy to integrate, however, depending on your need, they can&amp;rsquo;t help.&lt;/p>
&lt;p>Take for instance iDevices. Their user agent is basically the same so you can&amp;rsquo;t differentiate an iPad Pro from an old iPad that runs the last iOS. For these cases, you may need a better detection based on resolution, pixel density and other hardware information exposed in the browser. I did a quick research on this and found 3 products so far: &lt;a href="https://web.wurfl.io/#wurfl-js">WURFL.io&lt;/a>, &lt;a href="https://deviceatlas.com/products/web">DeviceAtlas&lt;/a> and &lt;a href="https://51degrees.com/">51Degrees&lt;/a>. I didn&amp;rsquo;t have time to try their products yet, but I am looking forward to doing it (and post about it)&lt;/p>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;p>&lt;em>Question: Why not using Google Analytics / Mixpanel / Kibana / New Relic / your tool here?&lt;/em>&lt;/p>
&lt;p>We could get browser info inside other tools however as a SaaS product we don&amp;rsquo;t use our own Google Analytics property (customers add their own). Also, adblockers may block these third-party tools. Last not least, by having this info in our side we can adapter better.&lt;/p>
&lt;p>&lt;em>Question: Do you have a list of low-end/high-end devices?&lt;/em>&lt;/p>
&lt;p>No. Maybe this can be built combining the number of processors and memory but I didn&amp;rsquo;t invest much time on this. In this project, my colleague created a Rails helper that would determinate if the user would use the lite or default version of a website based on hardware. On this topic, it is important to mention Facebook has a library for Android called &lt;a href="https://github.com/facebook/device-year-class/">Device Year Class&lt;/a>.&lt;/p></description></item><item><title>A simple Sinatra Auth</title><link>https://leonardofaria.net/2019/11/04/a-simple-sinatra-auth/</link><pubDate>Mon, 04 Nov 2019 01:40:07 -0300</pubDate><guid>https://leonardofaria.net/2019/11/04/a-simple-sinatra-auth/</guid><description>&lt;p>Imagine you want to protect the content of a website created with Next.js, Hugo or your favourite static site generator. Github doesn&amp;rsquo;t offer this feature or Netlify offers authentication only in their paid plans. &lt;a href="https://bit.ly/sinatra-auth">Decided to create something simple with Sinatra, TailwindCSS and ready to go in Heroku&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://bit.ly/sinatra-auth">&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/11/sinatra-auth.jpg" alt="Sinatra Auth screenshot">&lt;/a>&lt;/figure>&lt;/p></description></item><item><title>Creating a website for my Apple Collection</title><link>https://leonardofaria.net/2019/10/17/creating-a-website-for-my-apple-collection/</link><pubDate>Thu, 17 Oct 2019 00:36:30 -0300</pubDate><guid>https://leonardofaria.net/2019/10/17/creating-a-website-for-my-apple-collection/</guid><description>&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/10/collection.jpg" alt="Part of the collection">&lt;/p>
&lt;p>A while ago I started an Apple Collection. After a few laptops and a few iDevices, I decided that I should start collecting info about my iThings. In the beginning, I created a gist containing model, serial number, how did I get the device, minimum/maximum OS, etc.&lt;/p>
&lt;p>The list kept going bigger and bigger and the content started looking messy. The natural way to organize my data would be inside a SQL database, with the information distributed in columns. After organizing the information in tables, I would create a graphQL API (the one cool kids use these days) to give me the data needed to populate my UI – probably written in React, compiled with Babel and packed with webpack.&lt;/p>
&lt;p>Reading the previous paragraph aloud, you can hear many technologies and I even ignored the backend language and UI details like SASS or styled-components. It sounds a bit overwhelming when the ultimate goal is showing a list of items in a nice design.&lt;/p>
&lt;p>That&amp;rsquo;s being said, I thought: how can I deliver this content without:&lt;/p>
&lt;ul>
&lt;li>An API or any backend work&lt;/li>
&lt;li>Any JS framework/library&lt;/li>
&lt;li>Any JS tooling (webpack, babel, etc)&lt;/li>
&lt;li>Any CSS work&lt;/li>
&lt;/ul>
&lt;p>On top of these constraints, I had a few stretch goals:&lt;/p>
&lt;ul>
&lt;li>Create a website with good accessibility&lt;/li>
&lt;li>Create a website that works in old browsers, since I have computers running Mac OS 9.2 and iDevices running iOS 3&lt;/li>
&lt;/ul>
&lt;p>Challenge accepted. One index.html, a few vanilla JS files, no custom CSS. TL,DR:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://bit.ly/collection-website">Final website&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bit.ly/collection-source">Source code&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="no-api-or-any-backend-work">No API or any backend work&lt;/h2>
&lt;p>A while ago I saw a SaaS product called &lt;a href="https://steinhq.com/">Stein&lt;/a>. You create your data inside a Google Sheets document and they give you an endpoint with your data. Their library works like handlebars and it looks perfect for my use case:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#000080">div&lt;/span> &lt;span style="color:#008080">data-stein-url&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;https://api.steinhq.com/v1/storages/5cc158079ec99a2f484dcb40/Sheet1&amp;#34;&lt;/span> &lt;span style="color:#008080">data-stein-limit&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;2&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#000080">div&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#000080">h1&lt;/span>&amp;gt;{{title}}&amp;lt;/&lt;span style="color:#000080">h1&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#000080">h6&lt;/span>&amp;gt;By {{author}}&amp;lt;/&lt;span style="color:#000080">h6&lt;/span>&amp;gt;
{{content}}
Read on &amp;lt;&lt;span style="color:#000080">a&lt;/span> &lt;span style="color:#008080">href&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;{{link}}&amp;#34;&lt;/span>&amp;gt;Medium&amp;lt;/&lt;span style="color:#000080">a&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#000080">div&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#000080">div&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="no-js-frameworklibrary-and-tooling">No JS framework/library and tooling&lt;/h2>
&lt;p>Decided to avoid adding a framework or library in this project since the use case didn&amp;rsquo;t need one. All JS interactions on this page are quite simple (show/hide menus, open a modal screen, handle permalinks).&lt;/p>
&lt;p>Since I was not using a framework/library, I would avoid adding webpack and babel. No need to dig into presets and loaders.&lt;/p>
&lt;p>PS. You can argue that I&amp;rsquo;d have chosen create-react-app or Next.js and get all these problems solved, but no.&lt;/p>
&lt;h2 id="no-css-work">No CSS work&lt;/h2>
&lt;p>I love writing CSS, especially when I can use SASS but I decided to do not write CSS here. I had a few good reasons to avoid doing it:&lt;/p>
&lt;ul>
&lt;li>I had no designs and despite I could do something decent-looking, I didn&amp;rsquo;t want to put time and energy on it;&lt;/li>
&lt;li>I wanted to use &lt;a href="https://tailwindcss.com">Tailwind CSS&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>If you never heard about Tailwind CSS, please don&amp;rsquo;t try to think “it is a Bootstrap option”. Here is a good short explanation, from their website:&lt;/p>
&lt;blockquote class="wp-block-quote">
&lt;p>
Most CSS frameworks do too much.&lt;br />&amp;#8230;&lt;br />Instead of opinionated predesigned components, Tailwind provides low-level utility classes that let you build completely custom designs without ever leaving your HTML.
&lt;/p>
&lt;/blockquote>
&lt;p>This is pretty much true. A quick search gives you many web apps “rebuilt” with Tailwind CSS:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/whatsapp-web-clone">Whatsapp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/telegram-desktop-using-tailwindcss">Telegram&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/facebook-clone">Facebook&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/reddit-clone">Reddit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/youtube-clone">Youtube&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/slack-clone-1">Slack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/coinbase-clone">Coinbase&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/github-profile-clone">Github&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailwindcomponents.com/component/trello-panel-clone">Trello&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codepen.io/drehimself/full/vpeVMx/">Twitter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=_JhTaENzfZQ">Netlify&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="create-a-website-with-good-accessibility">Create a website with good accessibility&lt;/h2>
&lt;p>Last month I started taking accessibility courses at &lt;a href="https://dequeuniversity.com/curriculum/packages/full">Deque University&lt;/a>. Their content is great and it reminders me that &lt;strong>HTML is accessible by default&lt;/strong>. By using a semantic HTML structure and testing basic things like keyboard navigation and colour contrast you eliminate several barries that move people with disabilities from your content. I am not an accessibility expert but here are a few accessibility-related things I&amp;rsquo;ve worked on this website:&lt;/p>
&lt;ul>
&lt;li>Disable stylesheets: by disabling stylesheets you can ensure that your content follows a logical/structural way.&lt;/li>
&lt;li>VoiceOver: VoiceOver is included in macOS and iOS. It is &lt;a href="https://webaim.org/articles/voiceover/">very simple to use it&lt;/a> and by using it you can have a better understanding of how people use this feature.&lt;/li>
&lt;li>Modals: modals can be problematic. Decided to follow &lt;a href="https://bitsofco.de/accessible-modal-dialog/">Ire Aderinokun&amp;rsquo;s&lt;/a> approach.&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd">axe&lt;/a>: the extension is an accessibility checker for WCAG 2 and Section 508 accessibility rules.&lt;/li>
&lt;/ul>
&lt;p>It is not perfect, there are a few things that I didn&amp;rsquo;t work it, like adding a skip link to the main content. If you are curious, &lt;a href="https://github.com/leonardofaria/collection/pull/1">here is the Pull Request with all the changes&lt;/a>.&lt;/p>
&lt;h2 id="create-a-website-that-works-in-old-browsers">Create a website that works in old browsers&lt;/h2>
&lt;p>I couldn&amp;rsquo;t achieve this objective since I had no control over scripts and styles. However, it doesn&amp;rsquo;t seem to be impossible. A few things I noticed:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/SteinHQ/Expedite">Expedite&lt;/a> (Stein client) uses &lt;a href="https://github.com/SteinHQ/Expedite/blob/master/index.js#L51-L54">fetch&lt;/a>, which was only &lt;a href="https://caniuse.com/#feat=fetch">added in Safari 10&lt;/a>. The request to their server could be probably replaced for an XMLHttpRequest.&lt;/li>
&lt;li>Tailwind uses flexbox in many elements. Safari only started supporting Flexbox in iOS 7. Maybe I could write a few properties to their existing elements to achieve a decent look.&lt;/li>
&lt;li>SSL Certificates may be an issue to old browsers.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusions">Conclusions&lt;/h2>
&lt;p>Making this website was super fun. The fact I added “constraints” to it made think outside the box. Out of curiosity, I tracked my time using &lt;a href="https://clockify.me">Clockify&lt;/a> and I&amp;rsquo;ve worked 13h on this, between coding, creating the data, testing and writing this post.&lt;/p></description></item><item><title>Forcing the usage of yarn (and at a specific version)</title><link>https://leonardofaria.net/2019/10/11/forcing-the-usage-of-yarn-and-at-a-specific-version/</link><pubDate>Fri, 11 Oct 2019 00:40:46 -0300</pubDate><guid>https://leonardofaria.net/2019/10/11/forcing-the-usage-of-yarn-and-at-a-specific-version/</guid><description>&lt;p>People and organizations often have preferences for a specific package manager. At work, we decided to use Yarn due to emoji support (jk) but how to keep everybody using Yarn? &lt;/p>
&lt;p>We can use the &lt;a href="https://docs.npmjs.com/misc/scripts">preinstall hook&lt;/a> to check if the user run &lt;code>npm install&lt;/code>or &lt;code>yarn install&lt;/code>. Here is one example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#d14">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> {
&lt;span style="color:#d14">&amp;#34;preinstall&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;node -e \&amp;#34;if(process.env.npm_execpath.indexOf(&amp;#39;yarn&amp;#39;) === -1) throw new Error(&amp;#39;You must use Yarn to install, not NPM&amp;#39;)\&amp;#34;&amp;#34;&lt;/span>,
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you run &lt;code>npm install&lt;/code>:&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/10/npm-install.jpg" alt="" class="wp-image-2084" /> &lt;/figure>&lt;/p>
&lt;p>If you want to ignore the checking (CI environment for instance), use the &lt;code>--ignore-scripts&lt;/code> option: &lt;/p>
&lt;p>&lt;code>npm install --ignore-scripts&lt;/code>&lt;/p>
&lt;p>Moreover, you can use the &lt;a href="https://docs.npmjs.com/files/package.json#engines">engines option&lt;/a> of NPM to force a specific version of Node, and/or Yarn. Here is an example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#d14">&amp;#34;engines&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> {
&lt;span style="color:#d14">&amp;#34;yarn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;&amp;gt;1.19.1&amp;#34;&lt;/span>,
&lt;span style="color:#d14">&amp;#34;node&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#d14">&amp;#34;&amp;gt;12&amp;#34;&lt;/span>
},
&lt;/code>&lt;/pre>&lt;/div>&lt;figure class="wp-block-image">
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/10/npm-engines.jpg" alt="" class="wp-image-2101" /> &lt;/figure>&lt;/p></description></item><item><title>Disabling autofill in Chrome</title><link>https://leonardofaria.net/2019/10/02/disabling-autofill-in-chrome/</link><pubDate>Wed, 02 Oct 2019 16:58:52 -0300</pubDate><guid>https://leonardofaria.net/2019/10/02/disabling-autofill-in-chrome/</guid><description>&lt;p>Autofill in form elements is a very useful feature in browsers. Creating new accounts or shopping in an online store are examples of this feature saving us time.&lt;/p>
&lt;p>However, the autofill feature can be a problem for SaaS products. Imagine that you want to edit the email address of one of your users. You hit edit in one screen and once you get a form with your user data Chrome will replace their email to your email. This is not a good user experience.&lt;/p>
&lt;p>MDN has an article showing “How to turn off form autocompletion”. The solution is using the autocomplete attribute with an off value. This doesn&amp;rsquo;t work in Chrome.&lt;/p>
&lt;p>Digging in Stackoverflow and Google results, I found a &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164">bug issued in 2015 about the topic&lt;/a>. Here is the TL,DR (from March 2016):&lt;/p>
&lt;blockquote>
&lt;p>First off, thanks for everyone&amp;rsquo;s feedback on this. I apologize for our delay in clarifying our stance. We&amp;rsquo;ve been working to finalize our policy regarding Autofill and the autocomplete attribute, and we&amp;rsquo;ve been making changes to this over the past few months (as some of you have noticed).&lt;/p>
&lt;p>First and foremost, Autofill in Chrome exists to help our everyday users get through common forms (address forms, contact forms, checkout forms, etc) across the web. This has become especially important on mobile devices, where typing on virtual keyboards is both difficult and annoying. Autofill tries to make this experience better, and it&amp;rsquo;s used millions of times per day by Chrome users.&lt;/p>
&lt;p>The tricky part here is that somewhere along the journey of the web autocomplete=off become a default for many form fields, without any real thought being given as to whether or not that was good for users. This doesn&amp;rsquo;t mean there aren&amp;rsquo;t very valid cases where you don&amp;rsquo;t want the browser autofilling data (e.g. on CRM systems), but by and large, we see those as the minority cases. And as a result, we started ignoring autocomplete=off for Chrome Autofill data [1].&lt;/p>
&lt;p>We don&amp;rsquo;t just ignore the autocomplete attribute, however. In the WHATWG standard, we defined a series of new autocomplete values that developers can use to better inform the browser about what a particular field is, and we encourage developers to use those types. [2]&lt;/p>
&lt;p>In cases where you really want to disable autofill, our suggestion at this point is to utilize the autocomplete attribute to give valid, semantic meaning to your fields. If we encounter an autocomplete attribute that we don&amp;rsquo;t recognize, we won&amp;rsquo;t try and fill it.&lt;/p>
&lt;p>As an example, if you have an address input field in your CRM tool that you don&amp;rsquo;t want Chrome to Autofill, you can give it semantic meaning that makes sense relative to what you&amp;rsquo;re asking for: e.g. autocomplete=”new-user-street-address”. If Chrome encounters that, it won&amp;rsquo;t try and autofill the field.&lt;/p>
&lt;/blockquote>
&lt;p>I also found a &lt;a href="https://gist.github.com/niksumeiko/360164708c3b326bd1c8">gist&lt;/a> with a few solutions. Many people reported using &lt;code>autocomplete=&amp;quot;new-password&amp;quot;&lt;/code> fixes this issue but I have no success on this front. Which solved the issue for me is setting the form fields to read only and then removing the attribute once the user focus them.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#000080">input&lt;/span> &lt;span style="color:#008080">readonly&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;readonly&amp;#34;&lt;/span> &lt;span style="color:#008080">onfocus&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;this.removeAttribute(&amp;#39;readonly&amp;#39;);&amp;#34;&lt;/span> &lt;span style="color:#008080">type&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;text&amp;#34;&lt;/span> &lt;span style="color:#008080">value&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;user@email.com&amp;#34;&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>My list of GitHub tips and third-party apps</title><link>https://leonardofaria.net/2019/09/03/my-list-of-github-tips-and-third-party-apps/</link><pubDate>Tue, 03 Sep 2019 11:42:19 -0300</pubDate><guid>https://leonardofaria.net/2019/09/03/my-list-of-github-tips-and-third-party-apps/</guid><description>&lt;p>I work at Thinkific with 20+ other developers (we are &lt;a href="http://bit.ly/thnk-eng-team-lead">hiring&lt;/a> &lt;a href="http://bit.ly/thnk-eng-lead">for&lt;/a> &lt;a href="http://bit.ly/thnk-senior-front-end-engineer">multiple&lt;/a> positions) in different codebases. GitHub is part of our toolkit, and I decided to write a post sharing a few Chrome extensions, integrations and third-party apps that help me be productive as an individual contributor and organized as code reviewer and team lead.&lt;/p>
&lt;h2 id="chrome-extensions">Chrome extensions&lt;/h2>
&lt;h3 id="refined-githubhttpschromegooglecomwebstoredetailrefined-githubhlepfoohegkhhmjieoechaddaejaokhfhlen">&lt;a href="https://chrome.google.com/webstore/detail/refined-github/hlepfoohegkhhmjieoechaddaejaokhf?hl=en">Refined GitHub&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://sindresorhus.com/">Sindre Sorhus&lt;/a> extension brings a &lt;a href="https://github.com/sindresorhus/refined-github#repositories">massive list of improvements&lt;/a> to GitHub UI and many of them have become part of the product after a bit.&lt;/p>
&lt;h3 id="better-pull-request-for-githubhttpschromegooglecomwebstoredetailbetter-pull-request-for-gnfhdjopbhlggibjlimhdbogflgmbiahchlen">&lt;a href="https://chrome.google.com/webstore/detail/better-pull-request-for-g/nfhdjopbhlggibjlimhdbogflgmbiahc?hl=en">Better Pull Request for GitHub&lt;/a>&lt;/h3>
&lt;p>This extension list project files in a tree. This is quite useful when you have a big pull request and you need to go back and forth to understand better what is going on.&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/09/better-pull-request-for-github.jpg" alt="" class="wp-image-1984" /> &lt;/figure>&lt;/p>
&lt;h3 id="github-hovercardhttpschromegooglecomwebstoredetailgithub-hovercardmmoahbbnojgkclgceahhakhnccimnplkhlen">&lt;a href="https://chrome.google.com/webstore/detail/github-hovercard/mmoahbbnojgkclgceahhakhnccimnplk?hl=en">GitHub Hovercard&lt;/a>&lt;/h3>
&lt;p>This extension shows info about a user, project, issue or commit. It is a cool UI trick like Facebook does. This extension even works for private repositories, as long as you have a valid token to grab the information of the service.&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/09/hover-cards.jpg" alt="" class="wp-image-1986" /> &lt;/figure>&lt;/p>
&lt;h3 id="github-repository-sizehttpschromegooglecomwebstoredetailgithub-repository-sizeapnjnioapinblneaedefcnopcjepgkcihlen">&lt;a href="https://chrome.google.com/webstore/detail/github-repository-size/apnjnioapinblneaedefcnopcjepgkci?hl=en">GitHub Repository Size&lt;/a>&lt;/h3>
&lt;p>This extension automatically adds the repository size and individual files size&lt;/p>
&lt;h3 id="file-icon-for-github-and-gitlabhttpschromegooglecomwebstoredetailfile-icon-for-github-andficfmibkjjnpogdcfhfokmihanoldbfe">&lt;a href="https://chrome.google.com/webstore/detail/file-icon-for-github-and/ficfmibkjjnpogdcfhfokmihanoldbfe">File Icon for GitHub and GitLab&lt;/a>&lt;/h3>
&lt;p>Not a lot to say here :)&lt;/p>
&lt;h2 id="integrations">Integrations&lt;/h2>
&lt;h3 id="pull-pandahttpspullpandacom">&lt;a href="https://pullpanda.com/">Pull Panda&lt;/a>&lt;/h3>
&lt;p>Pull Panda is an integration GitHub acquired &lt;a href="https://pullpanda.com/github">a few months ago&lt;/a> and they have added for free in the product. It is very handy because you can map GitHub users to Slack users and then they will get inside Slack all the information about the work they are following in Slack. Pull Panda delivers comments in PRS and even tell you about git conflicts (I love and hate this one).&lt;/p>
&lt;p>Pull Panda can also spot bottlenecks, show who are the ones most pushing/reviewing code and even assign automatically people to Pull Requests.&lt;/p>
&lt;h2 id="macos-apps">macOS apps&lt;/h2>
&lt;h3 id="gitifyhttpswwwgitifyio">&lt;a href="https://www.gitify.io/">Gitify&lt;/a>&lt;/h3>
&lt;p>Gitify lives in your Mac menu bar and it is quite simple to understand. If the icon is green, you have a notification! It is also cool to mention the app is &lt;a href="https://github.com/manosim/gitify">open-source&lt;/a> (Electron-based, if you are curious).&lt;/p>
&lt;h3 id="questshttpssteamclockcomquests">&lt;a href="https://steamclock.com/quests/">Quests&lt;/a>&lt;/h3>
&lt;p>Quests is similar to Gitify but one important difference here is Quest also supports GitLab.&lt;/p>
&lt;h2 id="ios-apps">iOS apps&lt;/h2>
&lt;h3 id="githawkhttpgithawkcom">&lt;a href="http://githawk.com/">Githawk&lt;/a>&lt;/h3>
&lt;p>Gitwalk is my favourite iOS app for GitHub. It lists pull requests in a friendly way and I like how you can see the files affected in the PR and all conversation in place. If you need to take a lot at a pull request when you are not in front of the computer, this app is for you!&lt;/p>
&lt;p>&lt;em>What are your GitHub tricks? Let me know in the comments :)&lt;/em>&lt;/p></description></item><item><title>Newsletters to subscribe</title><link>https://leonardofaria.net/2019/05/14/newsletters-to-subscribe/</link><pubDate>Tue, 14 May 2019 23:54:26 -0300</pubDate><guid>https://leonardofaria.net/2019/05/14/newsletters-to-subscribe/</guid><description>&lt;p>In the last years, newsletters became more and more popular. Along with Twitter and RSS, it is one of my favourite ways to keep me updated it. Here are the ones I follow:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://softwareleadweekly.com/">Software Lead Weekly&lt;/a> – if you are a team lead, engineer manager, CTO you will like this one. Worth to mention their Slack group.&lt;/li>
&lt;li>&lt;a href="https://changelog.com/">Changelog&lt;/a> – independently of your stack, Changelog is a rich newsletter with interviews and tool suggestions. They also have a podcast – &lt;a href="https://email.changelog.com/t/ViewEmail/t/07B6AC1A841DD8ED2540EF23F30FEDED/D6D7BA67637E86A7F1E87EB810D8F10A">Example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.densediscovery.com/">Dense Directory&lt;/a> – Every Tuesday a newsletter helping web workers be productive, stay inspired and think critically&lt;/li>
&lt;li>&lt;a href="https://umaar.com/dev-tips/">dev tips&lt;/a> – Chrome Dev Tools gifs weekly in your email.&lt;/li>
&lt;li>&lt;a href="https://javascriptweekly.com/">JavaScript Weekly&lt;/a> – a once–weekly email roundup of JavaScript news and articles&lt;/li>
&lt;li>&lt;a href="https://react.statuscode.com/">React Status&lt;/a> – another one about JavaScript but React focused – &lt;a href="https://react.statuscode.com/issues/136">Example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rubyweekly.com/">Ruby Weekly&lt;/a> – once-weekly emails about Ruby. This one and the previous two are curated by &lt;a href="https://cooperpress.com/">cooperpress&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gomakethings.com/articles/">Daily Developer Tips&lt;/a> – code snippets, tools, techniques, and interesting stuff from around the web.&lt;/li>
&lt;li>&lt;a href="https://www.l2inc.com/daily-insights">Gartner L2 Daily Insights&lt;/a> – news and research analysis across digital marketing, site &amp;amp; e-commerce, mobile and social media.&lt;/li>
&lt;/ul></description></item><item><title>It Doesn't Have to Be Crazy at Work and Joy, Inc.: How We Built a Workplace People Love reviews</title><link>https://leonardofaria.net/2019/01/23/it-doesnt-have-to-be-crazy-at-work-and-joy-inc-how-we-built-a-workplace-people-love-reviews/</link><pubDate>Wed, 23 Jan 2019 04:41:05 -0200</pubDate><guid>https://leonardofaria.net/2019/01/23/it-doesnt-have-to-be-crazy-at-work-and-joy-inc-how-we-built-a-workplace-people-love-reviews/</guid><description>&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2019/01/IMG_4455.jpg" alt="Book covers">&lt;/p>
&lt;p>In the last couple of months, I read It Doesn&amp;rsquo;t Have to Be Crazy at Work and Joy, Inc.: How We Built a Workplace People Love. They both cover how two successful tech companies operate their activities in a very proud way. Reading these books can be inspirational for your company but at the same time, it does require a grain of salt.&lt;/p>
&lt;p>In It Doesn&amp;rsquo;t Have to Be Crazy at Work, David Heinemeier Hansson / Jason Fried share how they keep Basecamp processes and team calm. I liked how they covered time management, culture and so many other topics in a compact book but at the same time, the book &lt;g class="gr_ gr\_6 gr-alert gr\_gramm gr\_inline\_cards gr\_run\_anim Grammar multiReplace" id="6" data-gr-id="6">is swallow&lt;/g>. It is fascinating reading that Basecamp has no goals, for instance, but would love to read their experience in this matter. If you already follow DHH / JF on Twitter, you will recognize a few points of the book in their 140 &lt;g class="gr_ gr\_561 gr-alert gr\_spell gr\_inline\_cards gr\_disable\_anim_appear ContextualSpelling ins-del multiReplace" id="561" data-gr-id="561">caracter&lt;/g> messages. Anyway, here is a great part:&lt;/p>
&lt;blockquote class="wp-block-quote">
&lt;p>
“No is easier to do, yes is easier to say.&lt;br /> No is no to one thing.&lt;br /> Yes is no to a thousand things.&lt;br /> No is a precision instrument, a surgeon’s scalpel, a laser beam focused on one point.&lt;br /> Yes is a blunt object, a club, a fisherman’s net that catches everything indiscriminately.&lt;br /> No is specific.&lt;br /> Yes is general.&lt;br /> When you say no to one thing, it’s a choice that breeds choices. Tomorrow you can be as open to new opportunities as you were today.”
&lt;/p>
&lt;/blockquote>
&lt;p>In Joy, Inc.: How We Built a Workplace People Love, Richard Sheridan brings lots of elements and process from Agile to readers. It sounds like an Agile 101 but with real-world examples, what can give people the courage of trying new processes. At the same time, I saw some parts with a huge scepticism like when he mentioned that employee referrals are a terrible HR tactic or people wearing headphones are not a good fit to his noisy restaurant company.&lt;/p>
&lt;p>At the end of the day, people can see both books are marketing pieces exposing two tech companies. They sound different in several points but they both agree that too many meetings are bad, too many benefits are traps and work/life balance is important to individuals and for many, this is the message that needs to be remembered.&lt;/p></description></item><item><title>Engineering Manager Readme</title><link>https://leonardofaria.net/2018/06/24/engineering-manager-readme/</link><pubDate>Sun, 24 Jun 2018 20:33:07 -0300</pubDate><guid>https://leonardofaria.net/2018/06/24/engineering-manager-readme/</guid><description>&lt;p>Being a Team Lead requires more than tech skills: you interact daily with people and it is quite challenging building stronger relationships and improving employees onboarding. The following document is my People Lead Readme (sometimes known as Manager Readme), where I talk about me and I share my expectations on people and on the product.&lt;/p>
&lt;h2 id="what">What?&lt;/h2>
&lt;p>This document is an extended introduction to what I value and believe in as a team leader and software developer. It is also a quick introduction about myself and how I work.&lt;/p>
&lt;ul>
&lt;li>This document doesn&amp;rsquo;t replace getting to know each other through 1:1s and day-to-day chats. As I said before, it is an introduction.&lt;/li>
&lt;li>This document applies only to me, and in no way should be considered to apply to any other team lead or manager at Thinkific – even though we think in similar ways sometimes.&lt;/li>
&lt;li>If you feel like I am not acting like I describe here, please let me know.&lt;/li>
&lt;li>If you are curious why this document exists in the first place: there is a newsletter called &lt;a href="http://softwareleadweekly.com/">SoftwareLeadWeekly&lt;/a> (recommended) and managers &lt;a href="http://softwareleadweekly.com/issues/271">share their own readme&amp;rsquo;s&lt;/a> there. After seeing several documents, I decided to write my own.&lt;/li>
&lt;/ul>
&lt;h2 id="my-job">My Job&lt;/h2>
&lt;p>As a team leader, I work for you and my other direct reports, by:&lt;/p>
&lt;ul>
&lt;li>Providing context so you and others can be successful, connecting the dots between the company needs and what the individual needs (career growth);&lt;/li>
&lt;li>Mentoring individual contributors in technologies or business logic that I am familiar with.&lt;/li>
&lt;/ul>
&lt;p>Don&amp;rsquo;t feel like you are stealing my time when you want to talk. Helping you is definitely my job (and one of my top priorities)&lt;/p>
&lt;h2 id="11s">1:1s&lt;/h2>
&lt;p>1:1s are your dedicated time and place to ask me anything and everything. It is your time. If you having nothing to ask, you can use this time for guidance, context, venting, feedback or anything you want to discuss.&lt;/p>
&lt;p>I have a few suggestions on how to have a good 1:1:&lt;/p>
&lt;ul>
&lt;li>Take notes about what do you want to talk along the month. It is difficult remembering everything that happened in one month. I may have things to cover but your topics are the priority.&lt;/li>
&lt;li>If you don&amp;rsquo;t know what to talk, I recommend reading &lt;a href="https://knowyourcompany.com/learn/guides/5-how-to-give-feedback/5-how-to-prepare-for-a-one-on-one-meeting-as-an-employee/">How to Prepare for a One-on-One Meeting as an Employee&lt;/a>. There is no reason for being shy since what we discuss is private.&lt;/li>
&lt;li>Urgent topics must not wait for a 1:1. Send a message and let&amp;rsquo;s talk.&lt;/li>
&lt;/ul>
&lt;h2 id="personal-quirks">Personal Quirks&lt;/h2>
&lt;ul>
&lt;li>I am available in the office generally between 9 AM and 5 PM. You will know via the Work From Home calendar if I am working from home (usually on Thursdays). We have an open WFH policy and if you are at home please let us know.&lt;/li>
&lt;li>I value being on time. We are flexible about when/where you work but attending to events like Town Halls and Stand-ups is not optional. You should be present – unless you have a legitimate reason.&lt;/li>
&lt;li>I tend to speak a bit louder and it sounds aggressive sometimes. It is not my intention and when you feel I crossed the line, let me know.&lt;/li>
&lt;li>I work with headphones because it helps me to concentrate and I like to listen to the radio/music/podcasts. Sending me a message is probably better than calling my name / tapping my shoulders.&lt;/li>
&lt;li>By the way, sending a message with a brief context of what you want to discuss helps me a lot. I help/work with different people/projects/codebases and as many information you give me in advance as easy is for me to provide what you need.&lt;/li>
&lt;li>I may not have all the answers that you need. Sometimes I need to dig the codebase or go for a walk to give you a better answer.&lt;/li>
&lt;li>Depending on how do you know a particular area or technology, I really expect that you tell me what is your plan, instead of waiting for me to offer a way for you.&lt;/li>
&lt;li>I prefer to receive feedback that is actionable and in private.&lt;/li>
&lt;/ul>
&lt;h2 id="about-me">About me&lt;/h2>
&lt;p>I wrote my first lines of HTML when I was 12. For a few years, I coded for fun until finding a way to do it full time. I moved to Vancouver / Canada in 2015. A few random facts:&lt;/p>
&lt;ul>
&lt;li>I have a reactive Shih-Tzu called Bento.&lt;/li>
&lt;li>I have a small collection of Macs / iDevices, including a Macintosh Plus from 1987.&lt;/li>
&lt;/ul></description></item><item><title>Another dotfiles repository</title><link>https://leonardofaria.net/2018/06/16/another-dotfiles-repository/</link><pubDate>Sat, 16 Jun 2018 18:42:55 -0300</pubDate><guid>https://leonardofaria.net/2018/06/16/another-dotfiles-repository/</guid><description>&lt;p>A few days weeks I got a MacBook Air as secondary machine. Since its SSD is smaller than my main Mac I couldn’t use Time Machine. It was definitely a good time to finally create my &lt;a href="https://github.com/leonardofaria/dotfiles">dotfiles&lt;/a> repository. My repository is based in &lt;a href="https://github.com/webpro/dotfiles/">webpro/dotfiles&lt;/a> (you may want to check it out his repo to understand this one if you feel lost).&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/leonardofaria/dotfiles/master/screenshot.jpg" alt="">&lt;/p>
&lt;h2 id="how-to-use-it">How to use it?&lt;/h2>
&lt;ul>
&lt;li>Make sure that you have an updated macOS and Command Line Tools for Xcode: &lt;code>sudo softwareupdate -i -a &amp;amp;&amp;amp; xcode-select --install&lt;/code>&lt;/li>
&lt;li>Clone the repo in your home directory: &lt;code>cd ~ &amp;amp; git clone git@github.com:leonardofaria/dotfiles.git ~/.dotfiles&lt;/code>&lt;/li>
&lt;li>Run &lt;code>./install.sh&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="a-idwhat_is_installed_10awhat-is-installed">&lt;a id="What_is_installed_10">&lt;/a>What is installed?&lt;/h2>
&lt;h3 id="a-idinstalled_via_brew_12ainstalled-via-brew">&lt;a id="Installed_via_brew_12">&lt;/a>Installed via brew&lt;/h3>
&lt;blockquote>
&lt;p>Check the description of the less popular apps&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="http://brewformulas.org/Bats">bats&lt;/a> – Bash Automated Testing System&lt;/li>
&lt;li>&lt;a href="https://github.com/kcrawford/dockutil">dockutil&lt;/a> – Command line tool for managing dock items&lt;/li>
&lt;li>&lt;a href="https://the.exa.website/">exa&lt;/a> – A modern replacement for &lt;code>ls&lt;/code>&lt;/li>
&lt;li>ffmpeg&lt;/li>
&lt;li>git&lt;/li>
&lt;li>git-extras&lt;/li>
&lt;li>htop&lt;/li>
&lt;li>&lt;a href="https://github.com/jakubroztocil/httpie">httpie&lt;/a> – A Modern command line HTTP client&lt;/li>
&lt;li>hugo&lt;/li>
&lt;li>imagemagick&lt;/li>
&lt;li>mysql&lt;/li>
&lt;li>&lt;a href="https://github.com/dylanaraps/neofetch">neofetch&lt;/a> – A command-line system information tool&lt;/li>
&lt;li>nginx&lt;/li>
&lt;li>python3&lt;/li>
&lt;li>sqlite&lt;/li>
&lt;li>tree&lt;/li>
&lt;li>&lt;a href="https://theunarchiver.com/command-line">unar&lt;/a> – A easy way for unarchiving files&lt;/li>
&lt;li>wget&lt;/li>
&lt;li>wifi-password&lt;/li>
&lt;li>yarn&lt;/li>
&lt;/ul>
&lt;h3 id="installed-via-brew-cask">Installed via brew cask&lt;/h3>
&lt;blockquote>
&lt;p>Using brew cask to install Mac app definitely save you a couple hours of browsing&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>appcleaner&lt;/li>
&lt;li>atom&lt;/li>
&lt;li>coconutbattery&lt;/li>
&lt;li>docker&lt;/li>
&lt;li>firefox&lt;/li>
&lt;li>font-meslo-for-powerline&lt;/li>
&lt;li>geekbench&lt;/li>
&lt;li>gitify&lt;/li>
&lt;li>google-chrome&lt;/li>
&lt;li>iterm2&lt;/li>
&lt;li>launchrocket&lt;/li>
&lt;li>sequel-pro&lt;/li>
&lt;li>slack&lt;/li>
&lt;li>sourcetree&lt;/li>
&lt;li>spectacle&lt;/li>
&lt;li>spotify&lt;/li>
&lt;li>tableplus&lt;/li>
&lt;li>the-unarchiver&lt;/li>
&lt;li>transmission&lt;/li>
&lt;li>visual-studio-code&lt;/li>
&lt;li>vlc&lt;/li>
&lt;/ul>
&lt;h3 id="a-idquick_look_plugins_63aquick-look-plugins">&lt;a id="Quick_Look_plugins_63">&lt;/a>Quick Look plugins&lt;/h3>
&lt;ul>
&lt;li>betterzip&lt;/li>
&lt;li>qladdict&lt;/li>
&lt;li>qlcolorcode&lt;/li>
&lt;li>qlimagesize&lt;/li>
&lt;li>qlmarkdown&lt;/li>
&lt;li>qlstephen&lt;/li>
&lt;li>qlvideo&lt;/li>
&lt;li>quicklook-csv&lt;/li>
&lt;li>quicklook-json&lt;/li>
&lt;li>suspicious-package&lt;/li>
&lt;li>webpquicklook&lt;/li>
&lt;/ul>
&lt;h3 id="other-stuff-also-installed">Other stuff also installed&lt;/h3>
&lt;ul>
&lt;li>Node 8 via &lt;code>nvm&lt;/code>, with a few global packages:
&lt;ul>
&lt;li>&lt;a href="https://www.npmjs.com/package/dockly">dockly&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/list-scripts">list-scripts&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/npm-check-updates">npm-check-updates&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/npm-scripts-tree">npm-scripts-tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/script-list">script-list&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/space-hogs">space-hogs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/speed-test">speed-test&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ruby 2.5.1 via &lt;code>rvm&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/robbyrussell/oh-my-zsh">Oh my zsh&lt;/a>, with &lt;a href="https://github.com/bhilburn/powerlevel9k">powerlevel9k&lt;/a> theme and git, rails, ruby, npm and osx plugins&lt;/li>
&lt;/ul>
&lt;h2 id="mac-defaults">Mac Defaults&lt;/h2>
&lt;p>There are lots of customizable Mac settings. Check &lt;a href="https://github.com/leonardofaria/dotfiles/blob/master/macos/defaults.sh">&lt;code>macos/defaults.sh&lt;/code>&lt;/a> for all details.&lt;/p>
&lt;h3 id="dock-items">Dock items&lt;/h3>
&lt;p>You can update your dock running: &lt;code>dotfiles dock&lt;/code>.&lt;/p>
&lt;p>Note: this will remove all your current dock items.&lt;/p>
&lt;h2 id="a-idwhat_is_not_done_automatically_100awhat-is-not-done-automatically">&lt;a id="What_is_not_done_automatically_100">&lt;/a>What is not done automatically&lt;/h2>
&lt;h3 id="a-idextra_environment_variables_102aextra-environment-variables">&lt;a id="Extra_environment_variables_102">&lt;/a>Extra environment variables&lt;/h3>
&lt;p>Add your extra information environment variables in &lt;code>system/.custom&lt;/code>.&lt;/p>
&lt;h3 id="a-iditerm_2_106aiterm-2">&lt;a id="iTerm_2_106">&lt;/a>iTerm 2&lt;/h3>
&lt;p>Open Preferences and in General, check: “Load Preferences from a custom folder or URL”. Point the folder to &lt;code>macos&lt;/code> – There is a file there called &lt;code>com.googlecode.iterm2.plist&lt;/code> with all setup.&lt;/p></description></item><item><title>Testing tools to track my work activity</title><link>https://leonardofaria.net/2018/05/06/testing-tools-to-track-my-work-activity/</link><pubDate>Sun, 06 May 2018 23:23:30 -0300</pubDate><guid>https://leonardofaria.net/2018/05/06/testing-tools-to-track-my-work-activity/</guid><description>&lt;p>For a few weeks I have been using two tools to map my work activity. Since my work involves &lt;a href="https://www.learningapprentice.com/maker-mode-manager-mode/">manager and maker modes&lt;/a>, I am trying to figure out how much time I spent in each of them and possibly how to remove distractions. A co-worker recommended &lt;a href="https://www.rescuetime.com/ref/1808210">RescueTime&lt;/a> and &lt;a href="https://wakatime.com/i/cbdf18ed-26ac-43b6-936c-d006efa2bec0">WakaTime&lt;/a> and here are my comments.&lt;/p>
&lt;h3 id="rescuetime">RescueTime&lt;/h3>
&lt;p>RescueTime home page says &lt;em>“With so many distractions and possibilities in your digital life, it&amp;rsquo;s easy to get scattered”&lt;/em> – yes, I know – and &lt;em>“RescueTime helps you understand your daily habits so you can focus and be more productive”&lt;/em>. Yes, they really helped me understand my daily habits.&lt;/p>
&lt;p>I am using the Lite version of the app. Every week I get an email like the image below:&lt;/p>
&lt;p>&lt;a href="https://www.rescuetime.com/ref/1808210">&lt;img src="https://leonardofaria.net/wp-content/uploads/2018/05/rescuetime-1024x854.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>This email &lt;em>per si&lt;/em> gives me a lot of detailed information. You can schedule when the app tracks your activity – in my case is between 8AM and 6PM, which gives me good coverage of my routine. After a few weeks, you unlock new reports, analyzing communication and most productive vs less productive days.&lt;/p>
&lt;p>&lt;a href="https://www.rescuetime.com/ref/1808210">&lt;img src="https://leonardofaria.net/wp-content/uploads/2018/05/rescuetime-report-1024x508.png" alt="">&lt;/a>&lt;/p>
&lt;p>We never know how much time we spend on Slack and similar apps. Now we know the exact impact of these tools in our routines.&lt;/p>
&lt;h3 id="wakatime">WakaTime&lt;/h3>
&lt;p>While RescueTime tracks your apps and websites, WakaTime tracks your code activity. You install a plugin in your favourite editor and done! After a while you will receive weekly emails and your data will be organized in a nice dashboard per date/time, project, language, editor and even OS.&lt;/p>
&lt;p>&lt;a href="https://wakatime.com/i/cbdf18ed-26ac-43b6-936c-d006efa2bec0">&lt;img src="https://leonardofaria.net/wp-content/uploads/2018/05/wakatime-1024x885.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>I have no information here to change my work but at least it is interesting to see how I spend my time coding.&lt;/p></description></item><item><title>#deletefacebook and social media effects on me</title><link>https://leonardofaria.net/2018/03/28/deletefacebook-social-media-effects/</link><pubDate>Wed, 28 Mar 2018 23:13:28 -0300</pubDate><guid>https://leonardofaria.net/2018/03/28/deletefacebook-social-media-effects/</guid><description>&lt;p>This week #deletefacebook was a trending topic everywhere after all the Cambridge Analytica scandal. Lots of people deleted their accounts, including &lt;a href="https://www.theverge.com/2018/3/23/17156402/elon-musk-deleted-tesla-and-spacex-facebook-pages-twitter-challenge">Elon Musk&lt;/a> and the &lt;a href="https://www.theverge.com/2018/3/20/17145200/brian-acton-delete-facebook-whatsapp">WhatsApp co-founder Brian Acton&lt;/a>. I didn&amp;rsquo;t delete my account but one thing that I did in the middle of February was deleting the app from my iPhone – which is a good step anyway.&lt;/p>
&lt;p>I am not deleting my account because I still need Facebook to reach a few people from my previous companies/schools. I used Facebook groups a lot in the past when I was dealing with immigration and unfortunately, it is difficult to find a replacement for this functionality. Forums and lists are not a thing since Facebook absorbed everything on its island.&lt;/p>
&lt;h2 id="what-can-i-do">What can I do?&lt;/h2>
&lt;p>If I can&amp;rsquo;t delete my Facebook account, I may have some way to undo my friendship with them.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.facebook.com/settings">Download a copy of my Facebook data&lt;/a>: I can see now how deep Facebook knows me. I am not sure if this is useful, but is still worth remove data from there? Maybe.
&lt;ul>
&lt;li>Review apps: 10 years of Facebook and I have 325 apps connected with Facebook. Social login was a good thing until one week ago but now, I don&amp;rsquo;t know how many Cambridge Analytica are around.&lt;/li>
&lt;li>&lt;a href="https://chrome.google.com/webstore/detail/stayfocusd/laankejkbhbdhmipfmgcngdelahlfoji?hl=en">Stayfocused&lt;/a>: this extension blocks websites that I listed after X minutes. Useful not only for Facebook but for all time-consuming pages.&lt;/li>
&lt;li>Delete the app: I deleted the app already and it is not clear what Facebook knows from your phone however &lt;a href="https://labs.rs/en/">SHARE LAB&lt;/a>, a research team based in Yugoslavia, claims those are the permissions used by Facebook:&lt;br>
&lt;a href="https://labs.rs/en/raw-data-documents-tools/">&lt;img src="https://leonardofaria.net/wp-content/uploads/2018/03/facebook-permissions.jpeg" alt="">&lt;/a>&lt;br>
&lt;small>Initially saw on &lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:6383478848499052544/">Caribé&amp;rsquo;s Linkedin&lt;/a>&lt;/small>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="instagram">Instagram&lt;/h2>
&lt;p>Owned by Facebook, Instagram is another social network to &lt;a href="https://www.cnn.com/2017/05/19/health/instagram-worst-social-network-app-young-people-mental-health/index.html">worry about it&lt;/a>. We get stuck in its like/followers game and since they &lt;s>copied Snapchat&lt;/s> released Stories is even more difficult to do not follow your friends.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/JgkvTRz_Alo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>I have decided to use Instagram as a photo album. When I was a child, I didn&amp;rsquo;t have Instagram and my family only took pictures during special times. We had a film camera and a few albums of pictures of weddings and school events. Let me exclude the like factor and FOMO here and share online only what my mom would show in her albums. And also, no more stories. I don&amp;rsquo;t want to make my life a soap opera.&lt;/p></description></item><item><title>Thoughts on building components libraries</title><link>https://leonardofaria.net/2018/02/04/thoughts-building-components-libraries/</link><pubDate>Sun, 04 Feb 2018 16:24:53 -0200</pubDate><guid>https://leonardofaria.net/2018/02/04/thoughts-building-components-libraries/</guid><description>&lt;p>A few months ago we started using React at &lt;a href="https://thinkific.com">Thinkific&lt;/a>. One of the challenges of using React is creating reusable components not only from a look and feel perspective but also shareable in different projects.&lt;/p>
&lt;p>I didn&amp;rsquo;t create this concept of elements (or components) library. To be honest, there are podcasts, courses, and examples everywhere about it but how to even start it? When you start creating a project from scratch you face several questions:&lt;/p>
&lt;ul>
&lt;li>How to style components? Sass? Stylus? styled-components?&lt;/li>
&lt;li>How to show the elements?&lt;/li>
&lt;li>How to build the library? Babel? Webpack?&lt;/li>
&lt;li>How to publish the library? To NPM or not NPM?&lt;/li>
&lt;li>How to use integrations and CI in your favour?&lt;/li>
&lt;/ul>
&lt;p>Lots of decisions and you may not know all the answers. Startup Life™ doesn&amp;rsquo;t let you do whatever you want – everything has a cost and a trade-off. Why am I talking all this story? Because I wanted to share my thoughts about it and I created a &lt;a href="https://github.com/leonardofaria/leozera-ui">&lt;strong>repository to document&lt;/strong>&lt;/a> what we are doing.&lt;/p>
&lt;h2 id="styling">Styling&lt;/h2>
&lt;p>&lt;a href="https://www.styled-components.com/">styled-components&lt;/a> changed the way we style things however many people still use Sass, especially when they come from Rails (our case for instance).&lt;/p>
&lt;p>If you have something already done in Sass there is no reason for migrating to styled-components. Also, if you keep everything in Sass you can still export your compiled styling easily – like a bootstrap.css.&lt;/p>
&lt;h2 id="showing-elements">Showing elements&lt;/h2>
&lt;p>&lt;a href="https://storybook.js.org/">Storybook&lt;/a> is probably the way to go when the topic is showing a component and its properties. My two cents about Storybook:&lt;/p>
&lt;ul>
&lt;li>They have a &lt;a href="https://now-examples-slackin-nqnzoygycp.now.sh/">really good Slack&lt;/a>, which is an endless source of knowledge.&lt;/li>
&lt;li>&lt;a href="https://storybook.js.org/addons/addon-gallery/">Addons&lt;/a> are pretty useful and it is worth spending a time testing them. &lt;a href="https://github.com/storybooks/storybook/tree/master/addons/knobs">Knobs&lt;/a>, for instance, lets you change props via browser. Quite handy.&lt;/li>
&lt;li>You can host your Storybook using Github Pages. It&amp;rsquo;s pretty straightforward and projects like &lt;a href="https://github.com/tschaub/gh-pages">gh-pages&lt;/a> or &lt;a href="https://github.com/enriquecaballero/branchsite">branchsite&lt;/a> get job done.&lt;/li>
&lt;li>You can also host your Storybook using &lt;a href="https://www.netlify.com/">Netlify&lt;/a>. To be honest, this is my favourite approach because you can build the master branch as official documentation and build all additional commits – and get them in &lt;a href="https://github.com/leonardofaria/leozera-ui/pull/1">Pull Requests&lt;/a>!&lt;br>
&lt;img src="https://leonardofaria.net/wp-content/uploads/2017/12/netlify.png" alt="Netlify hook in PR">&lt;/li>
&lt;/ul>
&lt;h2 id="building-the-library">Building the library&lt;/h2>
&lt;p>There are a few different approaches here. I am using Babel to compile individually the ES6 component and webpack to build everything in one file.&lt;/p>
&lt;p>At the moment I write this post &lt;a href="https://medium.com/webpack/webpack-4-beta-try-it-today-6b1d27d7d7e2">webpack 4&lt;/a> is beta. The performance improvements are quite stunning.&lt;/p>
&lt;h2 id="publishing-the-library">Publishing the library&lt;/h2>
&lt;p>Again, there are different approaches to publish the library in NPM. For now, I have a `yarn run publish` command that will bump the version, build the library and publish the built `dist` directory.&lt;/p>
&lt;p>This approach is quite manual but packages like &lt;a href="https://github.com/sindresorhus/np">np&lt;/a>, &lt;a href="https://github.com/mgol/npm-bump">npm-bump&lt;/a> and &lt;a href="https://github.com/d4rkr00t/pmm">pmm&lt;/a> can help here. You can also use &lt;code>yarn version&lt;/code> – if you are a yarn person.&lt;/p>
&lt;h2 id="using-integrations">Using integrations&lt;/h2>
&lt;p>I added CircleCI in the repository since I used to use on daily basis. It runs tests created by jest and after it uploads to Codecov the code coverage. Both CircleCI and Codecov are free for open source projects. Of course you can use &lt;a href="https://travis-ci.org/">Travis CI&lt;/a>, and &lt;a href="https://coveralls.io/">Coveralls&lt;/a>, also free for open source projects.&lt;/p>
&lt;p>One project that I just figured out recently is the &lt;a href="https://nodesecurity.io/">Node Security Platform&lt;/a>. Its job is monitoring vulnerability threatens in your repository. Github also &lt;a href="https://help.github.com/articles/about-security-alerts-for-vulnerable-dependencies/">offers&lt;/a> the same.&lt;/p>
&lt;p>Talking about external dependencies, you may want to consider &lt;a href="https://greenkeeper.io/">Greenkeeper&lt;/a> or &lt;a href="https://www.dependencies.io/">dependencies.io&lt;/a>. They both monitor your package.json and create individuals Pull Requests to update packages in your repository. The other two options you have are: &lt;code>yarn outdated&lt;/code> or &lt;a href="https://www.npmjs.com/package/npm-check-updates">ncu&lt;/a>:&lt;/p>
&lt;p>&lt;a href="https://www.npmjs.com/package/npm-check-updates">&lt;img src="https://leonardofaria.net/wp-content/uploads/2018/02/ncu.png" alt="ncu">&lt;/a>&lt;/p>
&lt;p>Last but not least, I like to add a npm script to update the authors file. Here I shoot:&lt;/p>
&lt;pre>&lt;code>git log --format='%aN &amp;lt;%aE&amp;gt;' | sort -u --ignore-case | grep -v 'users.noreply.github.com' &amp;gt; AUTHORS.txt &amp;amp;&amp;amp; git commit AUTHORS.txt -m 'Update AUTHORS' || true
&lt;/code>&lt;/pre>&lt;p>If you are curious about the &lt;code>git commit AUTHORS.txt -m 'Update AUTHORS' || true&lt;/code>. Not all the time we will modify the text file so I need the &lt;code>|| true&lt;/code> to ensure that the script continues to run even after git reports an error since there is no changes to commit.&lt;/p>
&lt;h2 id="extra-resources">Extra resources&lt;/h2>
&lt;p>I am adding here a few useful links about the topic:&lt;/p>
&lt;ul>
&lt;li>Podcast: &lt;a href="http://frontendhappyhour.com/episodes/top-shelf-style-guides/">Top Shelf Style Guides&lt;/a>: lots of thoughts and links here – this podcast is really good by the way&lt;/li>
&lt;li>Course: &lt;a href="https://www.pluralsight.com/courses/react-creating-reusable-components">Creating Reusable Components&lt;/a>&lt;/li>
&lt;li>(Mini)-Course: &lt;a href="https://egghead.io/courses/publish-javascript-packages-on-npm">Publish JavaScript packages on NPM&lt;/a> – because this mini-course I found &lt;a href="https://github.com/sindresorhus/np">np&lt;/a>, quoted before.&lt;/li>
&lt;li>Website: &lt;a href="http://styleguides.io/">Style Guide&lt;/a> – 496 Website Style Guides and counting…&lt;/li>
&lt;li>Inspiration: &lt;a href="https://ant.design/">Ant Design&lt;/a>&lt;/li>
&lt;li>Inspiration: &lt;a href="https://atlaskit.atlassian.com/">AtlasKit&lt;/a>&lt;/li>
&lt;li>Inspiration: &lt;a href="https://nikgraf.github.io/belle/">Belly&lt;/a>&lt;/li>
&lt;li>Inspiration: &lt;a href="http://grommet.io/">Grommet&lt;/a>&lt;/li>
&lt;li>Inspiration: &lt;a href="https://react.semantic-ui.com/">Semantic UI&lt;/a>&lt;/li>
&lt;li>Inspiration: &lt;a href="http://reactsymbols.com/">UI React Kit&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Thanks for my co-worker &lt;a href="https://github.com/akiokio">Akio&lt;/a> for helping on this (and &lt;a href="https://github.com/reactjs/reactjs.org/pull/338#issuecomment-346891946">showing Netlify on reactjs.org repository&lt;/a>) and my other folks from Thinkific.&lt;/p></description></item><item><title>Sick Picks: Podcasts</title><link>https://leonardofaria.net/2018/01/23/sick-picks-podcasts/</link><pubDate>Tue, 23 Jan 2018 02:46:07 -0200</pubDate><guid>https://leonardofaria.net/2018/01/23/sick-picks-podcasts/</guid><description>&lt;p>I am huge fan of podcasts. It is always nice to hear people&amp;rsquo;s thoughts, struggles, jokes and sick picks. Here is my short list of development-related podcasts.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://syntax.fm/">Syntax&lt;/a>&lt;/strong>: Wes Bos and Scott Tolinski talk about webdevelopment. You can expect lots of Javascript – especially React – and CSS here.&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://spec.fm/podcasts/developer-tea">Developer Tea&lt;/a>&lt;/strong>: plenty of episodes about the developer career. Off the top of my head I would recommend the episode about &lt;a href="https://spec.fm/podcasts/developer-tea/32884">Experienced Developers and Impostor Syndrome&lt;/a>.&lt;/li>
&lt;li>&lt;strong>&lt;a href="http://frontendhappyhour.com/">Front End Happy Hour&lt;/a>&lt;/strong>: each episode the hosts toast when someone says a specific word. If you are into style guides, you must head &lt;a href="http://frontendhappyhour.com/episodes/top-shelf-style-guides/">their episode about it&lt;/a>.&lt;/li>
&lt;li>&lt;strong>&lt;a href="http://www.se-radio.net/">Software Engineering Radio&lt;/a>&lt;/strong>: I didn&amp;rsquo;t hear a lot of episodes here but it caught my &lt;s>eyes&lt;/s> ears &lt;a href="http://www.se-radio.net/2016/06/se-radio-episode-261-david-heinemeier-hansson-on-the-state-of-rails-monoliths-and-more/">the one with David Heinemeier Hansson&lt;/a>, creator of Ruby on Rails.&lt;/li>
&lt;li>&lt;strong>&lt;a href="http://www.vancouvertechpodcast.ca/">Vancouver Tech Podcast&lt;/a>&lt;/strong>: last but not least, I&amp;rsquo;ve been living in Vancouver for more than 2 years and it&amp;rsquo;s nice to hear the local tech scene.&lt;/li>
&lt;/ul>
&lt;p>What are your favourite podcasts? Let me know in the comments :)&lt;/p></description></item><item><title>Useful apps that I use daily – 2017 edition</title><link>https://leonardofaria.net/2017/12/14/useful-apps-that-i-use-daily-2017-edition/</link><pubDate>Thu, 14 Dec 2017 05:09:20 -0200</pubDate><guid>https://leonardofaria.net/2017/12/14/useful-apps-that-i-use-daily-2017-edition/</guid><description>&lt;p>2 years ago I wrote a &lt;a href="https://leonardofaria.net/2015/09/17/useful-apps-that-i-use-daily/">post&lt;/a> about my tooling and here I am again, 2017 edition. I decided to write again because I keep listening to podcasts with Sick Picks and I also have my Sick Picks :)&lt;/p>
&lt;h2 id="dev-tools">Dev tools&lt;/h2>
&lt;h3 id="editor-atom">Editor: Atom&lt;/h3>
&lt;p>I have been using Atom for a while. Despite I started testing VS Code in the latest months, I returned to Atom because VS Code doesn&amp;rsquo;t separate &lt;a href="https://github.com/Microsoft/vscode/issues/25986">UI theme from syntax theme&lt;/a> – you may not care about this, but I am a fan of a light UI and a dark code highlight.&lt;/p>
&lt;p>&lt;a href="https://gist.github.com/leonardofaria/982b8055af2d6d02116b03950bbf0583">&lt;img src="https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-atom.png" alt="My Atom">&lt;/a>&lt;/p>
&lt;p>Here are the packages that I have installed:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://atom.io/packages/atom-beautify">atom-beautify&lt;/a>: Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/atom-ternjs">atom-ternjs&lt;/a>: JavaScript code intelligence for atom with Tern. Adds support for ES5, ES6 (JavaScript 2015), Node.js, jQuery &amp;amp; Angular. Extendable via plugins. Uses suggestion provider by autocomplete-plus.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/auto-update-packages">auto-update-packages&lt;/a>: Keep your Atom packages up to date.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/css-declaration-sorter">css-declaration-sorter&lt;/a>: Sorts CSS declarations fast and automatically in a certain order.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/cobalt2-syntax">cobalt2-syntax&lt;/a>: An Atom theme based on our old blue friend cobalt.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/custom-title">custom-title&lt;/a>: Set your own template for Atom&amp;rsquo;s title bar.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/editorconfig">editorconfig&lt;/a>: Helps developers maintain consistent coding styles between different editors&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/emmet">emmet&lt;/a>: Emmet – the essential tool for web developers&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/emmet-jsx-css-modules">emmet-jsx-css-modules&lt;/a>: Extends Emmet&amp;rsquo;s JSX expansions to use CSS modules.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/file-icons">file-icons&lt;/a>: Assign file extension icons and colours for improved visual grepping&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/fonts">fonts&lt;/a>: Lots of monospace fonts.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/highlight-selected">highlight-selected&lt;/a>: Highlights the current word selected when double clicking&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/lines">lines&lt;/a>: Add extra operations to lines: Sort, Reverse, Unique and Shuffle&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/markdown-preview-plus">markdown-preview-plus&lt;/a>: Markdown Preview + Community Features&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/merge-conflicts">merge-conflicts&lt;/a>: Resolve git conflicts within Atom&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/native-ui">native-ui&lt;/a>: Experience better coding in macOS Sierra.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/pigments">pigments&lt;/a>: A package to display colors in project and files.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/rails-open-rspec">rails-open-rspec&lt;/a>: open rspec file by current file.&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/ruby-test">ruby-test&lt;/a>: Run Ruby tests, Rspec examples, and Cucumber features from Atom&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/sublime-style-column-selection">sublime-style-column-selection&lt;/a>: Enable Sublime style ‘Column Selection&amp;rsquo;. Just hold ‘alt&amp;rsquo; while you select, or select using your middle mouse button. Also similar to Texmate&amp;rsquo;s ‘Multiple Carets&amp;rsquo;, or BBEdit&amp;rsquo;s ‘Block Select&amp;rsquo;&lt;/li>
&lt;li>&lt;a href="https://atom.io/packages/sync-settings">sync-settings&lt;/a>: Synchronize package settings, keymap and installed packages&lt;/li>
&lt;/ul>
&lt;p>Note: I didn&amp;rsquo;t add in the list linters and language support because it depends basically on the devs choice. Also, since I use sync-settings, you can check &lt;a href="https://gist.github.com/leonardofaria/982b8055af2d6d02116b03950bbf0583">my editor settings on Gist&lt;/a>.&lt;/p>
&lt;h3 id="terminal-iterm2--oh-my-zsh">Terminal: iTerm2 + oh-my-zsh&lt;/h3>
&lt;p>I am using &lt;strong>&lt;a href="https://www.iterm2.com/">iTerm2&lt;/a>&lt;/strong> for a long time with Zsh and &lt;strong>&lt;a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh&lt;/a>&lt;/strong>. If you are not familiar with these tools, I strongly suggest watching Wes Bos &lt;strong>&lt;a href="https://commandlinepoweruser.com/">Command Line Power User&lt;/a>&lt;/strong> free videos.&lt;/p>
&lt;h3 id="github-gitify">Github: Gitify&lt;/h3>
&lt;p>&lt;strong>&lt;a href="http://www.gitify.io">Gitify&lt;/a>&lt;/strong> is an app on the menubar that brings Github notifications. I know, there are email notifications or Chrome extensions but what I like in Gitify: it just works. New notification: icon color change in the menubar.&lt;/p>
&lt;center>
&lt;a href="http://www.gitify.io">&lt;img src="https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-gitify.png" alt="" width="500" height="342" class="aligncenter size-full wp-image-1844" srcset="https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-gitify.png 500w, https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-gitify-300x205.png 300w" sizes="(max-width: 500px) 100vw, 500px" />&lt;/a>
&lt;/center>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-codehub.png" width="40%" align="right" />&lt;/p>
&lt;h3 id="github-codehub">Github: Codehub&lt;/h3>
&lt;p>&lt;strong>&lt;a href="http://codehub-app.com/">CodeHub&lt;/a>&lt;/strong> is how I get connected to my GitHub profile out of computer. Again, I am not a fan of a full inbox and it is easy to browse the Pull Request that I am participating. You may need to in-app buy the Pro version to get access to private repositories.&lt;/p>
&lt;h2 id="database-related-tools">Database-related tools&lt;/h2>
&lt;p>&lt;strong>&lt;a href="https://www.sequelpro.com/">Sequel Pro&lt;/a>&lt;/strong> is a beautiful and open-source app to handle MySQL databases. You can save your favourite connections and queries.&lt;/p>
&lt;p>If you want to handle Postgres you may need &lt;strong>&lt;a href="http://www.psequel.com/">PSequel&lt;/a>&lt;/strong> or &lt;strong>&lt;a href="https://tableplus.io">TablePlus&lt;/a>&lt;/strong>. Why two apps? PSequel gets job done but I noticed that I can&amp;rsquo;t edit PostgreSQL JSON types fields, which is handled by TablePlus. I am probably going to switch to only TablePlus soon since the UI is much better.&lt;/p>
&lt;p>&lt;a href="https://tableplus.io/">&lt;img src="https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-tableplus.png?ss" alt="">&lt;/a>&lt;/p>
&lt;p>Last but not least, &lt;strong>&lt;a href="https://www.tadviewer.com/">Tad&lt;/a>&lt;/strong> is useful to deal with CSVs.&lt;/p>
&lt;h2 id="other-tools">Other tools&lt;/h2>
&lt;p>&lt;strong>&lt;a href="https://my.cl.ly/r/0f0P0e3g1O0x2k18">CloudApp&lt;/a>&lt;/strong> is one of many apps to store screenshots and short videos. What made choose it is the ability to set a custom domain for your files, which is quite handy.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://meetfranz.com">Franz&lt;/a>&lt;/strong> is useful because it groups all your Slacks, Messenger, Whatsapp, Telegram and everything else in one single window.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://github.com/jimbojsb/launchrocket">LaunchRocket&lt;/a>&lt;/strong> is definitely an app that you need to install if you install services via Homebrew. It searches services in the Homebrew folder and list them inside the System Preferences.&lt;/p>
&lt;p>&lt;a href="https://github.com/jimbojsb/launchrocket">&lt;img src="https://leonardofaria.net/wp-content/uploads/2017/12/screenshot-launchrocket.png" alt="launchrocket">&lt;/a>&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://member.ipmu.jp/yuji.tachikawa/MenuMetersElCapitan/">MenuMeters&lt;/a>&lt;/strong> adds in the menubar the CPU usage. &lt;a href="https://bjango.com/mac/istatmenus/">iStat Menus&lt;/a> is probably the most famous and it deliveries much more stuff but I want to keep this simple.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://www.spectacleapp.com">Spectacle&lt;/a>&lt;/strong> is an &lt;a href="https://github.com/eczarny/spectacle">open source&lt;/a> window control app via shortcuts. Since I use a 4K display is quite handy having all windows in place.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://www.sourcetreeapp.com/">SourceTree&lt;/a>&lt;/strong> is my favourite Git GUI because it is friendly and free. It helps me a lot interacting with my repositories.&lt;/p></description></item><item><title>Github webinars</title><link>https://leonardofaria.net/2017/12/04/github-webinars/</link><pubDate>Mon, 04 Dec 2017 15:44:53 -0200</pubDate><guid>https://leonardofaria.net/2017/12/04/github-webinars/</guid><description>&lt;p>Many of us use Github daily however we usually don&amp;rsquo;t use all its features. On the latest months, its team released a few webinars about how Github uses Github. More than showing the web interface, they talked about their culture and their workflows. In this post, I&amp;rsquo;m adding the links to the webinars with a few notes.&lt;/p>
&lt;h3 id="communicating-with-issueshttpsresourcesgithubcomwebcastsgithub-communicating-with-issues">&lt;a href="https://resources.github.com/webcasts/GitHub-communicating-with-issues/">Communicating with Issues&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>They don’t send email internally and they use repositories for everything&lt;/li>
&lt;li>They have 688 people and 829 teams – the concept of team here is: by organizational team, by project, by affinity and by location&lt;/li>
&lt;li>Their projects always have: &lt;code>README.md&lt;/code>, &lt;code>CONTRIBUTING.md&lt;/code>, &lt;code>ROADMAP.md&lt;/code>, &lt;code>ISSUE_TEMPLATE.md&lt;/code> and &lt;code>PULL_REQUEST_TEMPLATE.md&lt;/code>&lt;/li>
&lt;li>In PRs they include a TL,DR (I also do this)&lt;/li>
&lt;li>It is possible to create accordions / dropdown in Markdown – &lt;a href="https://speakerdeck.com/crichid/how-github-uses-github-communicating-with-issues?slide=38">example&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="communicating-with-remote-teamshttpsresourcesgithubcomwebcastsgithub-communicating-with-remote-teams">&lt;a href="https://resources.github.com/webcasts/GitHub-communicating-with-remote-teams/">Communicating with remote teams&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>“Remote” is not a good word and they prefer using the term “Distributed” – which I also like. Like &lt;a href="https://www.thinkific.com">Thinkific&lt;/a>, they have weekly radars and team stand-ups. It is interesting to mention they use their own Github to handle projects, instead of using a project-specific tool like Jira or Asana. Even their one-on-ones are stored in repositories&lt;/li>
&lt;li>They mentioned &lt;a href="https://github.com/topics/hubot">Hubot&lt;/a> – a bot system with several plugins&lt;/li>
&lt;li>For video calls, they use zoom – for all meetings they book they also add a zoom link (we kind of do the same with Google Meet)&lt;/li>
&lt;/ul>
&lt;h3 id="managing-your-teamshttpsresourcesgithubcomwebcastsgithub-managing-your-teams">&lt;a href="https://resources.github.com/webcasts/GitHub-managing-your-teams/">Managing your teams&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>They show the project&amp;rsquo;s functionality inside Github. It is a Kanban/Trello style project tool with the advantage of being integrated with Github. To be honest, I never noticed the Project feature but after this webinar, I started using in a pet-project&lt;/li>
&lt;li>They show &lt;a href="https://probot.github.io/">Probot&lt;/a> – it’s an open-source bot created by GH employees&lt;/li>
&lt;li>They show &lt;a href="https://help.github.com/articles/about-task-lists/#creating-task-lists">Task Lists&lt;/a> (markdown trick)&lt;/li>
&lt;/ul>
&lt;h3 id="managing-your-projectshttpsresourcesgithubcomwebcastsgithub-managing-your-projects">&lt;a href="https://resources.github.com/webcasts/GitHub-managing-your-projects/">Managing your projects&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>This one covers pretty much the project feature that Github offers (similar to the previous one). It is cool because projects are connected to the repo and they show how to use Issues, PRs and Milestones together. For one moment I thought why we don’t use Github in the company but I remembered how much would cost per user so I am not sure if it is a good idea.&lt;/li>
&lt;li>Github has &lt;a href="https://github.com/blog/2135-saved-replies">saved replies&lt;/a> that can be used in PR’s and Issues. Pretty handy.&lt;/li>
&lt;/ul>
&lt;h3 id="writing-documentation-for-your-projectshttpsresourcesgithubcomwebcastsgithub-writing-documentation-for-your-projects">&lt;a href="https://resources.github.com/webcasts/GitHub-writing-documentation-for-your-projects/">Writing documentation for your projects&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>They show &lt;a href="https://docs.readthedocs.io/en/latest/index.html">Read the Docs&lt;/a>&lt;/li>
&lt;li>They remember that documentation is part of a process, don&amp;rsquo;t give this to only one person.&lt;/li>
&lt;li>They share some thoughts about how to write good documentation.&lt;/li>
&lt;/ul>
&lt;p>If you like my notes you may want to watch the videos :)&lt;/p></description></item><item><title>Cloudready or how to get a Chrome OS in a non-Chromebook laptop</title><link>https://leonardofaria.net/2016/12/29/cloudready-or-how-to-get-a-chrome-os-in-a-non-chromebook-laptop/</link><pubDate>Thu, 29 Dec 2016 16:36:55 -0200</pubDate><guid>https://leonardofaria.net/2016/12/29/cloudready-or-how-to-get-a-chrome-os-in-a-non-chromebook-laptop/</guid><description>&lt;p>Few months ago I saw in The Verge a &lt;a href="http://www.theverge.com/2016/3/7/11173836/neverware-cloudready-how-to-convert-pc-into-chromebook-free">post&lt;/a> about &lt;a href="https://www.neverware.com/">CloudReady&lt;/a>. CloudReady is a remake of Chromium OS ready to go in old PCs or Macs. The company behind the product sells its solutions/support to organizations interested in keeping using their hardware. It&amp;rsquo;s really interesting.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/NAakr95sLOI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>I am writing this post because my wife has an old Samsung laptop and I finally found a time to give a chance to CloudReady. Her laptop was initially running Windows 7 and it was updated to Windows 10. The idea was using CloudReady in another partition and using Grub to handle the boot process like any Linux distribution.&lt;/p>
&lt;p>Unfortunately, this process was more difficult that I thought. In fact CloudReady supports &lt;a href="https://guide.neverware.com/install-cloudready/#select-dual-boot-or-standalone">dual-boot installation&lt;/a> but there are few details to pay attention:&lt;/p>
&lt;ul>
&lt;li>If you are using an old computer, you probably need to convert Windows BIOS (MBR) to UEFI. I am not going to describe this once Microsoft Technet has a &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/14286.converting-windows-bios-installation-to-uefi.aspx">detailed article&lt;/a> about it.&lt;/li>
&lt;li>I initially partitioned the HDD in 1 partition for Windows and I left unlocated space for CloudReady. Windows 10 was installed in its partition without problems.&lt;/li>
&lt;li>The last step was booting CloudReady from a Flash Drive and proceding the installation according to its &lt;a href="https://guide.neverware.com/critical-requirements/">documentation&lt;/a> The dual-boot worked like a charm. &lt;/ul>&lt;/li>
&lt;/ul>
&lt;p>My first impression is that CloudReady is faster and smooth than Windows. In addition, there are no infinite updates, malwares and all the crappy things that we are used to seeing in Windows. It is definitely a good way to bring to life again an old computer. One bad thing that happened it that CloudReady stopped working and I needed to redo all the installation process.&lt;/p></description></item><item><title>Another Meetup presentation</title><link>https://leonardofaria.net/2016/12/02/another-meetup-presentation/</link><pubDate>Fri, 02 Dec 2016 16:41:57 -0200</pubDate><guid>https://leonardofaria.net/2016/12/02/another-meetup-presentation/</guid><description>&lt;p>In yesterday &lt;a href="https://www.meetup.com/Code-Coffee-Vancouver/events/235583183/">Code &amp;amp; Coffee&lt;/a> Meetup I talked about how Web APIs can improve User Experience. I watched &lt;a href="http://zenorocha.com">Zeno Rocha&lt;/a> talking about it few months ago then I decided to study/share the subject.&lt;/p>
&lt;p>Here are &lt;a href="https://leonardofaria.github.io/web-apis-to-improve-ux-slides/">my slides&lt;/a> and the &lt;a href="https://github.com/leonardofaria/web-apis-to-improve-ux">example repository&lt;/a> that I created for the event.&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-1024x768.jpg" alt="" width="1024" height="768" class="aligncenter size-large wp-image-1802" srcset="https://leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-1024x768.jpg 1024w, https://leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-300x225.jpg 300w, https://leonardofaria.net/wp-content/uploads/2016/12/IMG_6581-768x576.jpg 768w" sizes="(max-width: 1024px) 100vw, 1024px" />&lt;/p></description></item><item><title>Serving raw files directly from Github</title><link>https://leonardofaria.net/2016/08/06/serving-raw-files-directly-from-github/</link><pubDate>Sat, 06 Aug 2016 20:49:30 -0300</pubDate><guid>https://leonardofaria.net/2016/08/06/serving-raw-files-directly-from-github/</guid><description>&lt;p>We usually create HTML files in our Github repositories, but how to show this data in the browser? &lt;a href="http://rawgit.com">RawGit&lt;/a> is a solution to serve files with the correct content types.&lt;/p>
&lt;p>Example: The WordPress &lt;code>readme.html&lt;/code> file can be shown in the following URL:&lt;/p>
&lt;pre>&lt;code>https://rawgit.com/WordPress/WordPress/master/readme.html
&lt;/code>&lt;/pre>&lt;p>You only need to follow the formula:&lt;/p>
&lt;pre>&lt;code>https://rawgit.com/USER/REPOSITORY/BRANCH/file.html
&lt;/code>&lt;/pre>&lt;p>The advantage of using RawGit over Github Pages is that RawGit works with all branches, while Github Pages requires a gh-pages branch. Last not the least, the &lt;a href="https://github.com/rgrove/rawgit">source code&lt;/a> of this solution is also available in Github.&lt;/p></description></item><item><title>My first Meetup presentation</title><link>https://leonardofaria.net/2016/06/24/my-first-meetup-presentation/</link><pubDate>Fri, 24 Jun 2016 11:41:13 -0300</pubDate><guid>https://leonardofaria.net/2016/06/24/my-first-meetup-presentation/</guid><description>&lt;p>Last week I presented in &lt;a href="http://www.meetup.com/Code-Coffee-Vancouver/events/231709823/">Code &amp;amp; Coffee&lt;/a> about WordPress and Gulp. In my 10 minutes talk, I explained briefly what is Gulp and how its tasks can save our time.&lt;/p>
&lt;p>Here are &lt;a href="http://leonardofaria.github.io/wordpress-gulp-meetup/">my slides&lt;/a> and the &lt;a href="http://github.com/leonardofaria/meetup-gulp">example repository&lt;/a> that I created for the event.&lt;/p>
&lt;p>&lt;em>Update: video&lt;/em>&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/5bg9gBWwInQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Resolving slow loading of local virtualhosts on Chrome</title><link>https://leonardofaria.net/2016/03/13/resolving-slow-loading-of-local-virtualhosts-on-chrome/</link><pubDate>Sun, 13 Mar 2016 14:38:56 -0300</pubDate><guid>https://leonardofaria.net/2016/03/13/resolving-slow-loading-of-local-virtualhosts-on-chrome/</guid><description>&lt;p>I&amp;rsquo;ve in my development mac different virtualhosts, using .local or .wp TLDs. Opening these address in Chrome are slow – about 3 seconds ‘resolving address&amp;rsquo;. This situation doesn&amp;rsquo;t happen in Safari or Firefox. Here is my typical &lt;code>/etc/hosts&lt;/code> configuration:&lt;/p>
&lt;pre>&lt;code>127.0.0.1 localhost
::1 localhost
255.255.255.255 broadcasthost
fe80::1%lo0 localhost
127.0.0.1 website1.local
127.0.0.1 website2.wp
&lt;/code>&lt;/pre>&lt;p>Looking for &lt;a href="http://stackoverflow.com/questions/10064581/how-can-i-eliminate-slow-resolving-loading-of-localhost-virtualhost-a-2-3-secon">answers&lt;/a>, I changed my setup for:&lt;/p>
&lt;pre>&lt;code>127.0.0.1 localhost website1.local website2.wp
::1 localhost website1.local website2.wp
255.255.255.255 broadcasthost
fe80::1%lo0 localhost
&lt;/code>&lt;/pre>&lt;p>It works like a charm.&lt;/p></description></item><item><title>Replace git author using shell script</title><link>https://leonardofaria.net/2016/02/02/replace-git-author-using-shell-script/</link><pubDate>Tue, 02 Feb 2016 02:22:56 -0200</pubDate><guid>https://leonardofaria.net/2016/02/02/replace-git-author-using-shell-script/</guid><description>&lt;p>This is an old trick that saved me several times. Sometimes people forget to setup their name and email information. The following script is useful to fix mistakes:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/sh
&lt;/span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>
git filter-branch -f --env-filter &lt;span style="color:#d14">&amp;#39;
&lt;/span>&lt;span style="color:#d14">
&lt;/span>&lt;span style="color:#d14">an=&amp;#34;$GIT_AUTHOR_NAME&amp;#34;
&lt;/span>&lt;span style="color:#d14">am=&amp;#34;$GIT_AUTHOR_EMAIL&amp;#34;
&lt;/span>&lt;span style="color:#d14">cn=&amp;#34;$GIT_COMMITTER_NAME&amp;#34;
&lt;/span>&lt;span style="color:#d14">cm=&amp;#34;$GIT_COMMITTER_EMAIL&amp;#34;
&lt;/span>&lt;span style="color:#d14">
&lt;/span>&lt;span style="color:#d14">if [ &amp;#34;$GIT_COMMITTER_EMAIL&amp;#34; = &amp;#34;old@email.com&amp;#34; ]
&lt;/span>&lt;span style="color:#d14">then
&lt;/span>&lt;span style="color:#d14"> cn=&amp;#34;New author name&amp;#34;
&lt;/span>&lt;span style="color:#d14"> cm=&amp;#34;new@email.com&amp;#34;
&lt;/span>&lt;span style="color:#d14">fi
&lt;/span>&lt;span style="color:#d14">
&lt;/span>&lt;span style="color:#d14">export GIT_AUTHOR_NAME=&amp;#34;$an&amp;#34;
&lt;/span>&lt;span style="color:#d14">export GIT_AUTHOR_EMAIL=&amp;#34;$am&amp;#34;
&lt;/span>&lt;span style="color:#d14">export GIT_COMMITTER_NAME=&amp;#34;$cn&amp;#34;
&lt;/span>&lt;span style="color:#d14">export GIT_COMMITTER_EMAIL=&amp;#34;$cm&amp;#34;
&lt;/span>&lt;span style="color:#d14">&amp;#39;&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;Run after&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;git push origin +master:master&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Shell script para gravar áudio da Web</title><link>https://leonardofaria.net/2016/01/29/shell-script-para-gravar-audio-da-web/</link><pubDate>Fri, 29 Jan 2016 20:06:38 -0200</pubDate><guid>https://leonardofaria.net/2016/01/29/shell-script-para-gravar-audio-da-web/</guid><description>&lt;p>&lt;em>&lt;a href="https://leonardofaria.net/2016/01/26/shell-script-for-audio-recording/">This post is also available in English.&lt;/a>&lt;/em>&lt;/p>
&lt;p>Um dos meus programas de rádio favoritos é o Central 98, da &lt;a href="http://98live.com.br/">98FM&lt;/a> (de Belo Horizonte). Ele começa às 10h da manhã e devido a diferença de 6h de fuso horário eu não consigo ouví-lo ao vivo. Então, criei um shell script para gravar o programa e assim posso ouvi-lo no meu tempo livre.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
&lt;/span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>
&lt;span style="color:#998;font-style:italic"># paths&lt;/span>
&lt;span style="color:#008080">TIMELIMIT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;timelimit&amp;#34;&lt;/span>
&lt;span style="color:#008080">LIVESTREAMER&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;livestreamer&amp;#34;&lt;/span>
&lt;span style="color:#008080">FFMPEG&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;ffmpeg&amp;#34;&lt;/span>
&lt;span style="color:#998;font-style:italic"># parameters&lt;/span>
&lt;span style="color:#008080">IN&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$1&lt;/span>
&lt;span style="color:#008080">OUT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$2&lt;/span>
&lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$3&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;3600&amp;#34;&lt;/span>; &lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#008080">$#&lt;/span> -lt &lt;span style="color:#099">1&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> -n &lt;span style="color:#d14">&amp;#34;Usage: &lt;/span>&lt;span style="color:#008080">$0&lt;/span>&lt;span style="color:#d14"> url output [time]&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> &lt;span style="color:#099">0&lt;/span>
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$TIMELIMIT&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;timelimit not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$LIVESTREAMER&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;livestreamer not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$FFMPEG&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;ffmpeg not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;START STREAMING&amp;#34;&lt;/span>
&lt;span style="color:#008080">$TIMELIMIT&lt;/span> -t &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#008080">$LIVESTREAMER&lt;/span> &lt;span style="color:#008080">$IN&lt;/span> best -o &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;CONVERTING FILE TO MP3&amp;#34;&lt;/span>
ffmpeg -y -i &lt;span style="color:#008080">$OUT&lt;/span>.ts -c:a libmp3lame -b:a 64k -joint_stereo &lt;span style="color:#099">0&lt;/span> &lt;span style="color:#008080">$OUT&lt;/span>
rm &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;DONE&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>O &lt;a href="https://github.com/leonardofaria/audio-recorder">script&lt;/a> usa timelimit, ffmpeg and livestreamer. Você pode criar uma cron task para executar o script de acordo com a necessidade. Por examplo:&lt;/p>
&lt;pre>&lt;code>00 10 * * 1-5 /Users/leonardo/Sites/audio-recorder/98.sh &amp;quot;hlsvariant://http://stream.izap.com.br/live/98fm.stream/playlist.m3u8&amp;quot; &amp;quot;/Users/leonardo/Downloads/central98.mp3&amp;quot; 3600
&lt;/code>&lt;/pre>&lt;p>A linha anterior irá gravar o streaming da url por 1 hora (3600 segundos, de segunda à sexta às 10h da manhã. Se você não conhece a sintaxe do cron, use um &lt;a href="http://crontab-generator.org/">Crontab Generator&lt;/a>.&lt;/p>
&lt;p>&lt;em>Esse post também foi &lt;a href="https://coderwall.com/p/qmlkzg/shell-script-for-audio-recording">publicado no coderwall&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>Shell script for audio recording</title><link>https://leonardofaria.net/2016/01/26/shell-script-for-audio-recording/</link><pubDate>Tue, 26 Jan 2016 18:13:43 -0200</pubDate><guid>https://leonardofaria.net/2016/01/26/shell-script-for-audio-recording/</guid><description>&lt;p>&lt;em>&lt;a href="https://leonardofaria.net/2016/01/29/shell-script-para-gravar-audio-da-web/">Esse artigo está disponível em português.&lt;/a>&lt;/em>&lt;/p>
&lt;p>One of my favourite radio shows happens every day at 10 AM (Brasilia Timezone). I was unable to listen to it because the time zones. Then, I created the following small shell script to record the show and then I can listen to it in my free time.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
&lt;/span>&lt;span style="color:#999;font-weight:bold;font-style:italic">&lt;/span>
&lt;span style="color:#998;font-style:italic"># paths&lt;/span>
&lt;span style="color:#008080">TIMELIMIT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;timelimit&amp;#34;&lt;/span>
&lt;span style="color:#008080">LIVESTREAMER&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;livestreamer&amp;#34;&lt;/span>
&lt;span style="color:#008080">FFMPEG&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;ffmpeg&amp;#34;&lt;/span>
&lt;span style="color:#998;font-style:italic"># parameters&lt;/span>
&lt;span style="color:#008080">IN&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$1&lt;/span>
&lt;span style="color:#008080">OUT&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$2&lt;/span>
&lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#008080">$3&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span> &lt;span style="color:#008080">TIME&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#d14">&amp;#34;3600&amp;#34;&lt;/span>; &lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#008080">$#&lt;/span> -lt &lt;span style="color:#099">1&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> -n &lt;span style="color:#d14">&amp;#34;Usage: &lt;/span>&lt;span style="color:#008080">$0&lt;/span>&lt;span style="color:#d14"> url output [time]&amp;#34;&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> &lt;span style="color:#099">0&lt;/span>
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$TIMELIMIT&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;timelimit not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$LIVESTREAMER&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;livestreamer not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#000;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">[[&lt;/span> -z &lt;span style="color:#d14">`&lt;/span>which &lt;span style="color:#008080">$FFMPEG&lt;/span>&lt;span style="color:#d14">`&lt;/span> &lt;span style="color:#000;font-weight:bold">]]&lt;/span>; &lt;span style="color:#000;font-weight:bold">then&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;ffmpeg not found&amp;#34;&lt;/span> 1&amp;gt;&amp;amp;&lt;span style="color:#099">2&lt;/span>
&lt;span style="color:#0086b3">exit&lt;/span> 1;
&lt;span style="color:#000;font-weight:bold">fi&lt;/span>
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;START STREAMING&amp;#34;&lt;/span>
&lt;span style="color:#008080">$TIMELIMIT&lt;/span> -t &lt;span style="color:#008080">$TIME&lt;/span> &lt;span style="color:#008080">$LIVESTREAMER&lt;/span> &lt;span style="color:#008080">$IN&lt;/span> best -o &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;CONVERTING FILE TO MP3&amp;#34;&lt;/span>
ffmpeg -y -i &lt;span style="color:#008080">$OUT&lt;/span>.ts -c:a libmp3lame -b:a 64k -joint_stereo &lt;span style="color:#099">0&lt;/span> &lt;span style="color:#008080">$OUT&lt;/span>
rm &lt;span style="color:#008080">$OUT&lt;/span>.ts
&lt;span style="color:#0086b3">echo&lt;/span> &lt;span style="color:#d14">&amp;#34;DONE&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;a href="https://github.com/leonardofaria/audio-recorder">script&lt;/a> uses timelimit, ffmpeg and livestreamer. You can create a cron task to run the script according to necessity. For example:&lt;/p>
&lt;pre>&lt;code>00 10 * * 1-5 /Users/leonardo/Sites/audio-recorder/98.sh &amp;quot;hlsvariant://http://stream.izap.com.br/live/98fm.stream/playlist.m3u8&amp;quot; &amp;quot;/Users/leonardo/Downloads/central98.mp3&amp;quot; 3600
&lt;/code>&lt;/pre>&lt;p>The previous line will record the m3u8 streaming file by 1 hour (3600 seconds) Monday to Friday at 10 AM. If you are not familiar with crontab syntax, use a &lt;a href="http://crontab-generator.org/">Crontab Generator&lt;/a>.&lt;/p>
&lt;p>&lt;em>This post is also &lt;a href="https://coderwall.com/p/qmlkzg/shell-script-for-audio-recording">published in coderwall&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>the ink magazine</title><link>https://leonardofaria.net/2015/12/12/the-ink-magazine/</link><pubDate>Sat, 12 Dec 2015 21:12:26 -0200</pubDate><guid>https://leonardofaria.net/2015/12/12/the-ink-magazine/</guid><description>&lt;p>&lt;a href="http://bit.ly/the-ink-magazine">the ink magazine&lt;/a> was an &lt;a href="http://wrmf.ca/posts/wmdd-4815-assignments/">assignment&lt;/a> of my &lt;a href="http://wrmf.ca/posts/wmadd-4815-outline/">HTML &amp;amp; CSS classes&lt;/a> in the &lt;a href="http://langara.ca/programs-and-courses/programs/web-and-mobile-app/index.html">Web and Mobile App Design and Development&lt;/a> program, performed in &lt;a href="http://langara.bc.ca">Langara College&lt;/a>.&lt;/p>
&lt;p>The students was supposed to create a magazine responsive layout using HTML/CSS. (I usually use Gulp and SASS in my projects, however, I didn&amp;rsquo;t use extra tools in this task).&lt;/p>
&lt;p>The &lt;a href="http://bit.ly/1M9LNF5">source code&lt;/a> is available in &lt;a href="http://github.com/leonardofaria/">my Github profile&lt;/a>.&lt;/p>
&lt;p>&lt;a href="http://bit.ly/the-ink-magazine">&lt;img src="https://raw.github.com/leonardofaria/the-ink-magazine/master/img/static/mockup.jpg" alt="">&lt;/a>&lt;/p></description></item><item><title>A new place</title><link>https://leonardofaria.net/2015/09/11/a-new-place/</link><pubDate>Fri, 11 Sep 2015 19:04:24 -0300</pubDate><guid>https://leonardofaria.net/2015/09/11/a-new-place/</guid><description>&lt;p>&lt;a href="https://instagram.com/p/7YvAhwDTUUtj6ek4NwiLqLnnxcvmSu8lnkHhE0/?taken-by=leonardofaria">&lt;img src="https://leonardofaria.net/wp-content/uploads/2015/09/11374268_545132382310394_526835071_n-300x300.jpg" align="right" width="300" height="300" style="margin-left: 10px;" />&lt;/a> I have just moved this week to Vancouver. I started my &lt;a href="http://langara.ca/programs-and-courses/programs/web-and-mobile-app/index.html">Web and Mobile App Design and Development post-degree&lt;/a> in Langara.&lt;/p>
&lt;p>Maybe I should write a blog talking about cultural differences between Brazil and Canada, like dozens of Brazilians but I think that those pages show limited or inaccurate point of views.&lt;/p>
&lt;p>New times are coming! :)&lt;/p></description></item><item><title>Notice about future</title><link>https://leonardofaria.net/2015/05/31/notice-about-future/</link><pubDate>Sun, 31 May 2015 20:29:07 -0300</pubDate><guid>https://leonardofaria.net/2015/05/31/notice-about-future/</guid><description>&lt;p>I stopped writing in this blog for a while. I have been using this blog since 2005 and my absence is justified by live changes.&lt;/p>
&lt;p>I am going to write my posts in English but texts in Portuguese could appear eventually. Sorry for eventual grammar mistakes ;)&lt;/p>
&lt;p>&lt;img src="https://leonardofaria.net/wp-content/uploads/2015/05/that-s-all-folks-1024x640.jpg" alt="that-s-all-folks">&lt;/p></description></item><item><title>e-Recursos mobile</title><link>https://leonardofaria.net/2014/11/04/e-recursos-mobile/</link><pubDate>Tue, 04 Nov 2014 20:50:19 -0200</pubDate><guid>https://leonardofaria.net/2014/11/04/e-recursos-mobile/</guid><description>&lt;p>A mais ou menos 1 ano atrás foi publicado a primeira aplicação móvel do Ministério da Previdência Social. Trata-se do e-Recursos, sistema de processo eletrônico de recurso do INSS.&lt;/p>
&lt;div class="flex">
&lt;a href="https://play.google.com/store/apps/details?id=br.gov.previdencia.erecursos">&lt;img src="https://leonardofaria.net/wp-content/uploads/2014/10/ss-android1.jpg" class="p-2" alt="Android" />&lt;/a> &lt;a href="https://play.google.com/store/apps/details?id=br.gov.previdencia.erecursos">&lt;img src="https://leonardofaria.net/wp-content/uploads/2014/10/ss-android2.jpg" class="p-2" alt="Android" />&lt;/a>
&lt;/div>
&lt;p>O aplicativo permite a consulta a movimentação do processo bem como o acesso aos documentos que o compõem, desde que o acesso seja realizado pela própria parte interessada. A aplicação está disponível para &lt;a href="https://play.google.com/store/apps/details?id=br.gov.previdencia.erecursos">Android&lt;/a> e &lt;a href="https://itunes.apple.com/br/app/erecursos/id737750100?l=en&amp;amp;mt=8">iOS&lt;/a> e já foram mais de 10 mil downloads.&lt;/p>
&lt;div class="flex">
&lt;a href="https://itunes.apple.com/br/app/erecursos/id737750100?l=en&amp;#038;mt=8">&lt;img src="https://leonardofaria.net/wp-content/uploads/2014/10/ss-iphone-1.jpg" class="p-2" alt="iOS" />&lt;/a> &lt;a href="https://itunes.apple.com/br/app/erecursos/id737750100?l=en&amp;#038;mt=8">&lt;img src="https://leonardofaria.net/wp-content/uploads/2014/10/ss-iphone-2.jpg" class="p-2" alt="iOS" />&lt;/a>
&lt;/div></description></item><item><title>TED</title><link>https://leonardofaria.net/2014/09/02/ted/</link><pubDate>Tue, 02 Sep 2014 18:13:32 -0300</pubDate><guid>https://leonardofaria.net/2014/09/02/ted/</guid><description>&lt;p>Confesso que gosto bastante de assistir &lt;a href="http://www.ted.com/talks/browse">os vídeos&lt;/a> do &lt;a href="http://www.ted.com/">TED&lt;/a>. Os vídeos são curtos e narram a experiência de pessoas que possivelmente você não encontraria por aí para conversar.&lt;/p>
&lt;p>Um dos vídeos que vi recentemente fala em &lt;a href="http://www.ted.com/talks/matt_cutts_try_something_new_for_30_days">tentar algo novo por 30 dias&lt;/a>. 30 dias é geralmente o tempo necessário para assimilar ou abandonar um hábito.&lt;/p>
&lt;p>Os próximos 30 dias irão passar, de um jeito ou de outro, então por que não tentar algo novo? Existe no Quora uma thread sobre quais seriam &lt;a href="http://www.quora.com/TED-Talks/What-are-some-of-the-must-see-TED-talks?srid=zOh">os melhores vídeos do TED&lt;/a>. Assistí-los já pode ser um primeiro novo hábito de 30 dias.&lt;/p></description></item><item><title>URL curta no WordPress</title><link>https://leonardofaria.net/2009/04/26/url-curta-no-wordpress/</link><pubDate>Sun, 26 Apr 2009 14:46:56 -0300</pubDate><guid>https://leonardofaria.net/2009/04/26/url-curta-no-wordpress/</guid><description>&lt;p>As URLs curtas possuem muitas utilizações por aí, principalmente em microblogs como o Twitter.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#999;font-weight:bold;font-style:italic">&amp;lt;?php&lt;/span>
&lt;span style="color:#000;font-weight:bold">function&lt;/span> &lt;span style="color:#900;font-weight:bold">getShortUrl&lt;/span>(&lt;span style="color:#008080">$url&lt;/span>) {
&lt;span style="color:#008080">$tinyurl&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> file_get_contents(&lt;span style="color:#d14">&amp;#34;http://tinyurl.com/api-create.php?url=&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#008080">$url&lt;/span>);
&lt;span style="color:#000;font-weight:bold">return&lt;/span> &lt;span style="color:#008080">$tinyurl&lt;/span>;
}
&lt;span style="color:#999;font-weight:bold;font-style:italic">?&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use a função acima no arquivo functions.php do seu tema. Para exibir o link, crie a seguinte linha no arquivo do post – single.php:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#999;font-weight:bold;font-style:italic">&amp;lt;?php&lt;/span> &lt;span style="color:#000;font-weight:bold">echo&lt;/span> &lt;span style="color:#d14">&amp;#39;&amp;lt;a href=&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>getShortUrl(get_permalink(&lt;span style="color:#008080">$post&lt;/span>&lt;span style="color:#000;font-weight:bold">-&amp;gt;&lt;/span>&lt;span style="color:#008080">ID&lt;/span>))&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#d14">&amp;#39;&amp;#34;&amp;gt;short url&amp;#39;&lt;/span>; &lt;span style="color:#999;font-weight:bold;font-style:italic">?&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Edge Rails no Windows Vista</title><link>https://leonardofaria.net/2008/09/10/edge-rails-no-windows-vista/</link><pubDate>Wed, 10 Sep 2008 02:26:40 -0300</pubDate><guid>https://leonardofaria.net/2008/09/10/edge-rails-no-windows-vista/</guid><description>&lt;p>Uma das mudanças do Rails 2.2 é não inclusão do bundle do MySQL, responsável por conectar seu projeto ao banco. &lt;a href="https://leonardofaria.net/2008/08/02/mudancas-no-rails-22/">Mês passado&lt;/a> eu postei sobre isso e hoje, ao tentar instalar o gem do MySQL no Windows Vista de um co-worker, me deparei com um problema na DLL libmySQL.dll.&lt;/p>
&lt;p>A solução encontrada foi copiar esse arquivo (geralmente em C:\Program Files\MySQL\MySQL Server 4.1\bin) para a pasta bin do Ruby (por exemplo: C:\ruby\bin).&lt;/p>
&lt;p>Que fique documentado ;)&lt;/p></description></item></channel></rss>